2017-09-19 22:57:26,530 session.py[line:105] INFO local variable 'hmac_key_byte' referenced before assignment
2017-09-19 23:00:44,749 session.py[line:104] INFO local variable 'hmac_key_byte' referenced before assignment
2017-09-19 23:45:34,821 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:48:01,478 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:53:13,430 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:53:27,297 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:54:42,982 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:56:12,999 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:56:29,560 testHandler.py[line:27] INFO {"password":"113","username":"abdc"}
2017-09-19 23:59:28,172 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:01:24,521 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:02:32,584 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:02:41,553 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:02:48,889 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:06:10,317 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:07:45,707 testHandler.py[line:27] INFO {"username":"abdc","password":"113"}
2017-09-20 00:09:17,672 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:10:43,141 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:10:59,786 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:11:13,700 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:11:51,134 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:13:46,283 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:14:08,508 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:14:14,394 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:14:41,721 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:14:45,278 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:16:03,108 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:16:26,550 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:17:44,594 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 00:20:36,505 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:21:01,077 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:21:12,945 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:26:04,083 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:29:33,982 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:30:05,193 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:31:11,822 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 00:32:26,212 testHandler.py[line:28] INFO {"password": "113", "username": "abdc"}
2017-09-20 09:54:37,478 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 09:56:30,558 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 09:56:45,184 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 09:59:19,331 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 10:02:31,770 session.py[line:74] INFO flag:True
2017-09-20 10:02:31,965 testHandler.py[line:28] INFO {"username": "abdc", "password": "113"}
2017-09-20 15:49:04,884 test.py[line:13] INFO <Database.entity.vip.Vip object at 0x1037d6d30>
2017-09-20 16:05:20,570 test.py[line:13] INFO <Database.entity.vip.Vip object at 0x1037d5d30>
2017-09-20 17:28:09,525 test.py[line:13] INFO <Database.entity.vip.Vip object at 0x103801d68>
2017-09-20 17:33:16,807 test.py[line:13] INFO <Database.entity.vip.Vip object at 0x103801e10>
2017-09-21 14:41:34,147 db_link.py[line:44] INFO abc
2017-09-21 14:42:49,991 db_link.py[line:44] INFO abc
2017-09-21 14:44:22,404 db_link.py[line:44] INFO abc
2017-09-21 14:46:00,881 db_link.py[line:44] INFO abc
2017-09-21 14:48:04,106 db_link.py[line:44] INFO abc
2017-09-21 14:49:04,071 db_link.py[line:44] INFO abc
2017-09-21 22:45:10,222 db_link.py[line:44] INFO abc
2017-09-21 22:46:45,327 db_link.py[line:44] INFO abc
2017-09-21 22:47:00,644 db_link.py[line:47] INFO I can auto assembling !
2017-09-21 23:29:20,363 db_operation.py[line:21] INFO row_id:1
2017-09-21 23:29:20,363 db_operation.py[line:21] INFO row_id:2
2017-09-21 23:29:20,363 db_operation.py[line:21] INFO row_id:3
2017-09-21 23:29:20,363 db_operation.py[line:21] INFO row_id:6
2017-09-21 23:29:20,364 db_operation.py[line:21] INFO row_id:8
2017-09-21 23:32:41,579 db_operation.py[line:27] INFO row_id: 1
2017-09-21 23:32:41,580 db_operation.py[line:27] INFO row_id: 2
2017-09-21 23:32:41,580 db_operation.py[line:27] INFO row_id: 3
2017-09-21 23:32:41,580 db_operation.py[line:27] INFO row_id: 6
2017-09-21 23:32:41,580 db_operation.py[line:27] INFO row_id: 8
2017-09-21 23:49:03,128 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-21 23:49:03,128 log.py[line:109] INFO {}
2017-09-21 23:49:03,131 log.py[line:109] INFO SELECT DATABASE()
2017-09-21 23:49:03,131 log.py[line:109] INFO {}
2017-09-21 23:49:03,131 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-21 23:49:03,132 log.py[line:109] INFO {}
2017-09-21 23:49:03,133 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-21 23:49:03,133 log.py[line:109] INFO {}
2017-09-21 23:49:03,134 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-21 23:49:03,134 log.py[line:109] INFO {}
2017-09-21 23:49:03,135 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-21 23:49:03,135 log.py[line:109] INFO {}
2017-09-21 23:49:03,136 log.py[line:109] INFO DESCRIBE `vip`
2017-09-21 23:49:03,136 log.py[line:109] INFO {}
2017-09-21 23:49:03,137 log.py[line:109] INFO DESCRIBE `cus`
2017-09-21 23:49:03,137 log.py[line:109] INFO {}
2017-09-21 23:49:03,142 log.py[line:109] INFO BEGIN (implicit)
2017-09-21 23:49:03,143 log.py[line:109] INFO SELECT anon_1.cus_id AS anon_1_cus_id, anon_1.cus_verification AS anon_1_cus_verification, anon_1.cus_cus_hobby AS anon_1_cus_cus_hobby 
FROM (SELECT cus.id AS cus_id, cus.verification AS cus_verification, cus.cus_hobby AS cus_cus_hobby 
FROM cus 
WHERE cus.cus_hobby = %(cus_hobby_1)s 
 LIMIT %(param_1)s) AS anon_1
2017-09-21 23:49:03,143 log.py[line:109] INFO {'cus_hobby_1': '哈林', 'param_1': 5}
2017-09-21 23:49:03,145 db_operation.py[line:27] INFO row_id: 1
2017-09-21 23:49:03,145 db_operation.py[line:27] INFO row_id: 2
2017-09-21 23:49:03,145 db_operation.py[line:27] INFO row_id: 3
2017-09-21 23:49:03,145 db_operation.py[line:27] INFO row_id: 6
2017-09-21 23:49:03,145 db_operation.py[line:27] INFO row_id: 8
2017-09-22 13:18:06,962 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 13:18:06,971 log.py[line:109] INFO {}
2017-09-22 13:18:06,973 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 13:18:06,973 log.py[line:109] INFO {}
2017-09-22 13:18:06,974 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 13:18:06,974 log.py[line:109] INFO {}
2017-09-22 13:18:06,976 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 13:18:06,976 log.py[line:109] INFO {}
2017-09-22 13:18:06,977 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 13:18:06,977 log.py[line:109] INFO {}
2017-09-22 13:18:06,977 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 13:18:06,977 log.py[line:109] INFO {}
2017-09-22 13:18:06,979 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 13:18:06,979 log.py[line:109] INFO {}
2017-09-22 13:18:07,001 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:07,002 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 13:18:07,002 log.py[line:109] INFO {}
2017-09-22 13:18:07,003 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 13:18:07,003 log.py[line:109] INFO {}
2017-09-22 13:18:07,003 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:07,004 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 13:18:07,004 log.py[line:109] INFO {}
2017-09-22 13:18:07,005 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 13:18:07,005 log.py[line:109] INFO {}
2017-09-22 13:18:07,005 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:25,401 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 13:18:25,401 log.py[line:109] INFO {}
2017-09-22 13:18:25,403 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 13:18:25,403 log.py[line:109] INFO {}
2017-09-22 13:18:25,404 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 13:18:25,404 log.py[line:109] INFO {}
2017-09-22 13:18:25,406 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 13:18:25,406 log.py[line:109] INFO {}
2017-09-22 13:18:25,407 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 13:18:25,407 log.py[line:109] INFO {}
2017-09-22 13:18:25,408 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 13:18:25,408 log.py[line:109] INFO {}
2017-09-22 13:18:25,409 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 13:18:25,409 log.py[line:109] INFO {}
2017-09-22 13:18:25,410 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 13:18:25,410 log.py[line:109] INFO {}
2017-09-22 13:18:25,411 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:25,411 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 13:18:25,411 log.py[line:109] INFO {}
2017-09-22 13:18:25,412 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:25,412 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 13:18:25,412 log.py[line:109] INFO {}
2017-09-22 13:18:25,413 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 13:18:25,413 log.py[line:109] INFO {}
2017-09-22 13:18:25,414 log.py[line:109] INFO ROLLBACK
2017-09-22 13:18:25,415 log.py[line:109] INFO 
CREATE TABLE course (
	cou_id INTEGER NOT NULL AUTO_INCREMENT, 
	cou_name VARCHAR(20), 
	PRIMARY KEY (cou_id)
)CHARSET=utf8


2017-09-22 13:18:25,415 log.py[line:109] INFO {}
2017-09-22 13:18:25,536 log.py[line:109] INFO COMMIT
2017-09-22 13:18:25,536 log.py[line:109] INFO 
CREATE TABLE student (
	stu_id INTEGER NOT NULL AUTO_INCREMENT, 
	stu_name VARCHAR(10), 
	stu_age INTEGER, 
	PRIMARY KEY (stu_id)
)CHARSET=utf8


2017-09-22 13:18:25,537 log.py[line:109] INFO {}
2017-09-22 13:18:25,731 log.py[line:109] INFO COMMIT
2017-09-22 13:18:25,738 log.py[line:109] INFO 
CREATE TABLE grade (
	grade_id INTEGER NOT NULL AUTO_INCREMENT, 
	grade_stu_id INTEGER, 
	grade_cou_id INTEGER, 
	score FLOAT, 
	PRIMARY KEY (grade_id), 
	FOREIGN KEY(grade_stu_id) REFERENCES student (stu_id), 
	FOREIGN KEY(grade_cou_id) REFERENCES course (cou_id)
)CHARSET=utf8


2017-09-22 13:18:25,738 log.py[line:109] INFO {}
2017-09-22 13:18:25,850 log.py[line:109] INFO COMMIT
2017-09-22 13:34:17,225 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 13:34:17,225 log.py[line:109] INFO {}
2017-09-22 13:34:17,227 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 13:34:17,227 log.py[line:109] INFO {}
2017-09-22 13:34:17,228 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 13:34:17,228 log.py[line:109] INFO {}
2017-09-22 13:34:17,230 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 13:34:17,230 log.py[line:109] INFO {}
2017-09-22 13:34:17,231 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 13:34:17,231 log.py[line:109] INFO {}
2017-09-22 13:34:17,232 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 13:34:17,232 log.py[line:109] INFO {}
2017-09-22 13:34:17,233 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 13:34:17,233 log.py[line:109] INFO {}
2017-09-22 13:34:17,234 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 13:34:17,234 log.py[line:109] INFO {}
2017-09-22 13:34:17,235 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 13:34:17,235 log.py[line:109] INFO {}
2017-09-22 13:34:17,236 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 13:34:17,236 log.py[line:109] INFO {}
2017-09-22 13:34:17,237 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 13:34:17,237 log.py[line:109] INFO {}
2017-09-22 13:34:17,251 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 13:34:17,252 log.py[line:109] INFO SELECT anon_1.cus_id AS anon_1_cus_id, anon_1.cus_verification AS anon_1_cus_verification, anon_1.cus_cus_hobby AS anon_1_cus_cus_hobby 
FROM (SELECT cus.id AS cus_id, cus.verification AS cus_verification, cus.cus_hobby AS cus_cus_hobby 
FROM cus 
WHERE cus.cus_hobby = %(cus_hobby_1)s 
 LIMIT %(param_1)s) AS anon_1
2017-09-22 13:34:17,252 log.py[line:109] INFO {'param_1': 5, 'cus_hobby_1': '哈林'}
2017-09-22 13:34:17,253 db_operation.py[line:27] INFO row_id: 1
2017-09-22 13:34:17,253 db_operation.py[line:27] INFO row_id: 2
2017-09-22 13:34:17,253 db_operation.py[line:27] INFO row_id: 3
2017-09-22 13:34:17,254 db_operation.py[line:27] INFO row_id: 6
2017-09-22 13:34:17,254 db_operation.py[line:27] INFO row_id: 8
2017-09-22 13:34:48,268 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 13:34:48,268 log.py[line:109] INFO {}
2017-09-22 13:34:48,270 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 13:34:48,270 log.py[line:109] INFO {}
2017-09-22 13:34:48,270 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 13:34:48,271 log.py[line:109] INFO {}
2017-09-22 13:34:48,272 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 13:34:48,272 log.py[line:109] INFO {}
2017-09-22 13:34:48,273 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 13:34:48,273 log.py[line:109] INFO {}
2017-09-22 13:34:48,274 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 13:34:48,274 log.py[line:109] INFO {}
2017-09-22 13:34:48,275 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 13:34:48,275 log.py[line:109] INFO {}
2017-09-22 13:34:48,276 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 13:34:48,276 log.py[line:109] INFO {}
2017-09-22 13:34:48,277 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 13:34:48,277 log.py[line:109] INFO {}
2017-09-22 13:34:48,278 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 13:34:48,279 log.py[line:109] INFO {}
2017-09-22 13:34:48,279 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 13:34:48,279 log.py[line:109] INFO {}
2017-09-22 13:34:48,286 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 13:34:48,287 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student INNER JOIN grade ON student.stu_id = grade.grade_stu_id
2017-09-22 13:34:48,287 log.py[line:109] INFO {}
2017-09-22 14:25:48,961 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:25:48,969 log.py[line:109] INFO {}
2017-09-22 14:25:48,971 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:25:48,972 log.py[line:109] INFO {}
2017-09-22 14:25:48,972 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:25:48,973 log.py[line:109] INFO {}
2017-09-22 14:25:48,974 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:25:48,974 log.py[line:109] INFO {}
2017-09-22 14:25:48,975 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:25:48,975 log.py[line:109] INFO {}
2017-09-22 14:25:48,976 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:25:48,976 log.py[line:109] INFO {}
2017-09-22 14:25:48,977 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:25:48,977 log.py[line:109] INFO {}
2017-09-22 14:25:48,978 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:25:48,978 log.py[line:109] INFO {}
2017-09-22 14:25:48,979 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:25:48,979 log.py[line:109] INFO {}
2017-09-22 14:25:48,980 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:25:48,980 log.py[line:109] INFO {}
2017-09-22 14:25:48,981 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:25:48,981 log.py[line:109] INFO {}
2017-09-22 14:25:48,983 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:25:48,984 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, grade.score AS grade_score, course.cou_name AS course_cou_name 
FROM grade, student INNER JOIN course ON grade.grade_cou_id = course.cou_id 
WHERE student.stu_id = grade.grade_stu_id
2017-09-22 14:25:48,984 log.py[line:109] INFO {}
2017-09-22 14:26:45,935 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:26:45,935 log.py[line:109] INFO {}
2017-09-22 14:26:45,937 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:26:45,937 log.py[line:109] INFO {}
2017-09-22 14:26:45,938 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:26:45,938 log.py[line:109] INFO {}
2017-09-22 14:26:45,940 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:26:45,940 log.py[line:109] INFO {}
2017-09-22 14:26:45,941 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:26:45,941 log.py[line:109] INFO {}
2017-09-22 14:26:45,941 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:26:45,942 log.py[line:109] INFO {}
2017-09-22 14:26:45,943 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:26:45,943 log.py[line:109] INFO {}
2017-09-22 14:26:45,944 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:26:45,944 log.py[line:109] INFO {}
2017-09-22 14:26:45,945 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:26:45,945 log.py[line:109] INFO {}
2017-09-22 14:26:45,946 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:26:45,946 log.py[line:109] INFO {}
2017-09-22 14:26:45,947 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:26:45,947 log.py[line:109] INFO {}
2017-09-22 14:26:45,949 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:26:45,950 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, grade.score AS grade_score, course.cou_name AS course_cou_name 
FROM grade, student INNER JOIN course ON grade.grade_cou_id = course.cou_id 
WHERE student.stu_id = grade.grade_stu_id
2017-09-22 14:26:45,950 log.py[line:109] INFO {}
2017-09-22 14:30:24,070 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:30:24,070 log.py[line:109] INFO {}
2017-09-22 14:30:24,073 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:30:24,073 log.py[line:109] INFO {}
2017-09-22 14:30:24,074 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:30:24,074 log.py[line:109] INFO {}
2017-09-22 14:30:24,076 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:30:24,076 log.py[line:109] INFO {}
2017-09-22 14:30:24,078 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:30:24,078 log.py[line:109] INFO {}
2017-09-22 14:30:24,079 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:30:24,080 log.py[line:109] INFO {}
2017-09-22 14:30:24,082 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:30:24,082 log.py[line:109] INFO {}
2017-09-22 14:30:24,083 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:30:24,083 log.py[line:109] INFO {}
2017-09-22 14:30:24,084 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:30:24,084 log.py[line:109] INFO {}
2017-09-22 14:30:24,085 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:30:24,085 log.py[line:109] INFO {}
2017-09-22 14:30:24,086 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:30:24,086 log.py[line:109] INFO {}
2017-09-22 14:32:57,908 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:32:57,908 log.py[line:109] INFO {}
2017-09-22 14:32:57,910 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:32:57,910 log.py[line:109] INFO {}
2017-09-22 14:32:57,911 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:32:57,911 log.py[line:109] INFO {}
2017-09-22 14:32:57,913 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:32:57,913 log.py[line:109] INFO {}
2017-09-22 14:32:57,914 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:32:57,914 log.py[line:109] INFO {}
2017-09-22 14:32:57,914 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:32:57,915 log.py[line:109] INFO {}
2017-09-22 14:32:57,916 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:32:57,916 log.py[line:109] INFO {}
2017-09-22 14:32:57,917 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:32:57,917 log.py[line:109] INFO {}
2017-09-22 14:32:57,918 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:32:57,918 log.py[line:109] INFO {}
2017-09-22 14:32:57,919 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:32:57,919 log.py[line:109] INFO {}
2017-09-22 14:32:57,920 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:32:57,920 log.py[line:109] INFO {}
2017-09-22 14:32:57,922 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:32:57,923 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score, course.cou_name AS course_cou_name 
FROM grade INNER JOIN student ON grade.grade_stu_id = student.stu_id INNER JOIN course ON grade.grade_cou_id = course.cou_id
2017-09-22 14:32:57,923 log.py[line:109] INFO {}
2017-09-22 14:47:37,494 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:47:37,494 log.py[line:109] INFO {}
2017-09-22 14:47:37,496 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:47:37,497 log.py[line:109] INFO {}
2017-09-22 14:47:37,497 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:47:37,497 log.py[line:109] INFO {}
2017-09-22 14:47:37,499 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:47:37,499 log.py[line:109] INFO {}
2017-09-22 14:47:37,500 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:47:37,500 log.py[line:109] INFO {}
2017-09-22 14:47:37,501 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:47:37,501 log.py[line:109] INFO {}
2017-09-22 14:47:37,502 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:47:37,502 log.py[line:109] INFO {}
2017-09-22 14:47:37,503 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:47:37,503 log.py[line:109] INFO {}
2017-09-22 14:47:37,504 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:47:37,504 log.py[line:109] INFO {}
2017-09-22 14:47:37,505 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:47:37,505 log.py[line:109] INFO {}
2017-09-22 14:47:37,506 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:47:37,506 log.py[line:109] INFO {}
2017-09-22 14:47:37,508 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:47:37,509 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, grade.score AS grade_score 
FROM student INNER JOIN grade ON grade.grade_stu_id = student.stu_id
2017-09-22 14:47:37,509 log.py[line:109] INFO {}
2017-09-22 14:49:06,218 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:49:06,218 log.py[line:109] INFO {}
2017-09-22 14:49:06,222 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:49:06,223 log.py[line:109] INFO {}
2017-09-22 14:49:06,223 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:49:06,224 log.py[line:109] INFO {}
2017-09-22 14:49:06,225 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:49:06,225 log.py[line:109] INFO {}
2017-09-22 14:49:06,226 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:49:06,226 log.py[line:109] INFO {}
2017-09-22 14:49:06,227 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:49:06,227 log.py[line:109] INFO {}
2017-09-22 14:49:06,228 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:49:06,228 log.py[line:109] INFO {}
2017-09-22 14:49:06,229 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:49:06,229 log.py[line:109] INFO {}
2017-09-22 14:49:06,231 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:49:06,231 log.py[line:109] INFO {}
2017-09-22 14:49:06,233 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:49:06,233 log.py[line:109] INFO {}
2017-09-22 14:49:06,238 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:49:06,238 log.py[line:109] INFO {}
2017-09-22 14:49:55,692 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:49:55,692 log.py[line:109] INFO {}
2017-09-22 14:49:55,694 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:49:55,694 log.py[line:109] INFO {}
2017-09-22 14:49:55,695 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:49:55,695 log.py[line:109] INFO {}
2017-09-22 14:49:55,697 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:49:55,697 log.py[line:109] INFO {}
2017-09-22 14:49:55,698 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:49:55,698 log.py[line:109] INFO {}
2017-09-22 14:49:55,698 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:49:55,698 log.py[line:109] INFO {}
2017-09-22 14:49:55,700 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:49:55,700 log.py[line:109] INFO {}
2017-09-22 14:49:55,701 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:49:55,701 log.py[line:109] INFO {}
2017-09-22 14:49:55,702 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:49:55,702 log.py[line:109] INFO {}
2017-09-22 14:49:55,703 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:49:55,703 log.py[line:109] INFO {}
2017-09-22 14:49:55,704 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:49:55,704 log.py[line:109] INFO {}
2017-09-22 14:50:02,386 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:50:02,386 log.py[line:109] INFO {}
2017-09-22 14:50:02,388 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:50:02,388 log.py[line:109] INFO {}
2017-09-22 14:50:02,389 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:50:02,389 log.py[line:109] INFO {}
2017-09-22 14:50:02,391 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:50:02,391 log.py[line:109] INFO {}
2017-09-22 14:50:02,391 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:50:02,391 log.py[line:109] INFO {}
2017-09-22 14:50:02,392 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:50:02,392 log.py[line:109] INFO {}
2017-09-22 14:50:02,393 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:50:02,393 log.py[line:109] INFO {}
2017-09-22 14:50:02,394 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:50:02,395 log.py[line:109] INFO {}
2017-09-22 14:50:02,395 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:50:02,396 log.py[line:109] INFO {}
2017-09-22 14:50:02,396 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:50:02,397 log.py[line:109] INFO {}
2017-09-22 14:50:02,397 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:50:02,398 log.py[line:109] INFO {}
2017-09-22 14:50:02,399 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:50:02,400 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student
2017-09-22 14:50:02,400 log.py[line:109] INFO {}
2017-09-22 14:52:11,117 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 14:52:11,117 log.py[line:109] INFO {}
2017-09-22 14:52:11,119 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 14:52:11,119 log.py[line:109] INFO {}
2017-09-22 14:52:11,120 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 14:52:11,120 log.py[line:109] INFO {}
2017-09-22 14:52:11,122 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 14:52:11,122 log.py[line:109] INFO {}
2017-09-22 14:52:11,123 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 14:52:11,123 log.py[line:109] INFO {}
2017-09-22 14:52:11,123 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 14:52:11,124 log.py[line:109] INFO {}
2017-09-22 14:52:11,125 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 14:52:11,125 log.py[line:109] INFO {}
2017-09-22 14:52:11,126 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 14:52:11,126 log.py[line:109] INFO {}
2017-09-22 14:52:11,127 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 14:52:11,127 log.py[line:109] INFO {}
2017-09-22 14:52:11,128 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 14:52:11,128 log.py[line:109] INFO {}
2017-09-22 14:52:11,129 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 14:52:11,129 log.py[line:109] INFO {}
2017-09-22 14:52:11,131 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 14:52:11,131 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, course.cou_name AS course_cou_name 
FROM student, course
2017-09-22 14:52:11,131 log.py[line:109] INFO {}
2017-09-22 15:05:36,887 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:05:36,888 log.py[line:109] INFO {}
2017-09-22 15:05:36,890 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:05:36,890 log.py[line:109] INFO {}
2017-09-22 15:05:36,891 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:05:36,892 log.py[line:109] INFO {}
2017-09-22 15:05:36,898 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:05:36,898 log.py[line:109] INFO {}
2017-09-22 15:05:36,899 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:05:36,899 log.py[line:109] INFO {}
2017-09-22 15:05:36,900 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:05:36,900 log.py[line:109] INFO {}
2017-09-22 15:05:36,901 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:05:36,901 log.py[line:109] INFO {}
2017-09-22 15:05:36,902 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:05:36,902 log.py[line:109] INFO {}
2017-09-22 15:05:36,903 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:05:36,903 log.py[line:109] INFO {}
2017-09-22 15:05:36,904 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:05:36,904 log.py[line:109] INFO {}
2017-09-22 15:05:36,905 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:05:36,905 log.py[line:109] INFO {}
2017-09-22 15:06:46,004 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:06:46,004 log.py[line:109] INFO {}
2017-09-22 15:06:46,007 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:06:46,007 log.py[line:109] INFO {}
2017-09-22 15:06:46,009 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:06:46,009 log.py[line:109] INFO {}
2017-09-22 15:06:46,010 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:06:46,011 log.py[line:109] INFO {}
2017-09-22 15:06:46,011 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:06:46,012 log.py[line:109] INFO {}
2017-09-22 15:06:46,012 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:06:46,012 log.py[line:109] INFO {}
2017-09-22 15:06:46,014 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:06:46,014 log.py[line:109] INFO {}
2017-09-22 15:06:46,015 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:06:46,015 log.py[line:109] INFO {}
2017-09-22 15:06:46,016 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:06:46,016 log.py[line:109] INFO {}
2017-09-22 15:06:46,017 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:06:46,017 log.py[line:109] INFO {}
2017-09-22 15:06:46,018 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:06:46,018 log.py[line:109] INFO {}
2017-09-22 15:10:51,318 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:10:51,318 log.py[line:109] INFO {}
2017-09-22 15:10:51,320 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:10:51,320 log.py[line:109] INFO {}
2017-09-22 15:10:51,321 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:10:51,321 log.py[line:109] INFO {}
2017-09-22 15:10:51,323 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:10:51,323 log.py[line:109] INFO {}
2017-09-22 15:10:51,324 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:10:51,324 log.py[line:109] INFO {}
2017-09-22 15:10:51,324 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:10:51,324 log.py[line:109] INFO {}
2017-09-22 15:10:51,325 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:10:51,326 log.py[line:109] INFO {}
2017-09-22 15:10:51,327 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:10:51,327 log.py[line:109] INFO {}
2017-09-22 15:10:51,328 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:10:51,328 log.py[line:109] INFO {}
2017-09-22 15:10:51,329 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:10:51,329 log.py[line:109] INFO {}
2017-09-22 15:10:51,330 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:10:51,330 log.py[line:109] INFO {}
2017-09-22 15:12:17,106 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:12:17,106 log.py[line:109] INFO {}
2017-09-22 15:12:17,108 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:12:17,108 log.py[line:109] INFO {}
2017-09-22 15:12:17,109 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:12:17,110 log.py[line:109] INFO {}
2017-09-22 15:12:17,111 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:12:17,111 log.py[line:109] INFO {}
2017-09-22 15:12:17,112 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:12:17,112 log.py[line:109] INFO {}
2017-09-22 15:12:17,113 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:12:17,113 log.py[line:109] INFO {}
2017-09-22 15:12:17,114 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:12:17,114 log.py[line:109] INFO {}
2017-09-22 15:12:17,115 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:12:17,115 log.py[line:109] INFO {}
2017-09-22 15:12:17,117 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:12:17,117 log.py[line:109] INFO {}
2017-09-22 15:12:17,118 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:12:17,118 log.py[line:109] INFO {}
2017-09-22 15:12:17,119 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:12:17,119 log.py[line:109] INFO {}
2017-09-22 15:12:50,082 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:12:50,083 log.py[line:109] INFO {}
2017-09-22 15:12:50,085 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:12:50,085 log.py[line:109] INFO {}
2017-09-22 15:12:50,086 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:12:50,086 log.py[line:109] INFO {}
2017-09-22 15:12:50,087 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:12:50,087 log.py[line:109] INFO {}
2017-09-22 15:12:50,088 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:12:50,088 log.py[line:109] INFO {}
2017-09-22 15:12:50,089 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:12:50,089 log.py[line:109] INFO {}
2017-09-22 15:12:50,090 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:12:50,090 log.py[line:109] INFO {}
2017-09-22 15:12:50,091 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:12:50,091 log.py[line:109] INFO {}
2017-09-22 15:12:50,092 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:12:50,092 log.py[line:109] INFO {}
2017-09-22 15:12:50,093 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:12:50,093 log.py[line:109] INFO {}
2017-09-22 15:12:50,094 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:12:50,094 log.py[line:109] INFO {}
2017-09-22 15:12:50,096 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:12:50,097 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student, grade 
WHERE grade.grade_stu_id = student.stu_id AND grade.score > %(score_1)s
2017-09-22 15:12:50,097 log.py[line:109] INFO {'score_1': 70.0}
2017-09-22 15:15:39,072 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:15:39,072 log.py[line:109] INFO {}
2017-09-22 15:15:39,074 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:15:39,074 log.py[line:109] INFO {}
2017-09-22 15:15:39,075 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:15:39,075 log.py[line:109] INFO {}
2017-09-22 15:15:39,077 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:15:39,077 log.py[line:109] INFO {}
2017-09-22 15:15:39,078 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:15:39,078 log.py[line:109] INFO {}
2017-09-22 15:15:39,079 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:15:39,079 log.py[line:109] INFO {}
2017-09-22 15:15:39,080 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:15:39,080 log.py[line:109] INFO {}
2017-09-22 15:15:39,081 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:15:39,081 log.py[line:109] INFO {}
2017-09-22 15:15:39,082 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:15:39,082 log.py[line:109] INFO {}
2017-09-22 15:15:39,083 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:15:39,083 log.py[line:109] INFO {}
2017-09-22 15:15:39,084 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:15:39,084 log.py[line:109] INFO {}
2017-09-22 15:15:39,086 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:15:39,086 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student, grade 
WHERE grade.grade_stu_id = student.stu_id AND grade.score > %(score_1)s
2017-09-22 15:15:39,086 log.py[line:109] INFO {'score_1': 70.0}
2017-09-22 15:16:01,480 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:16:01,480 log.py[line:109] INFO {}
2017-09-22 15:16:01,485 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:16:01,485 log.py[line:109] INFO {}
2017-09-22 15:16:01,488 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:16:01,489 log.py[line:109] INFO {}
2017-09-22 15:16:01,494 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:16:01,495 log.py[line:109] INFO {}
2017-09-22 15:16:01,496 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:16:01,496 log.py[line:109] INFO {}
2017-09-22 15:16:01,497 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:16:01,497 log.py[line:109] INFO {}
2017-09-22 15:16:01,499 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:16:01,499 log.py[line:109] INFO {}
2017-09-22 15:16:01,500 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:16:01,500 log.py[line:109] INFO {}
2017-09-22 15:16:01,502 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:16:01,502 log.py[line:109] INFO {}
2017-09-22 15:16:01,503 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:16:01,503 log.py[line:109] INFO {}
2017-09-22 15:16:01,504 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:16:01,504 log.py[line:109] INFO {}
2017-09-22 15:32:19,999 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:32:20,000 log.py[line:109] INFO {}
2017-09-22 15:32:20,002 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:32:20,002 log.py[line:109] INFO {}
2017-09-22 15:32:20,003 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:32:20,003 log.py[line:109] INFO {}
2017-09-22 15:32:20,004 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:32:20,005 log.py[line:109] INFO {}
2017-09-22 15:32:20,005 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:32:20,005 log.py[line:109] INFO {}
2017-09-22 15:32:20,006 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:32:20,006 log.py[line:109] INFO {}
2017-09-22 15:32:20,007 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:32:20,007 log.py[line:109] INFO {}
2017-09-22 15:32:20,009 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:32:20,009 log.py[line:109] INFO {}
2017-09-22 15:32:20,010 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:32:20,010 log.py[line:109] INFO {}
2017-09-22 15:32:20,011 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:32:20,011 log.py[line:109] INFO {}
2017-09-22 15:32:20,011 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:32:20,012 log.py[line:109] INFO {}
2017-09-22 15:33:01,184 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:33:01,184 log.py[line:109] INFO {}
2017-09-22 15:33:01,186 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:33:01,186 log.py[line:109] INFO {}
2017-09-22 15:33:01,187 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:33:01,187 log.py[line:109] INFO {}
2017-09-22 15:33:01,189 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:33:01,189 log.py[line:109] INFO {}
2017-09-22 15:33:01,190 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:33:01,190 log.py[line:109] INFO {}
2017-09-22 15:33:01,191 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:33:01,191 log.py[line:109] INFO {}
2017-09-22 15:33:01,192 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:33:01,192 log.py[line:109] INFO {}
2017-09-22 15:33:01,193 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:33:01,193 log.py[line:109] INFO {}
2017-09-22 15:33:01,194 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:33:01,194 log.py[line:109] INFO {}
2017-09-22 15:33:01,195 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:33:01,195 log.py[line:109] INFO {}
2017-09-22 15:33:01,196 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:33:01,197 log.py[line:109] INFO {}
2017-09-22 15:33:58,852 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:33:58,852 log.py[line:109] INFO {}
2017-09-22 15:33:58,854 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:33:58,854 log.py[line:109] INFO {}
2017-09-22 15:33:58,855 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:33:58,855 log.py[line:109] INFO {}
2017-09-22 15:33:58,858 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:33:58,858 log.py[line:109] INFO {}
2017-09-22 15:33:58,859 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:33:58,859 log.py[line:109] INFO {}
2017-09-22 15:33:58,859 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:33:58,859 log.py[line:109] INFO {}
2017-09-22 15:33:58,861 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:33:58,861 log.py[line:109] INFO {}
2017-09-22 15:33:58,863 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:33:58,864 log.py[line:109] INFO {}
2017-09-22 15:33:58,866 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:33:58,866 log.py[line:109] INFO {}
2017-09-22 15:33:58,868 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:33:58,869 log.py[line:109] INFO {}
2017-09-22 15:33:58,871 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:33:58,871 log.py[line:109] INFO {}
2017-09-22 15:33:58,873 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:33:58,874 log.py[line:109] INFO SELECT vip.username AS vip_username 
FROM vip INNER JOIN cus ON cus.verification regexp %(verification_1)s
2017-09-22 15:33:58,874 log.py[line:109] INFO {'verification_1': '1$'}
2017-09-22 15:37:54,338 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:37:54,339 log.py[line:109] INFO {}
2017-09-22 15:37:54,341 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:37:54,341 log.py[line:109] INFO {}
2017-09-22 15:37:54,342 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:37:54,342 log.py[line:109] INFO {}
2017-09-22 15:37:54,344 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:37:54,344 log.py[line:109] INFO {}
2017-09-22 15:37:54,347 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:37:54,347 log.py[line:109] INFO {}
2017-09-22 15:37:54,348 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:37:54,348 log.py[line:109] INFO {}
2017-09-22 15:37:54,349 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:37:54,349 log.py[line:109] INFO {}
2017-09-22 15:37:54,350 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:37:54,350 log.py[line:109] INFO {}
2017-09-22 15:37:54,351 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:37:54,351 log.py[line:109] INFO {}
2017-09-22 15:37:54,352 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:37:54,352 log.py[line:109] INFO {}
2017-09-22 15:37:54,353 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:37:54,353 log.py[line:109] INFO {}
2017-09-22 15:37:54,355 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:37:54,356 log.py[line:109] INFO SELECT vip.username AS vip_username 
FROM vip INNER JOIN cus ON cus.verification regexp %(verification_1)s 
WHERE vip.hobby = cus.cus_hobby
2017-09-22 15:37:54,356 log.py[line:109] INFO {'verification_1': '1$'}
2017-09-22 15:38:58,971 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:38:58,971 log.py[line:109] INFO {}
2017-09-22 15:38:58,974 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:38:58,974 log.py[line:109] INFO {}
2017-09-22 15:38:58,975 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:38:58,975 log.py[line:109] INFO {}
2017-09-22 15:38:58,977 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:38:58,977 log.py[line:109] INFO {}
2017-09-22 15:38:58,978 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:38:58,978 log.py[line:109] INFO {}
2017-09-22 15:38:58,980 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:38:58,980 log.py[line:109] INFO {}
2017-09-22 15:38:58,983 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:38:58,983 log.py[line:109] INFO {}
2017-09-22 15:38:58,984 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:38:58,984 log.py[line:109] INFO {}
2017-09-22 15:38:58,985 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:38:58,985 log.py[line:109] INFO {}
2017-09-22 15:38:58,986 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:38:58,986 log.py[line:109] INFO {}
2017-09-22 15:38:58,987 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:38:58,987 log.py[line:109] INFO {}
2017-09-22 15:38:58,989 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:38:58,990 log.py[line:109] INFO SELECT vip.username AS vip_username 
FROM vip INNER JOIN cus ON cus.verification regexp %(verification_1)s 
WHERE vip.hobby = cus.cus_hobby
2017-09-22 15:38:58,990 log.py[line:109] INFO {'verification_1': '6%'}
2017-09-22 15:39:37,692 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:39:37,692 log.py[line:109] INFO {}
2017-09-22 15:39:37,696 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:39:37,696 log.py[line:109] INFO {}
2017-09-22 15:39:37,699 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:39:37,699 log.py[line:109] INFO {}
2017-09-22 15:39:37,702 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:39:37,702 log.py[line:109] INFO {}
2017-09-22 15:39:37,703 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:39:37,703 log.py[line:109] INFO {}
2017-09-22 15:39:37,704 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:39:37,704 log.py[line:109] INFO {}
2017-09-22 15:39:37,705 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:39:37,705 log.py[line:109] INFO {}
2017-09-22 15:39:37,706 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:39:37,706 log.py[line:109] INFO {}
2017-09-22 15:39:37,707 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:39:37,707 log.py[line:109] INFO {}
2017-09-22 15:39:37,708 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:39:37,708 log.py[line:109] INFO {}
2017-09-22 15:39:37,709 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:39:37,709 log.py[line:109] INFO {}
2017-09-22 15:39:37,711 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:39:37,712 log.py[line:109] INFO SELECT vip.username AS vip_username 
FROM vip INNER JOIN cus ON cus.verification regexp %(verification_1)s 
WHERE vip.hobby = cus.cus_hobby
2017-09-22 15:39:37,712 log.py[line:109] INFO {'verification_1': '6'}
2017-09-22 15:39:59,106 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:39:59,108 log.py[line:109] INFO {}
2017-09-22 15:39:59,113 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:39:59,113 log.py[line:109] INFO {}
2017-09-22 15:39:59,114 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:39:59,114 log.py[line:109] INFO {}
2017-09-22 15:39:59,117 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:39:59,117 log.py[line:109] INFO {}
2017-09-22 15:39:59,119 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:39:59,119 log.py[line:109] INFO {}
2017-09-22 15:39:59,120 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:39:59,120 log.py[line:109] INFO {}
2017-09-22 15:39:59,121 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:39:59,121 log.py[line:109] INFO {}
2017-09-22 15:39:59,122 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:39:59,122 log.py[line:109] INFO {}
2017-09-22 15:39:59,123 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:39:59,123 log.py[line:109] INFO {}
2017-09-22 15:39:59,124 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:39:59,125 log.py[line:109] INFO {}
2017-09-22 15:39:59,127 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:39:59,127 log.py[line:109] INFO {}
2017-09-22 15:39:59,131 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:39:59,132 log.py[line:109] INFO SELECT vip.username AS vip_username 
FROM vip INNER JOIN cus ON cus.verification regexp %(verification_1)s 
WHERE vip.hobby = cus.cus_hobby
2017-09-22 15:39:59,132 log.py[line:109] INFO {'verification_1': '3$'}
2017-09-22 15:40:44,143 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:40:44,143 log.py[line:109] INFO {}
2017-09-22 15:40:44,145 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:40:44,145 log.py[line:109] INFO {}
2017-09-22 15:40:44,146 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:40:44,146 log.py[line:109] INFO {}
2017-09-22 15:40:44,147 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:40:44,148 log.py[line:109] INFO {}
2017-09-22 15:40:44,148 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:40:44,148 log.py[line:109] INFO {}
2017-09-22 15:40:44,149 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:40:44,149 log.py[line:109] INFO {}
2017-09-22 15:40:44,150 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:40:44,150 log.py[line:109] INFO {}
2017-09-22 15:40:44,151 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:40:44,151 log.py[line:109] INFO {}
2017-09-22 15:40:44,152 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:40:44,152 log.py[line:109] INFO {}
2017-09-22 15:40:44,154 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:40:44,154 log.py[line:109] INFO {}
2017-09-22 15:40:44,155 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:40:44,155 log.py[line:109] INFO {}
2017-09-22 15:41:34,245 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:41:34,245 log.py[line:109] INFO {}
2017-09-22 15:41:34,247 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:41:34,247 log.py[line:109] INFO {}
2017-09-22 15:41:34,248 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:41:34,248 log.py[line:109] INFO {}
2017-09-22 15:41:34,250 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:41:34,250 log.py[line:109] INFO {}
2017-09-22 15:41:34,251 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:41:34,251 log.py[line:109] INFO {}
2017-09-22 15:41:34,252 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:41:34,252 log.py[line:109] INFO {}
2017-09-22 15:41:34,254 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:41:34,254 log.py[line:109] INFO {}
2017-09-22 15:41:34,256 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:41:34,256 log.py[line:109] INFO {}
2017-09-22 15:41:34,257 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:41:34,257 log.py[line:109] INFO {}
2017-09-22 15:41:34,258 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:41:34,258 log.py[line:109] INFO {}
2017-09-22 15:41:34,259 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:41:34,259 log.py[line:109] INFO {}
2017-09-22 15:42:11,652 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:42:11,653 log.py[line:109] INFO {}
2017-09-22 15:42:11,655 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:42:11,655 log.py[line:109] INFO {}
2017-09-22 15:42:11,656 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:42:11,656 log.py[line:109] INFO {}
2017-09-22 15:42:11,657 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:42:11,657 log.py[line:109] INFO {}
2017-09-22 15:42:11,658 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:42:11,658 log.py[line:109] INFO {}
2017-09-22 15:42:11,659 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:42:11,659 log.py[line:109] INFO {}
2017-09-22 15:42:11,660 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:42:11,660 log.py[line:109] INFO {}
2017-09-22 15:42:11,661 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:42:11,661 log.py[line:109] INFO {}
2017-09-22 15:42:11,662 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:42:11,662 log.py[line:109] INFO {}
2017-09-22 15:42:11,663 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:42:11,663 log.py[line:109] INFO {}
2017-09-22 15:42:11,664 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:42:11,664 log.py[line:109] INFO {}
2017-09-22 15:42:11,666 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:42:11,667 log.py[line:109] INFO SELECT cus.verification AS cus_verification, vip.username AS vip_username 
FROM cus INNER JOIN vip ON cus.verification regexp %(verification_1)s 
WHERE vip.hobby = cus.cus_hobby
2017-09-22 15:42:11,667 log.py[line:109] INFO {'verification_1': '3$'}
2017-09-22 15:43:39,184 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:43:39,184 log.py[line:109] INFO {}
2017-09-22 15:43:39,186 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:43:39,186 log.py[line:109] INFO {}
2017-09-22 15:43:39,187 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:43:39,187 log.py[line:109] INFO {}
2017-09-22 15:43:39,189 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:43:39,189 log.py[line:109] INFO {}
2017-09-22 15:43:39,190 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:43:39,190 log.py[line:109] INFO {}
2017-09-22 15:43:39,190 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:43:39,191 log.py[line:109] INFO {}
2017-09-22 15:43:39,192 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:43:39,192 log.py[line:109] INFO {}
2017-09-22 15:43:39,193 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:43:39,193 log.py[line:109] INFO {}
2017-09-22 15:43:39,194 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:43:39,194 log.py[line:109] INFO {}
2017-09-22 15:43:39,195 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:43:39,195 log.py[line:109] INFO {}
2017-09-22 15:43:39,196 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:43:39,196 log.py[line:109] INFO {}
2017-09-22 15:43:39,198 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:43:39,198 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score, course.cou_name AS course_cou_name 
FROM grade INNER JOIN student ON grade.grade_stu_id = student.stu_id INNER JOIN course ON grade.grade_cou_id = course.cou_id
2017-09-22 15:43:39,198 log.py[line:109] INFO {}
2017-09-22 15:44:37,118 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:44:37,118 log.py[line:109] INFO {}
2017-09-22 15:44:37,121 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:44:37,121 log.py[line:109] INFO {}
2017-09-22 15:44:37,123 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:44:37,123 log.py[line:109] INFO {}
2017-09-22 15:44:37,125 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:44:37,125 log.py[line:109] INFO {}
2017-09-22 15:44:37,127 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:44:37,127 log.py[line:109] INFO {}
2017-09-22 15:44:37,128 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:44:37,128 log.py[line:109] INFO {}
2017-09-22 15:44:37,129 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:44:37,130 log.py[line:109] INFO {}
2017-09-22 15:44:37,131 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:44:37,131 log.py[line:109] INFO {}
2017-09-22 15:44:37,132 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:44:37,132 log.py[line:109] INFO {}
2017-09-22 15:44:37,133 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:44:37,133 log.py[line:109] INFO {}
2017-09-22 15:44:37,134 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:44:37,134 log.py[line:109] INFO {}
2017-09-22 15:44:37,137 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:44:37,137 log.py[line:109] INFO SELECT course.cou_name AS course_cou_name, grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM course INNER JOIN student ON grade.grade_stu_id = student.stu_id INNER JOIN course ON grade.grade_cou_id = course.cou_id
2017-09-22 15:44:37,138 log.py[line:109] INFO {}
2017-09-22 15:47:11,208 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:47:11,208 log.py[line:109] INFO {}
2017-09-22 15:47:11,211 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:47:11,211 log.py[line:109] INFO {}
2017-09-22 15:47:11,212 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:47:11,212 log.py[line:109] INFO {}
2017-09-22 15:47:11,214 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:47:11,214 log.py[line:109] INFO {}
2017-09-22 15:47:11,215 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:47:11,215 log.py[line:109] INFO {}
2017-09-22 15:47:11,216 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:47:11,217 log.py[line:109] INFO {}
2017-09-22 15:47:11,220 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:47:11,221 log.py[line:109] INFO {}
2017-09-22 15:47:11,222 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:47:11,222 log.py[line:109] INFO {}
2017-09-22 15:47:11,223 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:47:11,224 log.py[line:109] INFO {}
2017-09-22 15:47:11,225 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:47:11,225 log.py[line:109] INFO {}
2017-09-22 15:47:11,226 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:47:11,226 log.py[line:109] INFO {}
2017-09-22 15:47:11,228 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:47:11,229 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, grade.score AS grade_score 
FROM student INNER JOIN grade ON grade.grade_stu_id = student.stu_id
2017-09-22 15:47:11,229 log.py[line:109] INFO {}
2017-09-22 15:47:28,313 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:47:28,313 log.py[line:109] INFO {}
2017-09-22 15:47:28,315 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:47:28,315 log.py[line:109] INFO {}
2017-09-22 15:47:28,316 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:47:28,316 log.py[line:109] INFO {}
2017-09-22 15:47:28,317 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:47:28,317 log.py[line:109] INFO {}
2017-09-22 15:47:28,318 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:47:28,318 log.py[line:109] INFO {}
2017-09-22 15:47:28,319 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:47:28,319 log.py[line:109] INFO {}
2017-09-22 15:47:28,320 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:47:28,320 log.py[line:109] INFO {}
2017-09-22 15:47:28,321 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:47:28,321 log.py[line:109] INFO {}
2017-09-22 15:47:28,322 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:47:28,322 log.py[line:109] INFO {}
2017-09-22 15:47:28,323 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:47:28,323 log.py[line:109] INFO {}
2017-09-22 15:47:28,324 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:47:28,324 log.py[line:109] INFO {}
2017-09-22 15:48:29,688 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:48:29,688 log.py[line:109] INFO {}
2017-09-22 15:48:29,690 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:48:29,690 log.py[line:109] INFO {}
2017-09-22 15:48:29,691 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:48:29,691 log.py[line:109] INFO {}
2017-09-22 15:48:29,692 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:48:29,692 log.py[line:109] INFO {}
2017-09-22 15:48:29,693 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:48:29,694 log.py[line:109] INFO {}
2017-09-22 15:48:29,695 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:48:29,695 log.py[line:109] INFO {}
2017-09-22 15:48:29,697 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:48:29,698 log.py[line:109] INFO {}
2017-09-22 15:48:29,700 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:48:29,700 log.py[line:109] INFO {}
2017-09-22 15:48:29,702 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:48:29,702 log.py[line:109] INFO {}
2017-09-22 15:48:29,710 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:48:29,710 log.py[line:109] INFO {}
2017-09-22 15:48:29,714 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:48:29,714 log.py[line:109] INFO {}
2017-09-22 15:48:29,725 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 15:48:29,728 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score, course.cou_name AS course_cou_name 
FROM student, grade INNER JOIN course ON grade.grade_cou_id = course.cou_id 
WHERE grade.grade_stu_id = student.stu_id
2017-09-22 15:48:29,728 log.py[line:109] INFO {}
2017-09-22 15:48:54,055 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 15:48:54,055 log.py[line:109] INFO {}
2017-09-22 15:48:54,057 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 15:48:54,057 log.py[line:109] INFO {}
2017-09-22 15:48:54,058 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 15:48:54,058 log.py[line:109] INFO {}
2017-09-22 15:48:54,060 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 15:48:54,060 log.py[line:109] INFO {}
2017-09-22 15:48:54,061 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 15:48:54,061 log.py[line:109] INFO {}
2017-09-22 15:48:54,061 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 15:48:54,062 log.py[line:109] INFO {}
2017-09-22 15:48:54,063 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 15:48:54,063 log.py[line:109] INFO {}
2017-09-22 15:48:54,064 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 15:48:54,064 log.py[line:109] INFO {}
2017-09-22 15:48:54,065 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 15:48:54,065 log.py[line:109] INFO {}
2017-09-22 15:48:54,066 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 15:48:54,066 log.py[line:109] INFO {}
2017-09-22 15:48:54,067 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 15:48:54,067 log.py[line:109] INFO {}
2017-09-22 16:47:45,714 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 16:47:45,715 log.py[line:109] INFO {}
2017-09-22 16:47:45,717 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 16:47:45,717 log.py[line:109] INFO {}
2017-09-22 16:47:45,718 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 16:47:45,718 log.py[line:109] INFO {}
2017-09-22 16:47:45,719 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 16:47:45,719 log.py[line:109] INFO {}
2017-09-22 16:47:45,720 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 16:47:45,720 log.py[line:109] INFO {}
2017-09-22 16:47:45,721 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 16:47:45,721 log.py[line:109] INFO {}
2017-09-22 16:47:45,722 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 16:47:45,722 log.py[line:109] INFO {}
2017-09-22 16:47:45,723 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 16:47:45,723 log.py[line:109] INFO {}
2017-09-22 16:47:45,724 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 16:47:45,724 log.py[line:109] INFO {}
2017-09-22 16:47:45,725 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 16:47:45,725 log.py[line:109] INFO {}
2017-09-22 16:47:45,726 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 16:47:45,726 log.py[line:109] INFO {}
2017-09-22 16:47:45,728 log.py[line:109] INFO BEGIN (implicit)
2017-09-22 16:47:45,729 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student, grade 
WHERE grade.grade_stu_id = student.stu_id AND grade.score > %(score_1)s
2017-09-22 16:47:45,729 log.py[line:109] INFO {'score_1': 70.0}
2017-09-22 16:53:31,731 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-22 16:53:31,731 log.py[line:109] INFO {}
2017-09-22 16:53:31,733 log.py[line:109] INFO SELECT DATABASE()
2017-09-22 16:53:31,733 log.py[line:109] INFO {}
2017-09-22 16:53:31,734 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-22 16:53:31,734 log.py[line:109] INFO {}
2017-09-22 16:53:31,736 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-22 16:53:31,736 log.py[line:109] INFO {}
2017-09-22 16:53:31,737 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-22 16:53:31,737 log.py[line:109] INFO {}
2017-09-22 16:53:31,738 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-22 16:53:31,738 log.py[line:109] INFO {}
2017-09-22 16:53:31,739 log.py[line:109] INFO DESCRIBE `vip`
2017-09-22 16:53:31,739 log.py[line:109] INFO {}
2017-09-22 16:53:31,741 log.py[line:109] INFO DESCRIBE `grade`
2017-09-22 16:53:31,741 log.py[line:109] INFO {}
2017-09-22 16:53:31,742 log.py[line:109] INFO DESCRIBE `course`
2017-09-22 16:53:31,742 log.py[line:109] INFO {}
2017-09-22 16:53:31,743 log.py[line:109] INFO DESCRIBE `student`
2017-09-22 16:53:31,743 log.py[line:109] INFO {}
2017-09-22 16:53:31,744 log.py[line:109] INFO DESCRIBE `cus`
2017-09-22 16:53:31,744 log.py[line:109] INFO {}
2017-09-23 11:28:55,688 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 11:28:55,688 log.py[line:109] INFO {}
2017-09-23 11:28:55,690 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 11:28:55,690 log.py[line:109] INFO {}
2017-09-23 11:28:55,691 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 11:28:55,691 log.py[line:109] INFO {}
2017-09-23 11:28:55,693 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 11:28:55,693 log.py[line:109] INFO {}
2017-09-23 11:28:55,693 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 11:28:55,694 log.py[line:109] INFO {}
2017-09-23 11:28:55,694 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 11:28:55,694 log.py[line:109] INFO {}
2017-09-23 11:28:55,695 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 11:28:55,696 log.py[line:109] INFO {}
2017-09-23 11:28:55,696 log.py[line:109] INFO ROLLBACK
2017-09-23 11:28:55,697 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 11:28:55,697 log.py[line:109] INFO {}
2017-09-23 11:28:55,697 log.py[line:109] INFO ROLLBACK
2017-09-23 11:28:55,698 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 11:28:55,698 log.py[line:109] INFO {}
2017-09-23 11:28:55,698 log.py[line:109] INFO ROLLBACK
2017-09-23 11:28:55,699 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 11:28:55,699 log.py[line:109] INFO {}
2017-09-23 11:28:55,699 log.py[line:109] INFO ROLLBACK
2017-09-23 11:28:55,700 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 11:28:55,700 log.py[line:109] INFO {}
2017-09-23 11:28:55,700 log.py[line:109] INFO ROLLBACK
2017-09-23 11:28:55,701 log.py[line:109] INFO 
CREATE TABLE course (
	cou_id INTEGER NOT NULL AUTO_INCREMENT, 
	cou_name VARCHAR(20), 
	PRIMARY KEY (cou_id)
)CHARSET=utf8


2017-09-23 11:28:55,701 log.py[line:109] INFO {}
2017-09-23 11:28:55,779 log.py[line:109] INFO COMMIT
2017-09-23 11:28:55,780 log.py[line:109] INFO 
CREATE TABLE vip (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	hobby VARCHAR(20), 
	PRIMARY KEY (id), 
	UNIQUE (hobby)
)CHARSET=utf8


2017-09-23 11:28:55,780 log.py[line:109] INFO {}
2017-09-23 11:28:56,024 log.py[line:109] INFO COMMIT
2017-09-23 11:28:56,025 log.py[line:109] INFO 
CREATE TABLE student (
	stu_id INTEGER NOT NULL AUTO_INCREMENT, 
	stu_name VARCHAR(10), 
	stu_age INTEGER, 
	PRIMARY KEY (stu_id)
)CHARSET=utf8


2017-09-23 11:28:56,025 log.py[line:109] INFO {}
2017-09-23 11:28:56,124 log.py[line:109] INFO COMMIT
2017-09-23 11:28:56,125 log.py[line:109] INFO 
CREATE TABLE grade (
	grade_id INTEGER NOT NULL AUTO_INCREMENT, 
	grade_stu_id INTEGER, 
	grade_cou_id INTEGER, 
	score FLOAT, 
	PRIMARY KEY (grade_id), 
	FOREIGN KEY(grade_stu_id) REFERENCES student (stu_id), 
	FOREIGN KEY(grade_cou_id) REFERENCES course (cou_id)
)CHARSET=utf8


2017-09-23 11:28:56,125 log.py[line:109] INFO {}
2017-09-23 11:28:56,240 log.py[line:109] INFO COMMIT
2017-09-23 11:28:56,242 log.py[line:109] INFO 
CREATE TABLE cus (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	verification VARCHAR(20), 
	cus_hobby VARCHAR(20), 
	PRIMARY KEY (id), 
	FOREIGN KEY(cus_hobby) REFERENCES vip (hobby)
)CHARSET=utf8


2017-09-23 11:28:56,243 log.py[line:109] INFO {}
2017-09-23 11:28:56,340 log.py[line:109] INFO COMMIT
2017-09-23 15:41:25,767 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:41:25,767 log.py[line:109] INFO {}
2017-09-23 15:41:25,769 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:41:25,769 log.py[line:109] INFO {}
2017-09-23 15:41:25,770 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:41:25,770 log.py[line:109] INFO {}
2017-09-23 15:41:25,772 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:41:25,772 log.py[line:109] INFO {}
2017-09-23 15:41:25,773 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:41:25,773 log.py[line:109] INFO {}
2017-09-23 15:41:25,774 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:41:25,774 log.py[line:109] INFO {}
2017-09-23 15:41:25,775 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:41:25,775 log.py[line:109] INFO {}
2017-09-23 15:41:25,790 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:41:25,790 log.py[line:109] INFO {}
2017-09-23 15:41:25,792 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:41:25,792 log.py[line:109] INFO {}
2017-09-23 15:41:25,793 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:41:25,793 log.py[line:109] INFO {}
2017-09-23 15:41:25,794 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:41:25,794 log.py[line:109] INFO {}
2017-09-23 15:41:29,427 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:41:29,427 log.py[line:109] INFO {}
2017-09-23 15:41:29,429 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:41:29,429 log.py[line:109] INFO {}
2017-09-23 15:41:29,430 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:41:29,431 log.py[line:109] INFO {}
2017-09-23 15:41:29,432 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:41:29,432 log.py[line:109] INFO {}
2017-09-23 15:41:29,433 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:41:29,433 log.py[line:109] INFO {}
2017-09-23 15:41:29,434 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:41:29,434 log.py[line:109] INFO {}
2017-09-23 15:41:29,435 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:41:29,435 log.py[line:109] INFO {}
2017-09-23 15:41:29,437 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:41:29,437 log.py[line:109] INFO {}
2017-09-23 15:41:29,438 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:41:29,439 log.py[line:109] INFO {}
2017-09-23 15:41:29,440 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:41:29,440 log.py[line:109] INFO {}
2017-09-23 15:41:29,442 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:41:29,442 log.py[line:109] INFO {}
2017-09-23 15:42:07,150 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:42:07,150 log.py[line:109] INFO {}
2017-09-23 15:42:07,153 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:42:07,153 log.py[line:109] INFO {}
2017-09-23 15:42:07,154 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:42:07,154 log.py[line:109] INFO {}
2017-09-23 15:42:07,156 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:42:07,156 log.py[line:109] INFO {}
2017-09-23 15:42:07,157 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:42:07,157 log.py[line:109] INFO {}
2017-09-23 15:42:07,158 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:42:07,158 log.py[line:109] INFO {}
2017-09-23 15:42:07,160 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:42:07,160 log.py[line:109] INFO {}
2017-09-23 15:42:07,161 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:42:07,161 log.py[line:109] INFO {}
2017-09-23 15:42:07,162 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:42:07,163 log.py[line:109] INFO {}
2017-09-23 15:42:07,164 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:42:07,164 log.py[line:109] INFO {}
2017-09-23 15:42:07,166 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:42:07,166 log.py[line:109] INFO {}
2017-09-23 15:43:29,267 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:43:29,267 log.py[line:109] INFO {}
2017-09-23 15:43:29,269 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:43:29,270 log.py[line:109] INFO {}
2017-09-23 15:43:29,270 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:43:29,270 log.py[line:109] INFO {}
2017-09-23 15:43:29,272 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:43:29,272 log.py[line:109] INFO {}
2017-09-23 15:43:29,273 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:43:29,273 log.py[line:109] INFO {}
2017-09-23 15:43:29,274 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:43:29,274 log.py[line:109] INFO {}
2017-09-23 15:43:29,275 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:43:29,275 log.py[line:109] INFO {}
2017-09-23 15:43:29,276 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:43:29,277 log.py[line:109] INFO {}
2017-09-23 15:43:29,278 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:43:29,278 log.py[line:109] INFO {}
2017-09-23 15:43:29,279 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:43:29,279 log.py[line:109] INFO {}
2017-09-23 15:43:29,280 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:43:29,280 log.py[line:109] INFO {}
2017-09-23 15:45:05,568 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:45:05,588 log.py[line:109] INFO {}
2017-09-23 15:45:05,590 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:45:05,590 log.py[line:109] INFO {}
2017-09-23 15:45:05,591 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:45:05,591 log.py[line:109] INFO {}
2017-09-23 15:45:05,593 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:45:05,593 log.py[line:109] INFO {}
2017-09-23 15:45:05,594 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:45:05,594 log.py[line:109] INFO {}
2017-09-23 15:45:05,594 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:45:05,595 log.py[line:109] INFO {}
2017-09-23 15:45:05,596 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:45:05,596 log.py[line:109] INFO {}
2017-09-23 15:45:05,597 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:45:05,597 log.py[line:109] INFO {}
2017-09-23 15:45:05,598 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:45:05,598 log.py[line:109] INFO {}
2017-09-23 15:45:05,599 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:45:05,599 log.py[line:109] INFO {}
2017-09-23 15:45:05,600 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:45:05,600 log.py[line:109] INFO {}
2017-09-23 15:46:07,690 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:46:07,690 log.py[line:109] INFO {}
2017-09-23 15:46:07,692 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:46:07,692 log.py[line:109] INFO {}
2017-09-23 15:46:07,694 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:46:07,694 log.py[line:109] INFO {}
2017-09-23 15:46:07,695 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:46:07,696 log.py[line:109] INFO {}
2017-09-23 15:46:07,696 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:46:07,697 log.py[line:109] INFO {}
2017-09-23 15:46:07,697 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:46:07,698 log.py[line:109] INFO {}
2017-09-23 15:46:07,699 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:46:07,699 log.py[line:109] INFO {}
2017-09-23 15:46:07,700 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:46:07,700 log.py[line:109] INFO {}
2017-09-23 15:46:07,701 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:46:07,701 log.py[line:109] INFO {}
2017-09-23 15:46:07,702 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:46:07,702 log.py[line:109] INFO {}
2017-09-23 15:46:07,703 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:46:07,703 log.py[line:109] INFO {}
2017-09-23 15:47:40,569 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:47:40,585 log.py[line:109] INFO {}
2017-09-23 15:47:40,589 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:47:40,589 log.py[line:109] INFO {}
2017-09-23 15:47:40,592 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:47:40,592 log.py[line:109] INFO {}
2017-09-23 15:47:40,597 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:47:40,597 log.py[line:109] INFO {}
2017-09-23 15:47:40,599 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:47:40,599 log.py[line:109] INFO {}
2017-09-23 15:47:40,601 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:47:40,602 log.py[line:109] INFO {}
2017-09-23 15:47:40,605 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:47:40,605 log.py[line:109] INFO {}
2017-09-23 15:47:40,608 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:47:40,609 log.py[line:109] INFO {}
2017-09-23 15:47:40,612 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:47:40,613 log.py[line:109] INFO {}
2017-09-23 15:47:40,616 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:47:40,616 log.py[line:109] INFO {}
2017-09-23 15:47:40,620 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:47:40,620 log.py[line:109] INFO {}
2017-09-23 15:49:35,138 log.py[line:109] INFO BEGIN (implicit)
2017-09-23 15:49:35,182 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:49:35,182 log.py[line:109] INFO {'grade_cou_id_1': 1}
2017-09-23 15:49:35,186 db_operation.py[line:72] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:49:35,188 db_operation.py[line:72] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:49:59,985 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:49:59,986 log.py[line:109] INFO {}
2017-09-23 15:49:59,992 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:49:59,993 log.py[line:109] INFO {}
2017-09-23 15:49:59,997 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:49:59,997 log.py[line:109] INFO {}
2017-09-23 15:50:00,002 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:50:00,002 log.py[line:109] INFO {}
2017-09-23 15:50:00,005 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:50:00,005 log.py[line:109] INFO {}
2017-09-23 15:50:00,007 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:50:00,008 log.py[line:109] INFO {}
2017-09-23 15:50:00,011 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:50:00,011 log.py[line:109] INFO {}
2017-09-23 15:50:00,015 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:50:00,015 log.py[line:109] INFO {}
2017-09-23 15:50:00,017 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:50:00,018 log.py[line:109] INFO {}
2017-09-23 15:50:00,020 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:50:00,021 log.py[line:109] INFO {}
2017-09-23 15:50:00,023 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:50:00,024 log.py[line:109] INFO {}
2017-09-23 15:51:53,058 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:51:53,066 log.py[line:109] INFO {}
2017-09-23 15:51:53,071 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:51:53,071 log.py[line:109] INFO {}
2017-09-23 15:51:53,073 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:51:53,074 log.py[line:109] INFO {}
2017-09-23 15:51:53,077 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:51:53,077 log.py[line:109] INFO {}
2017-09-23 15:51:53,080 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:51:53,080 log.py[line:109] INFO {}
2017-09-23 15:51:53,082 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:51:53,083 log.py[line:109] INFO {}
2017-09-23 15:51:53,086 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:51:53,086 log.py[line:109] INFO {}
2017-09-23 15:51:53,089 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:51:53,089 log.py[line:109] INFO {}
2017-09-23 15:51:53,092 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:51:53,092 log.py[line:109] INFO {}
2017-09-23 15:51:53,095 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:51:53,095 log.py[line:109] INFO {}
2017-09-23 15:51:53,098 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:51:53,098 log.py[line:109] INFO {}
2017-09-23 15:52:10,270 log.py[line:109] INFO BEGIN (implicit)
2017-09-23 15:52:10,272 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:52:10,273 log.py[line:109] INFO {'grade_cou_id_1': 1}
2017-09-23 15:53:36,844 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:53:36,844 log.py[line:109] INFO {}
2017-09-23 15:53:36,846 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:53:36,846 log.py[line:109] INFO {}
2017-09-23 15:53:36,847 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:53:36,847 log.py[line:109] INFO {}
2017-09-23 15:53:36,849 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:53:36,849 log.py[line:109] INFO {}
2017-09-23 15:53:36,850 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:53:36,850 log.py[line:109] INFO {}
2017-09-23 15:53:36,851 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:53:36,851 log.py[line:109] INFO {}
2017-09-23 15:53:36,852 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:53:36,852 log.py[line:109] INFO {}
2017-09-23 15:53:36,853 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:53:36,854 log.py[line:109] INFO {}
2017-09-23 15:53:36,854 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:53:36,855 log.py[line:109] INFO {}
2017-09-23 15:53:36,855 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:53:36,856 log.py[line:109] INFO {}
2017-09-23 15:53:36,856 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:53:36,856 log.py[line:109] INFO {}
2017-09-23 15:53:36,858 log.py[line:109] INFO BEGIN (implicit)
2017-09-23 15:53:36,859 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:53:36,859 log.py[line:109] INFO {'grade_cou_id_1': 1}
2017-09-23 15:54:22,330 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 15:54:22,330 log.py[line:109] INFO {}
2017-09-23 15:54:22,332 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 15:54:22,333 log.py[line:109] INFO {}
2017-09-23 15:54:22,333 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 15:54:22,334 log.py[line:109] INFO {}
2017-09-23 15:54:22,335 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 15:54:22,335 log.py[line:109] INFO {}
2017-09-23 15:54:22,336 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 15:54:22,337 log.py[line:109] INFO {}
2017-09-23 15:54:22,337 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 15:54:22,338 log.py[line:109] INFO {}
2017-09-23 15:54:22,339 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 15:54:22,339 log.py[line:109] INFO {}
2017-09-23 15:54:22,340 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 15:54:22,340 log.py[line:109] INFO {}
2017-09-23 15:54:22,341 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 15:54:22,341 log.py[line:109] INFO {}
2017-09-23 15:54:22,342 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 15:54:22,342 log.py[line:109] INFO {}
2017-09-23 15:54:22,343 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 15:54:22,343 log.py[line:109] INFO {}
2017-09-23 15:54:22,345 log.py[line:109] INFO BEGIN (implicit)
2017-09-23 15:54:22,346 log.py[line:109] INFO SELECT grade.grade_stu_id AS grade_grade_stu_id, grade.score AS grade_score 
FROM grade 
WHERE grade.grade_cou_id = %(grade_cou_id_1)s
2017-09-23 15:54:22,346 log.py[line:109] INFO {'grade_cou_id_1': 1}
2017-09-23 15:54:22,347 db_operation.py[line:72] INFO 2
2017-09-23 15:54:22,347 db_operation.py[line:72] INFO 3
2017-09-23 16:02:21,997 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 16:02:21,997 log.py[line:109] INFO {}
2017-09-23 16:02:21,999 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 16:02:21,999 log.py[line:109] INFO {}
2017-09-23 16:02:22,000 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 16:02:22,000 log.py[line:109] INFO {}
2017-09-23 16:02:22,002 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 16:02:22,002 log.py[line:109] INFO {}
2017-09-23 16:02:22,003 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 16:02:22,003 log.py[line:109] INFO {}
2017-09-23 16:02:22,003 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 16:02:22,004 log.py[line:109] INFO {}
2017-09-23 16:02:22,005 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 16:02:22,005 log.py[line:109] INFO {}
2017-09-23 16:02:22,006 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 16:02:22,006 log.py[line:109] INFO {}
2017-09-23 16:02:22,007 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 16:02:22,007 log.py[line:109] INFO {}
2017-09-23 16:02:22,008 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 16:02:22,008 log.py[line:109] INFO {}
2017-09-23 16:02:22,009 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 16:02:22,009 log.py[line:109] INFO {}
2017-09-23 16:14:34,164 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-09-23 16:14:34,164 log.py[line:109] INFO {}
2017-09-23 16:14:34,168 log.py[line:109] INFO SELECT DATABASE()
2017-09-23 16:14:34,168 log.py[line:109] INFO {}
2017-09-23 16:14:34,169 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-09-23 16:14:34,170 log.py[line:109] INFO {}
2017-09-23 16:14:34,171 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-09-23 16:14:34,171 log.py[line:109] INFO {}
2017-09-23 16:14:34,173 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-09-23 16:14:34,173 log.py[line:109] INFO {}
2017-09-23 16:14:34,174 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-09-23 16:14:34,175 log.py[line:109] INFO {}
2017-09-23 16:14:34,176 log.py[line:109] INFO DESCRIBE `grade`
2017-09-23 16:14:34,177 log.py[line:109] INFO {}
2017-09-23 16:14:34,178 log.py[line:109] INFO DESCRIBE `student`
2017-09-23 16:14:34,178 log.py[line:109] INFO {}
2017-09-23 16:14:34,179 log.py[line:109] INFO DESCRIBE `vip`
2017-09-23 16:14:34,179 log.py[line:109] INFO {}
2017-09-23 16:14:34,180 log.py[line:109] INFO DESCRIBE `course`
2017-09-23 16:14:34,180 log.py[line:109] INFO {}
2017-09-23 16:14:34,182 log.py[line:109] INFO DESCRIBE `cus`
2017-09-23 16:14:34,182 log.py[line:109] INFO {}
2017-09-23 16:24:28,425 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:26:42,546 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:27:48,446 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:27:50,146 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:27:50,506 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:27:50,714 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:27:50,906 testHandler.py[line:26] INFO module 'Database.db_link' has no attribute 'findByUsername'
2017-09-23 16:28:09,035 session.py[line:74] INFO flag:True
2017-09-23 16:28:09,309 testHandler.py[line:32] INFO {"password": "123", "username": "abc"}
2017-09-26 14:04:05,389 session.py[line:74] INFO flag:True
2017-09-26 14:15:21,584 session.py[line:75] INFO flag:True
2017-09-26 14:31:40,436 session.py[line:75] INFO flag:True
2017-09-26 14:41:19,884 session.py[line:75] INFO flag:True
2017-09-26 14:52:01,832 testHandler.py[line:90] INFO 'username'
2017-09-26 14:52:08,263 testHandler.py[line:90] INFO 'username'
2017-09-26 14:52:30,701 session.py[line:75] INFO flag:True
2017-09-26 14:55:41,445 testHandler.py[line:89] INFO 'username'
2017-09-26 14:55:41,450 testHandler.py[line:89] INFO 'username'
2017-09-26 14:55:54,924 testHandler.py[line:89] INFO 'username'
2017-09-26 14:57:19,730 testHandler.py[line:89] INFO 'username'
2017-09-26 14:58:10,697 testHandler.py[line:89] INFO 'username'
2017-09-26 14:58:25,095 testHandler.py[line:90] INFO 'username'
2017-09-26 14:59:46,869 testHandler.py[line:90] INFO 'username'
2017-09-26 15:03:31,554 testHandler.py[line:90] INFO 'username'
2017-09-26 15:03:37,415 testHandler.py[line:90] INFO 'username'
2017-09-26 15:15:53,280 testHandler.py[line:90] INFO 'username'
2017-09-26 15:16:28,580 testHandler.py[line:90] INFO 'username'
2017-09-26 15:17:39,451 session.py[line:75] INFO flag:True
2017-09-26 15:21:05,899 session.py[line:75] INFO flag:True
2017-09-26 15:23:50,595 session.py[line:75] INFO flag:True
2017-09-26 15:24:38,201 session.py[line:75] INFO flag:True
2017-09-26 15:27:15,166 session.py[line:75] INFO flag:True
2017-09-26 15:27:56,489 session.py[line:75] INFO flag:True
2017-09-26 15:30:25,303 session.py[line:75] INFO flag:True
2017-09-26 15:31:31,027 session.py[line:75] INFO flag:True
2017-09-26 15:50:06,756 session.py[line:75] INFO flag:True
2017-09-26 16:49:21,268 session.py[line:75] INFO flag:True
2017-09-26 16:51:39,160 session.py[line:75] INFO flag:True
2017-09-26 16:53:11,207 session.py[line:75] INFO flag:True
2017-09-26 16:55:24,897 session.py[line:75] INFO flag:True
2017-09-26 16:59:57,981 session.py[line:75] INFO flag:True
2017-09-26 17:06:39,227 session.py[line:75] INFO flag:True
2017-09-26 17:15:38,907 session.py[line:75] INFO flag:True
2017-09-26 17:16:37,906 session.py[line:75] INFO flag:True
2017-09-26 17:18:46,548 session.py[line:75] INFO flag:True
2017-09-26 17:19:52,245 testHandler.py[line:88] INFO 'username'
2017-09-26 20:20:09,367 session.py[line:75] INFO flag:True
2017-10-20 10:02:31,563 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:02:31,574 log.py[line:109] INFO {}
2017-10-20 10:02:31,576 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:02:31,576 log.py[line:109] INFO {}
2017-10-20 10:02:31,577 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:02:31,577 log.py[line:109] INFO {}
2017-10-20 10:02:31,579 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:02:31,579 log.py[line:109] INFO {}
2017-10-20 10:02:31,580 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:02:31,580 log.py[line:109] INFO {}
2017-10-20 10:02:31,581 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:02:31,581 log.py[line:109] INFO {}
2017-10-20 10:02:31,582 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:02:31,582 log.py[line:109] INFO {}
2017-10-20 10:02:31,583 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:02:31,583 log.py[line:109] INFO {}
2017-10-20 10:02:31,584 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:02:31,585 log.py[line:109] INFO {}
2017-10-20 10:02:31,586 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:02:31,586 log.py[line:109] INFO {}
2017-10-20 10:02:31,586 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:02:31,587 log.py[line:109] INFO {}
2017-10-20 10:02:31,595 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:02:31,596 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name LIKE %(stu_name_1)s 
 LIMIT %(param_1)s
2017-10-20 10:02:31,596 log.py[line:109] INFO {'stu_name_1': '木%', 'param_1': 1}
2017-10-20 10:14:31,576 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:14:31,576 log.py[line:109] INFO {}
2017-10-20 10:14:31,579 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:14:31,579 log.py[line:109] INFO {}
2017-10-20 10:14:31,580 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:14:31,581 log.py[line:109] INFO {}
2017-10-20 10:14:31,583 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:14:31,584 log.py[line:109] INFO {}
2017-10-20 10:14:31,584 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:14:31,585 log.py[line:109] INFO {}
2017-10-20 10:14:31,585 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:14:31,585 log.py[line:109] INFO {}
2017-10-20 10:14:31,587 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:14:31,587 log.py[line:109] INFO {}
2017-10-20 10:14:31,588 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:14:31,588 log.py[line:109] INFO {}
2017-10-20 10:14:31,589 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:14:31,589 log.py[line:109] INFO {}
2017-10-20 10:14:31,590 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:14:31,590 log.py[line:109] INFO {}
2017-10-20 10:14:31,591 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:14:31,591 log.py[line:109] INFO {}
2017-10-20 10:14:31,606 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:14:31,606 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name LIKE %(stu_name_1)s 
 LIMIT %(param_1)s
2017-10-20 10:14:31,607 log.py[line:109] INFO {'param_1': 1, 'stu_name_1': '塔%'}
2017-10-20 10:16:17,556 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:16:17,557 log.py[line:109] INFO {}
2017-10-20 10:16:17,563 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:16:17,563 log.py[line:109] INFO {}
2017-10-20 10:16:17,566 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:16:17,566 log.py[line:109] INFO {}
2017-10-20 10:16:17,570 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:16:17,571 log.py[line:109] INFO {}
2017-10-20 10:16:17,573 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:16:17,574 log.py[line:109] INFO {}
2017-10-20 10:16:17,576 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:16:17,576 log.py[line:109] INFO {}
2017-10-20 10:16:17,580 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:16:17,580 log.py[line:109] INFO {}
2017-10-20 10:16:17,583 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:16:17,583 log.py[line:109] INFO {}
2017-10-20 10:16:17,587 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:16:17,587 log.py[line:109] INFO {}
2017-10-20 10:16:17,590 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:16:17,591 log.py[line:109] INFO {}
2017-10-20 10:16:17,593 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:16:17,594 log.py[line:109] INFO {}
2017-10-20 10:16:20,249 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:16:20,251 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name LIKE %(stu_name_1)s 
 LIMIT %(param_1)s
2017-10-20 10:16:20,252 log.py[line:109] INFO {'param_1': 1, 'stu_name_1': '木$'}
2017-10-20 10:26:05,676 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:26:05,676 log.py[line:109] INFO {}
2017-10-20 10:26:05,678 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:26:05,678 log.py[line:109] INFO {}
2017-10-20 10:26:05,679 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:26:05,679 log.py[line:109] INFO {}
2017-10-20 10:26:05,681 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:26:05,681 log.py[line:109] INFO {}
2017-10-20 10:26:05,682 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:26:05,682 log.py[line:109] INFO {}
2017-10-20 10:26:05,682 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:26:05,682 log.py[line:109] INFO {}
2017-10-20 10:26:05,684 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:26:05,684 log.py[line:109] INFO {}
2017-10-20 10:26:05,685 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:26:05,685 log.py[line:109] INFO {}
2017-10-20 10:26:05,686 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:26:05,686 log.py[line:109] INFO {}
2017-10-20 10:26:05,687 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:26:05,687 log.py[line:109] INFO {}
2017-10-20 10:26:05,688 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:26:05,688 log.py[line:109] INFO {}
2017-10-20 10:26:05,735 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:26:05,736 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s 
 LIMIT %(param_1)s
2017-10-20 10:26:05,736 log.py[line:109] INFO {'param_1': 1, 'stu_name_1': '木'}
2017-10-20 10:27:23,828 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:27:23,828 log.py[line:109] INFO {}
2017-10-20 10:27:23,830 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:27:23,830 log.py[line:109] INFO {}
2017-10-20 10:27:23,831 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:27:23,831 log.py[line:109] INFO {}
2017-10-20 10:27:23,833 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:27:23,833 log.py[line:109] INFO {}
2017-10-20 10:27:23,834 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:27:23,834 log.py[line:109] INFO {}
2017-10-20 10:27:23,834 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:27:23,835 log.py[line:109] INFO {}
2017-10-20 10:27:23,836 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:27:23,836 log.py[line:109] INFO {}
2017-10-20 10:27:23,837 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:27:23,837 log.py[line:109] INFO {}
2017-10-20 10:27:23,838 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:27:23,838 log.py[line:109] INFO {}
2017-10-20 10:27:23,839 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:27:23,839 log.py[line:109] INFO {}
2017-10-20 10:27:23,840 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:27:23,841 log.py[line:109] INFO {}
2017-10-20 10:27:23,849 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:27:23,849 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:27:23,850 log.py[line:109] INFO {'stu_name_1': '木'}
2017-10-20 10:27:48,565 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:27:48,565 log.py[line:109] INFO {}
2017-10-20 10:27:48,567 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:27:48,567 log.py[line:109] INFO {}
2017-10-20 10:27:48,568 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:27:48,568 log.py[line:109] INFO {}
2017-10-20 10:27:48,570 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:27:48,570 log.py[line:109] INFO {}
2017-10-20 10:27:48,571 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:27:48,571 log.py[line:109] INFO {}
2017-10-20 10:27:48,572 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:27:48,572 log.py[line:109] INFO {}
2017-10-20 10:27:48,573 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:27:48,573 log.py[line:109] INFO {}
2017-10-20 10:27:48,574 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:27:48,574 log.py[line:109] INFO {}
2017-10-20 10:27:48,575 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:27:48,575 log.py[line:109] INFO {}
2017-10-20 10:27:48,576 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:27:48,576 log.py[line:109] INFO {}
2017-10-20 10:27:48,577 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:27:48,578 log.py[line:109] INFO {}
2017-10-20 10:27:48,586 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:27:48,586 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:27:48,587 log.py[line:109] INFO {'stu_name_1': '木$'}
2017-10-20 10:28:12,864 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:28:12,873 log.py[line:109] INFO {}
2017-10-20 10:28:12,881 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:28:12,881 log.py[line:109] INFO {}
2017-10-20 10:28:12,884 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:28:12,884 log.py[line:109] INFO {}
2017-10-20 10:28:12,889 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:28:12,889 log.py[line:109] INFO {}
2017-10-20 10:28:12,892 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:28:12,892 log.py[line:109] INFO {}
2017-10-20 10:28:12,895 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:28:12,895 log.py[line:109] INFO {}
2017-10-20 10:28:12,899 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:28:12,900 log.py[line:109] INFO {}
2017-10-20 10:28:12,904 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:28:12,904 log.py[line:109] INFO {}
2017-10-20 10:28:12,907 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:28:12,907 log.py[line:109] INFO {}
2017-10-20 10:28:12,910 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:28:12,910 log.py[line:109] INFO {}
2017-10-20 10:28:12,913 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:28:12,914 log.py[line:109] INFO {}
2017-10-20 10:28:13,960 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:28:13,962 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:28:13,962 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:31:13,094 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:31:13,095 log.py[line:109] INFO {}
2017-10-20 10:31:13,097 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:31:13,097 log.py[line:109] INFO {}
2017-10-20 10:31:13,099 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:31:13,099 log.py[line:109] INFO {}
2017-10-20 10:31:13,102 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:13,102 log.py[line:109] INFO {}
2017-10-20 10:31:13,103 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:13,103 log.py[line:109] INFO {}
2017-10-20 10:31:13,104 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:31:13,105 log.py[line:109] INFO {}
2017-10-20 10:31:13,106 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:31:13,106 log.py[line:109] INFO {}
2017-10-20 10:31:13,108 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:31:13,108 log.py[line:109] INFO {}
2017-10-20 10:31:13,110 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:31:13,110 log.py[line:109] INFO {}
2017-10-20 10:31:13,111 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:31:13,111 log.py[line:109] INFO {}
2017-10-20 10:31:13,113 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:31:13,113 log.py[line:109] INFO {}
2017-10-20 10:31:13,127 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:31:13,128 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:31:13,128 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:31:31,417 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:31:31,417 log.py[line:109] INFO {}
2017-10-20 10:31:31,420 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:31:31,420 log.py[line:109] INFO {}
2017-10-20 10:31:31,421 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:31:31,421 log.py[line:109] INFO {}
2017-10-20 10:31:31,422 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:31,422 log.py[line:109] INFO {}
2017-10-20 10:31:31,423 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:31,423 log.py[line:109] INFO {}
2017-10-20 10:31:31,424 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:31:31,424 log.py[line:109] INFO {}
2017-10-20 10:31:31,425 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:31:31,425 log.py[line:109] INFO {}
2017-10-20 10:31:31,427 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:31:31,427 log.py[line:109] INFO {}
2017-10-20 10:31:31,428 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:31:31,428 log.py[line:109] INFO {}
2017-10-20 10:31:31,429 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:31:31,429 log.py[line:109] INFO {}
2017-10-20 10:31:31,430 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:31:31,430 log.py[line:109] INFO {}
2017-10-20 10:31:31,439 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:31:31,440 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:31:31,440 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:31:53,852 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:31:53,852 log.py[line:109] INFO {}
2017-10-20 10:31:53,855 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:31:53,855 log.py[line:109] INFO {}
2017-10-20 10:31:53,856 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:31:53,856 log.py[line:109] INFO {}
2017-10-20 10:31:53,858 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:53,858 log.py[line:109] INFO {}
2017-10-20 10:31:53,859 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:31:53,859 log.py[line:109] INFO {}
2017-10-20 10:31:53,860 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:31:53,860 log.py[line:109] INFO {}
2017-10-20 10:31:53,861 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:31:53,861 log.py[line:109] INFO {}
2017-10-20 10:31:53,862 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:31:53,863 log.py[line:109] INFO {}
2017-10-20 10:31:53,864 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:31:53,864 log.py[line:109] INFO {}
2017-10-20 10:31:53,865 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:31:53,865 log.py[line:109] INFO {}
2017-10-20 10:31:53,866 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:31:53,866 log.py[line:109] INFO {}
2017-10-20 10:31:53,876 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:31:53,876 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:31:53,877 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:32:16,473 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:32:16,473 log.py[line:109] INFO {}
2017-10-20 10:32:16,475 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:32:16,475 log.py[line:109] INFO {}
2017-10-20 10:32:16,476 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:32:16,477 log.py[line:109] INFO {}
2017-10-20 10:32:16,478 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:32:16,478 log.py[line:109] INFO {}
2017-10-20 10:32:16,479 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:32:16,479 log.py[line:109] INFO {}
2017-10-20 10:32:16,480 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:32:16,480 log.py[line:109] INFO {}
2017-10-20 10:32:16,481 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:32:16,481 log.py[line:109] INFO {}
2017-10-20 10:32:16,482 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:32:16,482 log.py[line:109] INFO {}
2017-10-20 10:32:16,483 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:32:16,483 log.py[line:109] INFO {}
2017-10-20 10:32:16,484 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:32:16,484 log.py[line:109] INFO {}
2017-10-20 10:32:16,486 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:32:16,486 log.py[line:109] INFO {}
2017-10-20 10:32:16,494 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:32:16,495 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:32:16,495 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:32:46,081 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:32:46,082 log.py[line:109] INFO {}
2017-10-20 10:32:46,091 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:32:46,092 log.py[line:109] INFO {}
2017-10-20 10:32:46,099 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:32:46,099 log.py[line:109] INFO {}
2017-10-20 10:32:46,110 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:32:46,111 log.py[line:109] INFO {}
2017-10-20 10:32:46,115 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:32:46,115 log.py[line:109] INFO {}
2017-10-20 10:32:46,118 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:32:46,118 log.py[line:109] INFO {}
2017-10-20 10:32:46,123 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:32:46,124 log.py[line:109] INFO {}
2017-10-20 10:32:46,128 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:32:46,129 log.py[line:109] INFO {}
2017-10-20 10:32:46,132 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:32:46,133 log.py[line:109] INFO {}
2017-10-20 10:32:46,138 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:32:46,139 log.py[line:109] INFO {}
2017-10-20 10:32:46,142 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:32:46,143 log.py[line:109] INFO {}
2017-10-20 10:32:55,695 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:32:57,919 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:32:58,678 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:34:04,817 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:34:04,817 log.py[line:109] INFO {}
2017-10-20 10:34:04,819 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:34:04,819 log.py[line:109] INFO {}
2017-10-20 10:34:04,820 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:34:04,820 log.py[line:109] INFO {}
2017-10-20 10:34:04,822 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:34:04,822 log.py[line:109] INFO {}
2017-10-20 10:34:04,824 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:34:04,825 log.py[line:109] INFO {}
2017-10-20 10:34:04,827 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:34:04,828 log.py[line:109] INFO {}
2017-10-20 10:34:04,830 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:34:04,830 log.py[line:109] INFO {}
2017-10-20 10:34:04,831 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:34:04,832 log.py[line:109] INFO {}
2017-10-20 10:34:04,833 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:34:04,833 log.py[line:109] INFO {}
2017-10-20 10:34:04,834 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:34:04,834 log.py[line:109] INFO {}
2017-10-20 10:34:04,835 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:34:04,835 log.py[line:109] INFO {}
2017-10-20 10:34:04,858 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:34:04,859 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:34:04,859 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:34:22,127 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:34:22,127 log.py[line:109] INFO {}
2017-10-20 10:34:22,129 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:34:22,130 log.py[line:109] INFO {}
2017-10-20 10:34:22,130 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:34:22,131 log.py[line:109] INFO {}
2017-10-20 10:34:22,132 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:34:22,132 log.py[line:109] INFO {}
2017-10-20 10:34:22,133 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:34:22,133 log.py[line:109] INFO {}
2017-10-20 10:34:22,134 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:34:22,134 log.py[line:109] INFO {}
2017-10-20 10:34:22,136 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:34:22,136 log.py[line:109] INFO {}
2017-10-20 10:34:22,137 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:34:22,137 log.py[line:109] INFO {}
2017-10-20 10:34:22,138 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:34:22,138 log.py[line:109] INFO {}
2017-10-20 10:34:22,139 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:34:22,139 log.py[line:109] INFO {}
2017-10-20 10:34:22,140 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:34:22,140 log.py[line:109] INFO {}
2017-10-20 10:34:22,156 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:34:22,157 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:34:22,157 log.py[line:109] INFO {'stu_name_1': '^塔'}
2017-10-20 10:35:46,738 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:35:46,738 log.py[line:109] INFO {}
2017-10-20 10:35:46,741 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:35:46,741 log.py[line:109] INFO {}
2017-10-20 10:35:46,742 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:35:46,742 log.py[line:109] INFO {}
2017-10-20 10:35:46,745 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:35:46,745 log.py[line:109] INFO {}
2017-10-20 10:35:46,746 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:35:46,746 log.py[line:109] INFO {}
2017-10-20 10:35:46,747 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:35:46,747 log.py[line:109] INFO {}
2017-10-20 10:35:46,748 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:35:46,749 log.py[line:109] INFO {}
2017-10-20 10:35:46,751 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:35:46,751 log.py[line:109] INFO {}
2017-10-20 10:35:46,754 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:35:46,754 log.py[line:109] INFO {}
2017-10-20 10:35:46,756 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:35:46,757 log.py[line:109] INFO {}
2017-10-20 10:35:46,759 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:35:46,759 log.py[line:109] INFO {}
2017-10-20 10:35:46,776 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:35:46,776 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:35:46,777 log.py[line:109] INFO {'stu_name_1': '^阿'}
2017-10-20 10:37:36,569 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:37:36,569 log.py[line:109] INFO {}
2017-10-20 10:37:36,571 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:37:36,571 log.py[line:109] INFO {}
2017-10-20 10:37:36,572 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:37:36,572 log.py[line:109] INFO {}
2017-10-20 10:37:36,573 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:37:36,574 log.py[line:109] INFO {}
2017-10-20 10:37:36,575 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:37:36,575 log.py[line:109] INFO {}
2017-10-20 10:37:36,575 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:37:36,576 log.py[line:109] INFO {}
2017-10-20 10:37:36,577 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:37:36,577 log.py[line:109] INFO {}
2017-10-20 10:37:36,579 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:37:36,579 log.py[line:109] INFO {}
2017-10-20 10:37:36,591 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:37:36,592 log.py[line:109] INFO {}
2017-10-20 10:37:36,594 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:37:36,594 log.py[line:109] INFO {}
2017-10-20 10:37:36,595 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:37:36,595 log.py[line:109] INFO {}
2017-10-20 10:37:36,606 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:37:36,607 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:37:36,607 log.py[line:109] INFO {'stu_name_1': '^'}
2017-10-20 10:38:18,314 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:38:18,315 log.py[line:109] INFO {}
2017-10-20 10:38:18,317 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:38:18,318 log.py[line:109] INFO {}
2017-10-20 10:38:18,319 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:38:18,319 log.py[line:109] INFO {}
2017-10-20 10:38:18,322 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:38:18,323 log.py[line:109] INFO {}
2017-10-20 10:38:18,324 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:38:18,325 log.py[line:109] INFO {}
2017-10-20 10:38:18,327 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:38:18,327 log.py[line:109] INFO {}
2017-10-20 10:38:18,328 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:38:18,329 log.py[line:109] INFO {}
2017-10-20 10:38:18,330 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:38:18,330 log.py[line:109] INFO {}
2017-10-20 10:38:18,331 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:38:18,331 log.py[line:109] INFO {}
2017-10-20 10:38:18,333 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:38:18,333 log.py[line:109] INFO {}
2017-10-20 10:38:18,338 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:38:18,338 log.py[line:109] INFO {}
2017-10-20 10:38:18,351 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:38:18,352 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:38:18,353 log.py[line:109] INFO {'stu_name_1': ''}
2017-10-20 10:38:29,134 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:38:29,135 log.py[line:109] INFO {}
2017-10-20 10:38:29,144 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:38:29,144 log.py[line:109] INFO {}
2017-10-20 10:38:29,146 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:38:29,147 log.py[line:109] INFO {}
2017-10-20 10:38:29,151 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:38:29,152 log.py[line:109] INFO {}
2017-10-20 10:38:29,156 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:38:29,157 log.py[line:109] INFO {}
2017-10-20 10:38:29,162 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:38:29,162 log.py[line:109] INFO {}
2017-10-20 10:38:29,168 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:38:29,168 log.py[line:109] INFO {}
2017-10-20 10:38:29,174 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:38:29,175 log.py[line:109] INFO {}
2017-10-20 10:38:29,177 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:38:29,178 log.py[line:109] INFO {}
2017-10-20 10:38:29,181 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:38:29,181 log.py[line:109] INFO {}
2017-10-20 10:38:29,184 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:38:29,185 log.py[line:109] INFO {}
2017-10-20 10:38:34,987 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:38:37,000 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-20 10:38:37,690 log.py[line:109] INFO {'stu_name_1': ''}
2017-10-20 10:41:41,225 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 10:41:41,226 log.py[line:109] INFO {}
2017-10-20 10:41:41,229 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 10:41:41,229 log.py[line:109] INFO {}
2017-10-20 10:41:41,231 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 10:41:41,231 log.py[line:109] INFO {}
2017-10-20 10:41:41,237 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 10:41:41,237 log.py[line:109] INFO {}
2017-10-20 10:41:41,238 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 10:41:41,238 log.py[line:109] INFO {}
2017-10-20 10:41:41,239 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 10:41:41,239 log.py[line:109] INFO {}
2017-10-20 10:41:41,243 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 10:41:41,243 log.py[line:109] INFO {}
2017-10-20 10:41:41,247 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 10:41:41,247 log.py[line:109] INFO {}
2017-10-20 10:41:41,248 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 10:41:41,249 log.py[line:109] INFO {}
2017-10-20 10:41:41,250 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 10:41:41,250 log.py[line:109] INFO {}
2017-10-20 10:41:41,251 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 10:41:41,251 log.py[line:109] INFO {}
2017-10-20 10:41:41,264 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 10:41:41,265 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name = %(stu_name_1)s
2017-10-20 10:41:41,265 log.py[line:109] INFO {'stu_name_1': ''}
2017-10-20 11:07:30,693 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 11:07:30,709 log.py[line:109] INFO {}
2017-10-20 11:07:30,714 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 11:07:30,715 log.py[line:109] INFO {}
2017-10-20 11:07:30,717 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 11:07:30,718 log.py[line:109] INFO {}
2017-10-20 11:07:30,721 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 11:07:30,722 log.py[line:109] INFO {}
2017-10-20 11:07:30,724 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 11:07:30,724 log.py[line:109] INFO {}
2017-10-20 11:07:30,726 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 11:07:30,726 log.py[line:109] INFO {}
2017-10-20 11:07:30,730 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 11:07:30,730 log.py[line:109] INFO {}
2017-10-20 11:07:30,732 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 11:07:30,733 log.py[line:109] INFO {}
2017-10-20 11:07:30,735 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 11:07:30,736 log.py[line:109] INFO {}
2017-10-20 11:07:30,740 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 11:07:30,740 log.py[line:109] INFO {}
2017-10-20 11:07:30,744 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 11:07:30,745 log.py[line:109] INFO {}
2017-10-20 11:07:36,632 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 11:07:36,634 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student
2017-10-20 11:07:36,634 log.py[line:109] INFO {}
2017-10-20 11:07:55,042 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 11:07:55,043 log.py[line:109] INFO {}
2017-10-20 11:07:55,049 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 11:07:55,049 log.py[line:109] INFO {}
2017-10-20 11:07:55,052 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 11:07:55,052 log.py[line:109] INFO {}
2017-10-20 11:07:55,056 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 11:07:55,057 log.py[line:109] INFO {}
2017-10-20 11:07:55,059 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 11:07:55,060 log.py[line:109] INFO {}
2017-10-20 11:07:55,063 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 11:07:55,063 log.py[line:109] INFO {}
2017-10-20 11:07:55,069 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 11:07:55,072 log.py[line:109] INFO {}
2017-10-20 11:07:55,075 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 11:07:55,076 log.py[line:109] INFO {}
2017-10-20 11:07:55,081 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 11:07:55,081 log.py[line:109] INFO {}
2017-10-20 11:07:55,085 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 11:07:55,085 log.py[line:109] INFO {}
2017-10-20 11:07:55,089 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 11:07:55,090 log.py[line:109] INFO {}
2017-10-20 11:08:16,717 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 11:08:16,718 log.py[line:109] INFO {}
2017-10-20 11:08:16,725 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 11:08:16,726 log.py[line:109] INFO {}
2017-10-20 11:08:16,729 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 11:08:16,730 log.py[line:109] INFO {}
2017-10-20 11:08:16,735 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 11:08:16,736 log.py[line:109] INFO {}
2017-10-20 11:08:16,739 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 11:08:16,739 log.py[line:109] INFO {}
2017-10-20 11:08:16,742 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 11:08:16,743 log.py[line:109] INFO {}
2017-10-20 11:08:16,750 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 11:08:16,751 log.py[line:109] INFO {}
2017-10-20 11:08:16,755 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 11:08:16,756 log.py[line:109] INFO {}
2017-10-20 11:08:16,759 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 11:08:16,759 log.py[line:109] INFO {}
2017-10-20 11:08:16,764 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 11:08:16,765 log.py[line:109] INFO {}
2017-10-20 11:08:16,768 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 11:08:16,769 log.py[line:109] INFO {}
2017-10-20 11:09:00,064 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 11:09:02,606 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student
2017-10-20 11:09:03,291 log.py[line:109] INFO {}
2017-10-20 12:34:01,235 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 12:34:01,244 log.py[line:109] INFO {}
2017-10-20 12:34:01,247 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 12:34:01,248 log.py[line:109] INFO {}
2017-10-20 12:34:01,249 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 12:34:01,249 log.py[line:109] INFO {}
2017-10-20 12:34:01,251 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 12:34:01,251 log.py[line:109] INFO {}
2017-10-20 12:34:01,252 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 12:34:01,252 log.py[line:109] INFO {}
2017-10-20 12:34:01,253 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 12:34:01,253 log.py[line:109] INFO {}
2017-10-20 12:34:01,255 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 12:34:01,255 log.py[line:109] INFO {}
2017-10-20 12:34:01,256 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 12:34:01,257 log.py[line:109] INFO {}
2017-10-20 12:34:01,258 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 12:34:01,258 log.py[line:109] INFO {}
2017-10-20 12:34:01,259 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 12:34:01,260 log.py[line:109] INFO {}
2017-10-20 12:34:01,261 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 12:34:01,261 log.py[line:109] INFO {}
2017-10-20 12:34:01,307 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 12:34:01,308 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
 LIMIT %(param_1)s
2017-10-20 12:34:01,308 log.py[line:109] INFO {'param_1': 1}
2017-10-20 12:34:27,623 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 12:34:27,624 log.py[line:109] INFO {}
2017-10-20 12:34:27,627 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 12:34:27,627 log.py[line:109] INFO {}
2017-10-20 12:34:27,628 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 12:34:27,628 log.py[line:109] INFO {}
2017-10-20 12:34:27,630 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 12:34:27,630 log.py[line:109] INFO {}
2017-10-20 12:34:27,631 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 12:34:27,631 log.py[line:109] INFO {}
2017-10-20 12:34:27,633 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 12:34:27,634 log.py[line:109] INFO {}
2017-10-20 12:34:27,636 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 12:34:27,636 log.py[line:109] INFO {}
2017-10-20 12:34:27,637 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 12:34:27,637 log.py[line:109] INFO {}
2017-10-20 12:34:27,638 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 12:34:27,638 log.py[line:109] INFO {}
2017-10-20 12:34:27,639 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 12:34:27,640 log.py[line:109] INFO {}
2017-10-20 12:34:27,641 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 12:34:27,641 log.py[line:109] INFO {}
2017-10-20 12:34:27,654 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 12:34:27,655 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
 LIMIT %(param_1)s
2017-10-20 12:34:27,655 log.py[line:109] INFO {'param_1': 1}
2017-10-20 12:55:31,278 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 12:55:31,278 log.py[line:109] INFO {}
2017-10-20 12:55:31,281 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 12:55:31,281 log.py[line:109] INFO {}
2017-10-20 12:55:31,282 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 12:55:31,282 log.py[line:109] INFO {}
2017-10-20 12:55:31,283 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 12:55:31,283 log.py[line:109] INFO {}
2017-10-20 12:55:31,284 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 12:55:31,284 log.py[line:109] INFO {}
2017-10-20 12:55:31,285 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 12:55:31,285 log.py[line:109] INFO {}
2017-10-20 12:55:31,287 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 12:55:31,287 log.py[line:109] INFO {}
2017-10-20 12:55:31,288 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 12:55:31,288 log.py[line:109] INFO {}
2017-10-20 12:55:31,289 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 12:55:31,289 log.py[line:109] INFO {}
2017-10-20 12:55:31,290 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 12:55:31,290 log.py[line:109] INFO {}
2017-10-20 12:55:31,291 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 12:55:31,291 log.py[line:109] INFO {}
2017-10-20 12:57:48,327 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 12:57:48,327 log.py[line:109] INFO {}
2017-10-20 12:57:48,329 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 12:57:48,329 log.py[line:109] INFO {}
2017-10-20 12:57:48,330 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 12:57:48,330 log.py[line:109] INFO {}
2017-10-20 12:57:48,332 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 12:57:48,332 log.py[line:109] INFO {}
2017-10-20 12:57:48,333 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 12:57:48,333 log.py[line:109] INFO {}
2017-10-20 12:57:48,334 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 12:57:48,334 log.py[line:109] INFO {}
2017-10-20 12:57:48,335 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 12:57:48,335 log.py[line:109] INFO {}
2017-10-20 12:57:48,336 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 12:57:48,336 log.py[line:109] INFO {}
2017-10-20 12:57:48,337 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 12:57:48,337 log.py[line:109] INFO {}
2017-10-20 12:57:48,338 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 12:57:48,338 log.py[line:109] INFO {}
2017-10-20 12:57:48,339 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 12:57:48,339 log.py[line:109] INFO {}
2017-10-20 12:57:48,352 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 12:57:48,353 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age = %(stu_age_1)s 
 LIMIT %(param_1)s
2017-10-20 12:57:48,353 log.py[line:109] INFO {'stu_age_1': 1, 'param_1': 1}
2017-10-20 12:58:01,607 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 12:58:01,609 log.py[line:109] INFO {}
2017-10-20 12:58:01,615 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 12:58:01,616 log.py[line:109] INFO {}
2017-10-20 12:58:01,619 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 12:58:01,620 log.py[line:109] INFO {}
2017-10-20 12:58:01,627 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 12:58:01,628 log.py[line:109] INFO {}
2017-10-20 12:58:01,630 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 12:58:01,631 log.py[line:109] INFO {}
2017-10-20 12:58:01,634 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 12:58:01,634 log.py[line:109] INFO {}
2017-10-20 12:58:01,640 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 12:58:01,641 log.py[line:109] INFO {}
2017-10-20 12:58:01,645 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 12:58:01,645 log.py[line:109] INFO {}
2017-10-20 12:58:01,650 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 12:58:01,650 log.py[line:109] INFO {}
2017-10-20 12:58:01,654 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 12:58:01,655 log.py[line:109] INFO {}
2017-10-20 12:58:01,658 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 12:58:01,659 log.py[line:109] INFO {}
2017-10-20 12:58:18,157 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 12:58:18,159 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age = %(stu_age_1)s 
 LIMIT %(param_1)s
2017-10-20 12:58:18,159 log.py[line:109] INFO {'param_1': 1, 'stu_age_1': 1}
2017-10-20 16:46:49,741 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 16:46:49,742 log.py[line:109] INFO {}
2017-10-20 16:46:49,749 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 16:46:49,750 log.py[line:109] INFO {}
2017-10-20 16:46:49,752 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 16:46:49,753 log.py[line:109] INFO {}
2017-10-20 16:46:49,756 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 16:46:49,757 log.py[line:109] INFO {}
2017-10-20 16:46:49,759 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 16:46:49,759 log.py[line:109] INFO {}
2017-10-20 16:46:49,761 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 16:46:49,761 log.py[line:109] INFO {}
2017-10-20 16:46:49,764 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 16:46:49,765 log.py[line:109] INFO {}
2017-10-20 16:46:49,767 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 16:46:49,768 log.py[line:109] INFO {}
2017-10-20 16:46:49,771 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 16:46:49,771 log.py[line:109] INFO {}
2017-10-20 16:46:49,775 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 16:46:49,775 log.py[line:109] INFO {}
2017-10-20 16:46:49,779 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 16:46:49,780 log.py[line:109] INFO {}
2017-10-20 16:47:20,012 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 16:47:20,013 log.py[line:109] INFO {}
2017-10-20 16:47:20,020 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 16:47:20,021 log.py[line:109] INFO {}
2017-10-20 16:47:20,023 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 16:47:20,023 log.py[line:109] INFO {}
2017-10-20 16:47:20,029 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 16:47:20,029 log.py[line:109] INFO {}
2017-10-20 16:47:20,031 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 16:47:20,032 log.py[line:109] INFO {}
2017-10-20 16:47:20,035 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 16:47:20,035 log.py[line:109] INFO {}
2017-10-20 16:47:20,039 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 16:47:20,040 log.py[line:109] INFO {}
2017-10-20 16:47:20,043 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 16:47:20,044 log.py[line:109] INFO {}
2017-10-20 16:47:20,047 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 16:47:20,048 log.py[line:109] INFO {}
2017-10-20 16:47:20,052 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 16:47:20,053 log.py[line:109] INFO {}
2017-10-20 16:47:20,056 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 16:47:20,057 log.py[line:109] INFO {}
2017-10-20 16:47:23,923 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 16:47:23,925 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
 LIMIT %(param_1)s, %(param_2)s
2017-10-20 16:47:23,925 log.py[line:109] INFO {'param_2': 2, 'param_1': 2}
2017-10-20 16:58:35,995 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 16:58:35,995 log.py[line:109] INFO {}
2017-10-20 16:58:35,997 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 16:58:35,997 log.py[line:109] INFO {}
2017-10-20 16:58:35,998 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 16:58:35,998 log.py[line:109] INFO {}
2017-10-20 16:58:36,000 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 16:58:36,000 log.py[line:109] INFO {}
2017-10-20 16:58:36,000 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 16:58:36,001 log.py[line:109] INFO {}
2017-10-20 16:58:36,001 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 16:58:36,002 log.py[line:109] INFO {}
2017-10-20 16:58:36,003 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 16:58:36,003 log.py[line:109] INFO {}
2017-10-20 16:58:36,004 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 16:58:36,004 log.py[line:109] INFO {}
2017-10-20 16:58:36,005 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 16:58:36,005 log.py[line:109] INFO {}
2017-10-20 16:58:36,006 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 16:58:36,006 log.py[line:109] INFO {}
2017-10-20 16:58:36,007 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 16:58:36,007 log.py[line:109] INFO {}
2017-10-20 16:58:36,060 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 16:58:36,060 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s 
 LIMIT %(param_1)s, %(param_2)s
2017-10-20 16:58:36,060 log.py[line:109] INFO {'param_2': 2, 'param_1': 2, 'stu_name_1': '节'}
2017-10-20 16:59:07,957 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 16:59:07,957 log.py[line:109] INFO {}
2017-10-20 16:59:07,959 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 16:59:07,959 log.py[line:109] INFO {}
2017-10-20 16:59:07,960 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 16:59:07,960 log.py[line:109] INFO {}
2017-10-20 16:59:07,962 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 16:59:07,962 log.py[line:109] INFO {}
2017-10-20 16:59:07,963 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 16:59:07,963 log.py[line:109] INFO {}
2017-10-20 16:59:07,964 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 16:59:07,964 log.py[line:109] INFO {}
2017-10-20 16:59:07,965 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 16:59:07,965 log.py[line:109] INFO {}
2017-10-20 16:59:07,966 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 16:59:07,966 log.py[line:109] INFO {}
2017-10-20 16:59:07,967 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 16:59:07,967 log.py[line:109] INFO {}
2017-10-20 16:59:07,968 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 16:59:07,969 log.py[line:109] INFO {}
2017-10-20 16:59:07,970 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 16:59:07,970 log.py[line:109] INFO {}
2017-10-20 16:59:07,983 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 16:59:07,984 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s 
 LIMIT %(param_1)s
2017-10-20 16:59:07,984 log.py[line:109] INFO {'param_1': 4, 'stu_name_1': '节'}
2017-10-20 16:59:13,140 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-20 16:59:13,140 log.py[line:109] INFO {}
2017-10-20 16:59:13,142 log.py[line:109] INFO SELECT DATABASE()
2017-10-20 16:59:13,142 log.py[line:109] INFO {}
2017-10-20 16:59:13,143 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-20 16:59:13,143 log.py[line:109] INFO {}
2017-10-20 16:59:13,145 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-20 16:59:13,145 log.py[line:109] INFO {}
2017-10-20 16:59:13,146 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-20 16:59:13,146 log.py[line:109] INFO {}
2017-10-20 16:59:13,146 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-20 16:59:13,147 log.py[line:109] INFO {}
2017-10-20 16:59:13,148 log.py[line:109] INFO DESCRIBE `student`
2017-10-20 16:59:13,148 log.py[line:109] INFO {}
2017-10-20 16:59:13,149 log.py[line:109] INFO DESCRIBE `course`
2017-10-20 16:59:13,149 log.py[line:109] INFO {}
2017-10-20 16:59:13,150 log.py[line:109] INFO DESCRIBE `vip`
2017-10-20 16:59:13,150 log.py[line:109] INFO {}
2017-10-20 16:59:13,151 log.py[line:109] INFO DESCRIBE `cus`
2017-10-20 16:59:13,151 log.py[line:109] INFO {}
2017-10-20 16:59:13,152 log.py[line:109] INFO DESCRIBE `grade`
2017-10-20 16:59:13,152 log.py[line:109] INFO {}
2017-10-20 16:59:13,166 log.py[line:109] INFO BEGIN (implicit)
2017-10-20 16:59:13,166 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s 
 LIMIT %(param_1)s, %(param_2)s
2017-10-20 16:59:13,167 log.py[line:109] INFO {'param_2': 3, 'stu_name_1': '节', 'param_1': 1}
2017-10-23 14:27:51,429 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 14:27:51,446 log.py[line:109] INFO {}
2017-10-23 14:27:51,453 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 14:27:51,453 log.py[line:109] INFO {}
2017-10-23 14:27:51,456 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 14:27:51,456 log.py[line:109] INFO {}
2017-10-23 14:27:51,461 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 14:27:51,462 log.py[line:109] INFO {}
2017-10-23 14:27:51,464 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 14:27:51,465 log.py[line:109] INFO {}
2017-10-23 14:27:51,468 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 14:27:51,468 log.py[line:109] INFO {}
2017-10-23 14:27:51,472 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 14:27:51,473 log.py[line:109] INFO {}
2017-10-23 14:27:51,477 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 14:27:51,477 log.py[line:109] INFO {}
2017-10-23 14:27:51,481 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 14:27:51,481 log.py[line:109] INFO {}
2017-10-23 14:27:51,485 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 14:27:51,486 log.py[line:109] INFO {}
2017-10-23 14:27:51,490 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 14:27:51,490 log.py[line:109] INFO {}
2017-10-23 14:29:53,647 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 14:29:53,648 log.py[line:109] INFO {}
2017-10-23 14:29:53,657 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 14:29:53,658 log.py[line:109] INFO {}
2017-10-23 14:29:53,661 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 14:29:53,661 log.py[line:109] INFO {}
2017-10-23 14:29:53,666 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 14:29:53,667 log.py[line:109] INFO {}
2017-10-23 14:29:53,669 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 14:29:53,670 log.py[line:109] INFO {}
2017-10-23 14:29:53,673 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 14:29:53,673 log.py[line:109] INFO {}
2017-10-23 14:29:53,677 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 14:29:53,677 log.py[line:109] INFO {}
2017-10-23 14:29:53,682 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 14:29:53,684 log.py[line:109] INFO {}
2017-10-23 14:29:53,687 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 14:29:53,688 log.py[line:109] INFO {}
2017-10-23 14:29:53,692 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 14:29:53,693 log.py[line:109] INFO {}
2017-10-23 14:29:53,696 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 14:29:53,696 log.py[line:109] INFO {}
2017-10-23 14:30:06,810 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 14:30:06,812 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 14:30:06,812 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 14:30:20,767 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 14:30:20,768 log.py[line:109] INFO {}
2017-10-23 14:30:20,773 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 14:30:20,774 log.py[line:109] INFO {}
2017-10-23 14:30:20,776 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 14:30:20,777 log.py[line:109] INFO {}
2017-10-23 14:30:20,780 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 14:30:20,781 log.py[line:109] INFO {}
2017-10-23 14:30:20,783 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 14:30:20,783 log.py[line:109] INFO {}
2017-10-23 14:30:20,785 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 14:30:20,785 log.py[line:109] INFO {}
2017-10-23 14:30:20,789 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 14:30:20,789 log.py[line:109] INFO {}
2017-10-23 14:30:20,792 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 14:30:20,792 log.py[line:109] INFO {}
2017-10-23 14:30:20,795 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 14:30:20,795 log.py[line:109] INFO {}
2017-10-23 14:30:20,798 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 14:30:20,799 log.py[line:109] INFO {}
2017-10-23 14:30:20,801 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 14:30:20,802 log.py[line:109] INFO {}
2017-10-23 14:30:22,293 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 14:30:22,295 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 14:30:22,295 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 14:30:26,800 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-10-23 14:30:26,800 log.py[line:109] INFO {'param_1': 1}
2017-10-23 22:19:18,612 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:19:18,612 log.py[line:109] INFO {}
2017-10-23 22:19:18,616 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:19:18,617 log.py[line:109] INFO {}
2017-10-23 22:19:18,617 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:19:18,617 log.py[line:109] INFO {}
2017-10-23 22:19:18,619 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:19:18,619 log.py[line:109] INFO {}
2017-10-23 22:19:18,620 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:19:18,620 log.py[line:109] INFO {}
2017-10-23 22:19:18,621 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:19:18,621 log.py[line:109] INFO {}
2017-10-23 22:19:18,623 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:19:18,623 log.py[line:109] INFO {}
2017-10-23 22:19:18,624 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:19:18,624 log.py[line:109] INFO {}
2017-10-23 22:19:18,625 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:19:18,625 log.py[line:109] INFO {}
2017-10-23 22:19:18,627 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:19:18,627 log.py[line:109] INFO {}
2017-10-23 22:19:18,628 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:19:18,628 log.py[line:109] INFO {}
2017-10-23 22:19:18,722 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:19:18,722 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:19:18,722 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:19:31,969 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:19:31,970 log.py[line:109] INFO {}
2017-10-23 22:19:31,991 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:19:31,993 log.py[line:109] INFO {}
2017-10-23 22:19:31,997 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:19:31,997 log.py[line:109] INFO {}
2017-10-23 22:19:32,002 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:19:32,003 log.py[line:109] INFO {}
2017-10-23 22:19:32,004 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:19:32,005 log.py[line:109] INFO {}
2017-10-23 22:19:32,007 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:19:32,008 log.py[line:109] INFO {}
2017-10-23 22:19:32,011 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:19:32,011 log.py[line:109] INFO {}
2017-10-23 22:19:32,014 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:19:32,014 log.py[line:109] INFO {}
2017-10-23 22:19:32,017 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:19:32,018 log.py[line:109] INFO {}
2017-10-23 22:19:32,021 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:19:32,021 log.py[line:109] INFO {}
2017-10-23 22:19:32,024 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:19:32,024 log.py[line:109] INFO {}
2017-10-23 22:19:36,752 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:19:36,753 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:19:36,754 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:41:47,281 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:41:47,282 log.py[line:109] INFO {}
2017-10-23 22:41:47,286 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:41:47,287 log.py[line:109] INFO {}
2017-10-23 22:41:47,289 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:41:47,289 log.py[line:109] INFO {}
2017-10-23 22:41:47,293 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:41:47,294 log.py[line:109] INFO {}
2017-10-23 22:41:47,296 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:41:47,296 log.py[line:109] INFO {}
2017-10-23 22:41:47,298 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:41:47,298 log.py[line:109] INFO {}
2017-10-23 22:41:47,301 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:41:47,301 log.py[line:109] INFO {}
2017-10-23 22:41:47,305 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:41:47,305 log.py[line:109] INFO {}
2017-10-23 22:41:47,308 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:41:47,308 log.py[line:109] INFO {}
2017-10-23 22:41:47,311 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:41:47,311 log.py[line:109] INFO {}
2017-10-23 22:41:47,314 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:41:47,314 log.py[line:109] INFO {}
2017-10-23 22:41:54,568 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:41:54,570 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:41:54,571 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:41:56,870 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:41:56,870 log.py[line:109] INFO {}
2017-10-23 22:41:56,875 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:41:56,876 log.py[line:109] INFO {}
2017-10-23 22:41:56,878 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:41:56,878 log.py[line:109] INFO {}
2017-10-23 22:41:56,882 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:41:56,882 log.py[line:109] INFO {}
2017-10-23 22:41:56,884 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:41:56,885 log.py[line:109] INFO {}
2017-10-23 22:41:56,886 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:41:56,887 log.py[line:109] INFO {}
2017-10-23 22:41:56,890 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:41:56,890 log.py[line:109] INFO {}
2017-10-23 22:41:56,894 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:41:56,894 log.py[line:109] INFO {}
2017-10-23 22:41:56,897 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:41:56,898 log.py[line:109] INFO {}
2017-10-23 22:41:56,901 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:41:56,901 log.py[line:109] INFO {}
2017-10-23 22:41:56,905 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:41:56,905 log.py[line:109] INFO {}
2017-10-23 22:41:56,938 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:41:56,942 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:41:56,943 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:42:01,090 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:42:01,091 log.py[line:109] INFO {}
2017-10-23 22:42:01,097 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:42:01,097 log.py[line:109] INFO {}
2017-10-23 22:42:01,100 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:42:01,100 log.py[line:109] INFO {}
2017-10-23 22:42:01,104 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:01,104 log.py[line:109] INFO {}
2017-10-23 22:42:01,106 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:01,106 log.py[line:109] INFO {}
2017-10-23 22:42:01,108 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:42:01,108 log.py[line:109] INFO {}
2017-10-23 22:42:01,112 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:42:01,112 log.py[line:109] INFO {}
2017-10-23 22:42:01,115 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:42:01,116 log.py[line:109] INFO {}
2017-10-23 22:42:01,119 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:42:01,119 log.py[line:109] INFO {}
2017-10-23 22:42:01,122 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:42:01,122 log.py[line:109] INFO {}
2017-10-23 22:42:01,125 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:42:01,125 log.py[line:109] INFO {}
2017-10-23 22:42:01,156 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:42:01,159 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:42:01,159 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:42:09,371 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:42:09,372 log.py[line:109] INFO {}
2017-10-23 22:42:09,376 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:42:09,377 log.py[line:109] INFO {}
2017-10-23 22:42:09,379 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:42:09,379 log.py[line:109] INFO {}
2017-10-23 22:42:09,383 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:09,384 log.py[line:109] INFO {}
2017-10-23 22:42:09,385 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:09,386 log.py[line:109] INFO {}
2017-10-23 22:42:09,388 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:42:09,388 log.py[line:109] INFO {}
2017-10-23 22:42:09,392 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:42:09,392 log.py[line:109] INFO {}
2017-10-23 22:42:09,395 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:42:09,395 log.py[line:109] INFO {}
2017-10-23 22:42:09,398 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:42:09,399 log.py[line:109] INFO {}
2017-10-23 22:42:09,402 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:42:09,402 log.py[line:109] INFO {}
2017-10-23 22:42:09,405 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:42:09,405 log.py[line:109] INFO {}
2017-10-23 22:42:09,435 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:42:09,438 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:42:09,439 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:42:28,702 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:42:28,703 log.py[line:109] INFO {}
2017-10-23 22:42:28,707 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:42:28,708 log.py[line:109] INFO {}
2017-10-23 22:42:28,710 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:42:28,710 log.py[line:109] INFO {}
2017-10-23 22:42:28,714 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:28,715 log.py[line:109] INFO {}
2017-10-23 22:42:28,716 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:42:28,717 log.py[line:109] INFO {}
2017-10-23 22:42:28,719 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:42:28,719 log.py[line:109] INFO {}
2017-10-23 22:42:28,722 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:42:28,723 log.py[line:109] INFO {}
2017-10-23 22:42:28,725 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:42:28,726 log.py[line:109] INFO {}
2017-10-23 22:42:28,729 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:42:28,729 log.py[line:109] INFO {}
2017-10-23 22:42:28,732 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:42:28,732 log.py[line:109] INFO {}
2017-10-23 22:42:28,735 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:42:28,735 log.py[line:109] INFO {}
2017-10-23 22:42:28,764 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:42:28,768 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:42:28,768 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:45:55,859 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:45:55,860 log.py[line:109] INFO {'username_1': '', 'param_1': 1}
2017-10-23 22:45:55,863 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:45:59,853 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:45:59,854 log.py[line:109] INFO {'username_1': '', 'param_1': 1}
2017-10-23 22:45:59,860 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:46:00,211 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:46:00,211 log.py[line:109] INFO {'username_1': '', 'param_1': 1}
2017-10-23 22:46:00,214 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:46:00,403 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:46:00,403 log.py[line:109] INFO {'username_1': '', 'param_1': 1}
2017-10-23 22:46:00,406 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:46:07,700 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:46:07,701 log.py[line:109] INFO {'username_1': 'abcd', 'param_1': 1}
2017-10-23 22:46:07,703 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:46:56,423 log.py[line:109] INFO SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s 
 LIMIT %(param_1)s
2017-10-23 22:46:56,424 log.py[line:109] INFO {'username_1': 'abcd', 'param_1': 1}
2017-10-23 22:46:56,426 testHandler.py[line:84] INFO 'NoneType' object has no attribute 'password'
2017-10-23 22:48:59,489 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:48:59,490 log.py[line:109] INFO {}
2017-10-23 22:48:59,497 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:48:59,497 log.py[line:109] INFO {}
2017-10-23 22:48:59,499 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:48:59,500 log.py[line:109] INFO {}
2017-10-23 22:48:59,504 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:48:59,504 log.py[line:109] INFO {}
2017-10-23 22:48:59,506 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:48:59,507 log.py[line:109] INFO {}
2017-10-23 22:48:59,510 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:48:59,511 log.py[line:109] INFO {}
2017-10-23 22:48:59,514 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:48:59,515 log.py[line:109] INFO {}
2017-10-23 22:48:59,518 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:48:59,519 log.py[line:109] INFO {}
2017-10-23 22:48:59,523 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:48:59,524 log.py[line:109] INFO {}
2017-10-23 22:48:59,530 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:48:59,530 log.py[line:109] INFO {}
2017-10-23 22:48:59,533 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:48:59,534 log.py[line:109] INFO {}
2017-10-23 22:48:59,566 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:48:59,569 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:48:59,570 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:55:38,042 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:55:38,044 log.py[line:109] INFO {}
2017-10-23 22:55:38,053 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:55:38,054 log.py[line:109] INFO {}
2017-10-23 22:55:38,057 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:55:38,058 log.py[line:109] INFO {}
2017-10-23 22:55:38,064 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:55:38,065 log.py[line:109] INFO {}
2017-10-23 22:55:38,072 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:55:38,073 log.py[line:109] INFO {}
2017-10-23 22:55:38,078 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:55:38,079 log.py[line:109] INFO {}
2017-10-23 22:55:38,083 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:55:38,084 log.py[line:109] INFO {}
2017-10-23 22:55:38,089 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:55:38,090 log.py[line:109] INFO {}
2017-10-23 22:55:38,098 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:55:38,098 log.py[line:109] INFO {}
2017-10-23 22:55:38,102 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:55:38,103 log.py[line:109] INFO {}
2017-10-23 22:55:38,107 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:55:38,107 log.py[line:109] INFO {}
2017-10-23 22:55:38,149 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:55:38,153 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:55:38,153 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 22:57:47,197 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 22:57:47,198 log.py[line:109] INFO {}
2017-10-23 22:57:47,203 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 22:57:47,204 log.py[line:109] INFO {}
2017-10-23 22:57:47,206 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 22:57:47,206 log.py[line:109] INFO {}
2017-10-23 22:57:47,210 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 22:57:47,210 log.py[line:109] INFO {}
2017-10-23 22:57:47,212 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 22:57:47,213 log.py[line:109] INFO {}
2017-10-23 22:57:47,214 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 22:57:47,215 log.py[line:109] INFO {}
2017-10-23 22:57:47,218 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 22:57:47,218 log.py[line:109] INFO {}
2017-10-23 22:57:47,221 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 22:57:47,221 log.py[line:109] INFO {}
2017-10-23 22:57:47,224 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 22:57:47,225 log.py[line:109] INFO {}
2017-10-23 22:57:47,228 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 22:57:47,228 log.py[line:109] INFO {}
2017-10-23 22:57:47,231 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 22:57:47,231 log.py[line:109] INFO {}
2017-10-23 22:57:47,261 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 22:57:47,264 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 22:57:47,264 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-23 23:11:59,189 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-23 23:11:59,189 log.py[line:109] INFO {}
2017-10-23 23:11:59,196 log.py[line:109] INFO SELECT DATABASE()
2017-10-23 23:11:59,196 log.py[line:109] INFO {}
2017-10-23 23:11:59,198 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-23 23:11:59,199 log.py[line:109] INFO {}
2017-10-23 23:11:59,204 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-23 23:11:59,205 log.py[line:109] INFO {}
2017-10-23 23:11:59,207 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-23 23:11:59,207 log.py[line:109] INFO {}
2017-10-23 23:11:59,209 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-23 23:11:59,209 log.py[line:109] INFO {}
2017-10-23 23:11:59,214 log.py[line:109] INFO DESCRIBE `course`
2017-10-23 23:11:59,214 log.py[line:109] INFO {}
2017-10-23 23:11:59,218 log.py[line:109] INFO DESCRIBE `cus`
2017-10-23 23:11:59,219 log.py[line:109] INFO {}
2017-10-23 23:11:59,222 log.py[line:109] INFO DESCRIBE `student`
2017-10-23 23:11:59,222 log.py[line:109] INFO {}
2017-10-23 23:11:59,225 log.py[line:109] INFO DESCRIBE `vip`
2017-10-23 23:11:59,225 log.py[line:109] INFO {}
2017-10-23 23:11:59,228 log.py[line:109] INFO DESCRIBE `grade`
2017-10-23 23:11:59,229 log.py[line:109] INFO {}
2017-10-23 23:11:59,262 log.py[line:109] INFO BEGIN (implicit)
2017-10-23 23:11:59,266 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-23 23:11:59,266 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:04:32,461 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:04:32,462 log.py[line:109] INFO {}
2017-10-24 10:04:32,469 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:04:32,470 log.py[line:109] INFO {}
2017-10-24 10:04:32,473 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:04:32,474 log.py[line:109] INFO {}
2017-10-24 10:04:32,481 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:04:32,481 log.py[line:109] INFO {}
2017-10-24 10:04:32,483 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:04:32,484 log.py[line:109] INFO {}
2017-10-24 10:04:32,486 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:04:32,486 log.py[line:109] INFO {}
2017-10-24 10:04:32,490 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:04:32,491 log.py[line:109] INFO {}
2017-10-24 10:04:32,494 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:04:32,494 log.py[line:109] INFO {}
2017-10-24 10:04:32,498 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:04:32,499 log.py[line:109] INFO {}
2017-10-24 10:04:32,506 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:04:32,506 log.py[line:109] INFO {}
2017-10-24 10:04:32,510 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:04:32,510 log.py[line:109] INFO {}
2017-10-24 10:04:32,591 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:04:32,595 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:04:32,595 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:05:14,456 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:05:14,457 log.py[line:109] INFO {}
2017-10-24 10:05:14,462 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:05:14,463 log.py[line:109] INFO {}
2017-10-24 10:05:14,465 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:05:14,465 log.py[line:109] INFO {}
2017-10-24 10:05:14,469 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:05:14,469 log.py[line:109] INFO {}
2017-10-24 10:05:14,471 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:05:14,471 log.py[line:109] INFO {}
2017-10-24 10:05:14,473 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:05:14,474 log.py[line:109] INFO {}
2017-10-24 10:05:14,477 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:05:14,478 log.py[line:109] INFO {}
2017-10-24 10:05:14,480 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:05:14,481 log.py[line:109] INFO {}
2017-10-24 10:05:14,483 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:05:14,484 log.py[line:109] INFO {}
2017-10-24 10:05:14,486 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:05:14,487 log.py[line:109] INFO {}
2017-10-24 10:05:14,489 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:05:14,490 log.py[line:109] INFO {}
2017-10-24 10:05:14,518 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:05:14,521 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:05:14,522 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:09:07,302 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:09:07,303 log.py[line:109] INFO {}
2017-10-24 10:09:07,308 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:09:07,308 log.py[line:109] INFO {}
2017-10-24 10:09:07,310 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:09:07,310 log.py[line:109] INFO {}
2017-10-24 10:09:07,315 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:09:07,316 log.py[line:109] INFO {}
2017-10-24 10:09:07,319 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:09:07,320 log.py[line:109] INFO {}
2017-10-24 10:09:07,322 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:09:07,323 log.py[line:109] INFO {}
2017-10-24 10:09:07,328 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:09:07,329 log.py[line:109] INFO {}
2017-10-24 10:09:07,332 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:09:07,332 log.py[line:109] INFO {}
2017-10-24 10:09:07,335 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:09:07,335 log.py[line:109] INFO {}
2017-10-24 10:09:07,338 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:09:07,338 log.py[line:109] INFO {}
2017-10-24 10:09:07,341 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:09:07,341 log.py[line:109] INFO {}
2017-10-24 10:09:07,374 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:09:07,378 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:09:07,378 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:10:28,368 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:10:28,368 log.py[line:109] INFO {}
2017-10-24 10:10:28,373 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:10:28,374 log.py[line:109] INFO {}
2017-10-24 10:10:28,376 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:10:28,376 log.py[line:109] INFO {}
2017-10-24 10:10:28,380 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:10:28,381 log.py[line:109] INFO {}
2017-10-24 10:10:28,383 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:10:28,383 log.py[line:109] INFO {}
2017-10-24 10:10:28,385 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:10:28,386 log.py[line:109] INFO {}
2017-10-24 10:10:28,389 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:10:28,390 log.py[line:109] INFO {}
2017-10-24 10:10:28,393 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:10:28,393 log.py[line:109] INFO {}
2017-10-24 10:10:28,396 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:10:28,397 log.py[line:109] INFO {}
2017-10-24 10:10:28,400 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:10:28,400 log.py[line:109] INFO {}
2017-10-24 10:10:28,403 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:10:28,403 log.py[line:109] INFO {}
2017-10-24 10:10:28,432 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:10:28,435 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:10:28,435 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:12:25,086 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:12:25,087 log.py[line:109] INFO {}
2017-10-24 10:12:25,092 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:12:25,092 log.py[line:109] INFO {}
2017-10-24 10:12:25,094 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:12:25,094 log.py[line:109] INFO {}
2017-10-24 10:12:25,098 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:12:25,098 log.py[line:109] INFO {}
2017-10-24 10:12:25,100 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:12:25,101 log.py[line:109] INFO {}
2017-10-24 10:12:25,102 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:12:25,103 log.py[line:109] INFO {}
2017-10-24 10:12:25,106 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:12:25,107 log.py[line:109] INFO {}
2017-10-24 10:12:25,109 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:12:25,110 log.py[line:109] INFO {}
2017-10-24 10:12:25,112 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:12:25,113 log.py[line:109] INFO {}
2017-10-24 10:12:25,115 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:12:25,116 log.py[line:109] INFO {}
2017-10-24 10:12:25,118 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:12:25,118 log.py[line:109] INFO {}
2017-10-24 10:12:25,147 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:12:25,150 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:12:25,151 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:13:06,811 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:13:06,812 log.py[line:109] INFO {}
2017-10-24 10:13:06,821 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:13:06,823 log.py[line:109] INFO {}
2017-10-24 10:13:06,826 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:13:06,826 log.py[line:109] INFO {}
2017-10-24 10:13:06,831 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:13:06,832 log.py[line:109] INFO {}
2017-10-24 10:13:06,834 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:13:06,834 log.py[line:109] INFO {}
2017-10-24 10:13:06,838 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:13:06,838 log.py[line:109] INFO {}
2017-10-24 10:13:06,842 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:13:06,843 log.py[line:109] INFO {}
2017-10-24 10:13:06,848 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:13:06,848 log.py[line:109] INFO {}
2017-10-24 10:13:06,852 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:13:06,852 log.py[line:109] INFO {}
2017-10-24 10:13:06,856 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:13:06,856 log.py[line:109] INFO {}
2017-10-24 10:13:06,859 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:13:06,861 log.py[line:109] INFO {}
2017-10-24 10:13:06,903 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:13:06,907 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:13:06,907 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:25:25,975 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:25:25,976 log.py[line:109] INFO {}
2017-10-24 10:25:25,980 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:25:25,981 log.py[line:109] INFO {}
2017-10-24 10:25:25,983 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:25:25,983 log.py[line:109] INFO {}
2017-10-24 10:25:25,987 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:25:25,988 log.py[line:109] INFO {}
2017-10-24 10:25:25,989 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:25:25,990 log.py[line:109] INFO {}
2017-10-24 10:25:25,992 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:25:25,992 log.py[line:109] INFO {}
2017-10-24 10:25:25,995 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:25:25,996 log.py[line:109] INFO {}
2017-10-24 10:25:25,998 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:25:25,999 log.py[line:109] INFO {}
2017-10-24 10:25:26,002 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:25:26,002 log.py[line:109] INFO {}
2017-10-24 10:25:26,005 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:25:26,005 log.py[line:109] INFO {}
2017-10-24 10:25:26,008 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:25:26,008 log.py[line:109] INFO {}
2017-10-24 10:25:26,040 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:25:26,046 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:25:26,046 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-24 10:26:49,562 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-24 10:26:49,563 log.py[line:109] INFO {}
2017-10-24 10:26:49,567 log.py[line:109] INFO SELECT DATABASE()
2017-10-24 10:26:49,568 log.py[line:109] INFO {}
2017-10-24 10:26:49,570 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-24 10:26:49,570 log.py[line:109] INFO {}
2017-10-24 10:26:49,574 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-24 10:26:49,574 log.py[line:109] INFO {}
2017-10-24 10:26:49,576 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-24 10:26:49,577 log.py[line:109] INFO {}
2017-10-24 10:26:49,579 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-24 10:26:49,579 log.py[line:109] INFO {}
2017-10-24 10:26:49,582 log.py[line:109] INFO DESCRIBE `cus`
2017-10-24 10:26:49,582 log.py[line:109] INFO {}
2017-10-24 10:26:49,585 log.py[line:109] INFO DESCRIBE `vip`
2017-10-24 10:26:49,585 log.py[line:109] INFO {}
2017-10-24 10:26:49,588 log.py[line:109] INFO DESCRIBE `course`
2017-10-24 10:26:49,589 log.py[line:109] INFO {}
2017-10-24 10:26:49,591 log.py[line:109] INFO DESCRIBE `grade`
2017-10-24 10:26:49,591 log.py[line:109] INFO {}
2017-10-24 10:26:49,594 log.py[line:109] INFO DESCRIBE `student`
2017-10-24 10:26:49,595 log.py[line:109] INFO {}
2017-10-24 10:26:49,625 log.py[line:109] INFO BEGIN (implicit)
2017-10-24 10:26:49,628 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-10-24 10:26:49,628 log.py[line:109] INFO {'stu_name_1': '节'}
2017-10-26 19:23:50,711 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 19:23:50,730 log.py[line:109] INFO {}
2017-10-26 19:23:50,737 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 19:23:50,738 log.py[line:109] INFO {}
2017-10-26 19:23:50,741 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 19:23:50,742 log.py[line:109] INFO {}
2017-10-26 19:23:50,748 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 19:23:50,748 log.py[line:109] INFO {}
2017-10-26 19:23:50,751 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 19:23:50,751 log.py[line:109] INFO {}
2017-10-26 19:23:50,754 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 19:23:50,754 log.py[line:109] INFO {}
2017-10-26 19:23:50,758 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 19:23:50,759 log.py[line:109] INFO {}
2017-10-26 19:23:50,762 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 19:23:50,763 log.py[line:109] INFO {}
2017-10-26 19:23:50,766 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 19:23:50,766 log.py[line:109] INFO {}
2017-10-26 19:23:50,769 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 19:23:50,769 log.py[line:109] INFO {}
2017-10-26 19:23:50,772 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 19:23:50,773 log.py[line:109] INFO {}
2017-10-26 19:23:53,565 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 19:23:53,566 log.py[line:109] INFO {}
2017-10-26 19:23:53,573 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 19:23:53,574 log.py[line:109] INFO {}
2017-10-26 19:23:53,579 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 19:23:53,579 log.py[line:109] INFO {}
2017-10-26 19:23:53,584 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 19:23:53,586 log.py[line:109] INFO {}
2017-10-26 19:23:53,589 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 19:23:53,590 log.py[line:109] INFO {}
2017-10-26 19:23:53,592 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 19:23:53,593 log.py[line:109] INFO {}
2017-10-26 19:23:53,597 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 19:23:53,597 log.py[line:109] INFO {}
2017-10-26 19:23:53,603 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 19:23:53,604 log.py[line:109] INFO {}
2017-10-26 19:23:53,611 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 19:23:53,612 log.py[line:109] INFO {}
2017-10-26 19:23:53,619 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 19:23:53,621 log.py[line:109] INFO {}
2017-10-26 19:23:53,626 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 19:23:53,627 log.py[line:109] INFO {}
2017-10-26 19:23:55,308 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 19:23:55,310 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE false = 1
2017-10-26 19:23:55,310 log.py[line:109] INFO {}
2017-10-26 19:24:21,140 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 19:24:21,141 log.py[line:109] INFO {}
2017-10-26 19:24:21,146 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 19:24:21,147 log.py[line:109] INFO {}
2017-10-26 19:24:21,149 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 19:24:21,149 log.py[line:109] INFO {}
2017-10-26 19:24:21,154 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 19:24:21,154 log.py[line:109] INFO {}
2017-10-26 19:24:21,157 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 19:24:21,157 log.py[line:109] INFO {}
2017-10-26 19:24:21,160 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 19:24:21,161 log.py[line:109] INFO {}
2017-10-26 19:24:21,165 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 19:24:21,165 log.py[line:109] INFO {}
2017-10-26 19:24:21,168 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 19:24:21,169 log.py[line:109] INFO {}
2017-10-26 19:24:21,173 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 19:24:21,173 log.py[line:109] INFO {}
2017-10-26 19:24:21,177 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 19:24:21,177 log.py[line:109] INFO {}
2017-10-26 19:24:21,181 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 19:24:21,181 log.py[line:109] INFO {}
2017-10-26 19:24:25,903 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 19:24:25,904 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE false = 1
2017-10-26 19:24:25,905 log.py[line:109] INFO {}
2017-10-26 19:24:42,684 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 19:24:42,685 log.py[line:109] INFO {}
2017-10-26 19:24:42,690 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 19:24:42,691 log.py[line:109] INFO {}
2017-10-26 19:24:42,693 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 19:24:42,693 log.py[line:109] INFO {}
2017-10-26 19:24:42,697 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 19:24:42,697 log.py[line:109] INFO {}
2017-10-26 19:24:42,699 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 19:24:42,700 log.py[line:109] INFO {}
2017-10-26 19:24:42,702 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 19:24:42,702 log.py[line:109] INFO {}
2017-10-26 19:24:42,708 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 19:24:42,708 log.py[line:109] INFO {}
2017-10-26 19:24:42,713 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 19:24:42,714 log.py[line:109] INFO {}
2017-10-26 19:24:42,717 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 19:24:42,718 log.py[line:109] INFO {}
2017-10-26 19:24:42,722 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 19:24:42,722 log.py[line:109] INFO {}
2017-10-26 19:24:42,726 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 19:24:42,726 log.py[line:109] INFO {}
2017-10-26 19:35:57,290 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 19:35:57,290 log.py[line:109] INFO {}
2017-10-26 19:35:57,295 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 19:35:57,296 log.py[line:109] INFO {}
2017-10-26 19:35:57,299 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 19:35:57,300 log.py[line:109] INFO {}
2017-10-26 19:35:57,304 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 19:35:57,304 log.py[line:109] INFO {}
2017-10-26 19:35:57,306 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 19:35:57,307 log.py[line:109] INFO {}
2017-10-26 19:35:57,309 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 19:35:57,309 log.py[line:109] INFO {}
2017-10-26 19:35:57,312 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 19:35:57,313 log.py[line:109] INFO {}
2017-10-26 19:35:57,315 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 19:35:57,316 log.py[line:109] INFO {}
2017-10-26 19:35:57,319 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 19:35:57,319 log.py[line:109] INFO {}
2017-10-26 19:35:57,322 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 19:35:57,322 log.py[line:109] INFO {}
2017-10-26 19:35:57,325 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 19:35:57,325 log.py[line:109] INFO {}
2017-10-26 19:35:58,745 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 19:35:58,747 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)
2017-10-26 19:35:58,748 log.py[line:109] INFO {'stu_id_1': 1, 'stu_id_3': 3, 'stu_id_2': 2}
2017-10-26 20:21:04,675 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 20:21:04,692 log.py[line:109] INFO {}
2017-10-26 20:21:04,698 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 20:21:04,698 log.py[line:109] INFO {}
2017-10-26 20:21:04,701 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 20:21:04,701 log.py[line:109] INFO {}
2017-10-26 20:21:04,706 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 20:21:04,706 log.py[line:109] INFO {}
2017-10-26 20:21:04,709 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 20:21:04,709 log.py[line:109] INFO {}
2017-10-26 20:21:04,711 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 20:21:04,712 log.py[line:109] INFO {}
2017-10-26 20:21:04,715 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 20:21:04,716 log.py[line:109] INFO {}
2017-10-26 20:21:04,720 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 20:21:04,720 log.py[line:109] INFO {}
2017-10-26 20:21:04,724 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 20:21:04,724 log.py[line:109] INFO {}
2017-10-26 20:21:04,727 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 20:21:04,728 log.py[line:109] INFO {}
2017-10-26 20:21:04,731 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 20:21:04,731 log.py[line:109] INFO {}
2017-10-26 20:21:06,753 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 20:21:06,755 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)
2017-10-26 20:21:06,755 log.py[line:109] INFO {'stu_id_3': 3, 'stu_id_2': 2, 'stu_id_1': 1}
2017-10-26 21:11:51,987 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 21:11:51,995 log.py[line:109] INFO {}
2017-10-26 21:11:52,002 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 21:11:52,003 log.py[line:109] INFO {}
2017-10-26 21:11:52,005 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 21:11:52,005 log.py[line:109] INFO {}
2017-10-26 21:11:52,011 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 21:11:52,011 log.py[line:109] INFO {}
2017-10-26 21:11:52,014 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 21:11:52,015 log.py[line:109] INFO {}
2017-10-26 21:11:52,018 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 21:11:52,019 log.py[line:109] INFO {}
2017-10-26 21:11:52,023 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 21:11:52,024 log.py[line:109] INFO {}
2017-10-26 21:11:52,028 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 21:11:52,028 log.py[line:109] INFO {}
2017-10-26 21:11:52,032 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 21:11:52,032 log.py[line:109] INFO {}
2017-10-26 21:11:52,036 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 21:11:52,037 log.py[line:109] INFO {}
2017-10-26 21:11:52,040 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 21:11:52,041 log.py[line:109] INFO {}
2017-10-26 21:11:54,529 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 21:11:54,530 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s
2017-10-26 21:11:54,531 log.py[line:109] INFO {'stu_id_1': 8}
2017-10-26 21:12:22,907 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 21:12:22,908 log.py[line:109] INFO {}
2017-10-26 21:12:22,915 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 21:12:22,915 log.py[line:109] INFO {}
2017-10-26 21:12:22,918 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 21:12:22,918 log.py[line:109] INFO {}
2017-10-26 21:12:22,923 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 21:12:22,923 log.py[line:109] INFO {}
2017-10-26 21:12:22,926 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 21:12:22,926 log.py[line:109] INFO {}
2017-10-26 21:12:22,928 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 21:12:22,929 log.py[line:109] INFO {}
2017-10-26 21:12:22,933 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 21:12:22,933 log.py[line:109] INFO {}
2017-10-26 21:12:22,937 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 21:12:22,937 log.py[line:109] INFO {}
2017-10-26 21:12:22,941 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 21:12:22,941 log.py[line:109] INFO {}
2017-10-26 21:12:22,944 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 21:12:22,945 log.py[line:109] INFO {}
2017-10-26 21:12:22,948 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 21:12:22,948 log.py[line:109] INFO {}
2017-10-26 21:12:25,225 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 21:12:25,227 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s 
 LIMIT %(param_1)s
2017-10-26 21:12:25,228 log.py[line:109] INFO {'param_1': 1, 'stu_id_1': 8}
2017-10-26 22:47:50,812 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:47:50,813 log.py[line:109] INFO {}
2017-10-26 22:47:50,822 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:47:50,823 log.py[line:109] INFO {}
2017-10-26 22:47:50,825 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:47:50,826 log.py[line:109] INFO {}
2017-10-26 22:47:50,833 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:47:50,833 log.py[line:109] INFO {}
2017-10-26 22:47:50,836 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:47:50,837 log.py[line:109] INFO {}
2017-10-26 22:47:50,839 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:47:50,839 log.py[line:109] INFO {}
2017-10-26 22:47:50,844 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:47:50,845 log.py[line:109] INFO {}
2017-10-26 22:47:50,848 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:47:50,849 log.py[line:109] INFO {}
2017-10-26 22:47:50,853 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:47:50,855 log.py[line:109] INFO {}
2017-10-26 22:47:50,859 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:47:50,860 log.py[line:109] INFO {}
2017-10-26 22:47:50,870 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:47:50,870 log.py[line:109] INFO {}
2017-10-26 22:48:53,133 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:48:53,134 log.py[line:109] INFO {}
2017-10-26 22:48:53,140 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:48:53,141 log.py[line:109] INFO {}
2017-10-26 22:48:53,144 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:48:53,144 log.py[line:109] INFO {}
2017-10-26 22:48:53,149 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:48:53,150 log.py[line:109] INFO {}
2017-10-26 22:48:53,152 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:48:53,153 log.py[line:109] INFO {}
2017-10-26 22:48:53,156 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:48:53,156 log.py[line:109] INFO {}
2017-10-26 22:48:53,160 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:48:53,160 log.py[line:109] INFO {}
2017-10-26 22:48:53,164 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:48:53,164 log.py[line:109] INFO {}
2017-10-26 22:48:53,168 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:48:53,169 log.py[line:109] INFO {}
2017-10-26 22:48:53,172 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:48:53,172 log.py[line:109] INFO {}
2017-10-26 22:48:53,176 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:48:53,176 log.py[line:109] INFO {}
2017-10-26 22:49:12,879 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:49:12,881 log.py[line:109] INFO {}
2017-10-26 22:49:12,887 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:49:12,888 log.py[line:109] INFO {}
2017-10-26 22:49:12,891 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:49:12,891 log.py[line:109] INFO {}
2017-10-26 22:49:12,897 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:49:12,897 log.py[line:109] INFO {}
2017-10-26 22:49:12,900 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:49:12,900 log.py[line:109] INFO {}
2017-10-26 22:49:12,902 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:49:12,903 log.py[line:109] INFO {}
2017-10-26 22:49:12,907 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:49:12,908 log.py[line:109] INFO {}
2017-10-26 22:49:12,911 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:49:12,912 log.py[line:109] INFO {}
2017-10-26 22:49:12,918 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:49:12,918 log.py[line:109] INFO {}
2017-10-26 22:49:12,922 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:49:12,922 log.py[line:109] INFO {}
2017-10-26 22:49:12,926 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:49:12,927 log.py[line:109] INFO {}
2017-10-26 22:49:16,020 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:49:16,022 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s
2017-10-26 22:49:16,023 log.py[line:109] INFO {'stu_id_1': 9}
2017-10-26 22:49:47,741 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:49:47,742 log.py[line:109] INFO {}
2017-10-26 22:49:47,747 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:49:47,747 log.py[line:109] INFO {}
2017-10-26 22:49:47,750 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:49:47,750 log.py[line:109] INFO {}
2017-10-26 22:49:47,754 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:49:47,754 log.py[line:109] INFO {}
2017-10-26 22:49:47,756 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:49:47,756 log.py[line:109] INFO {}
2017-10-26 22:49:47,758 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:49:47,759 log.py[line:109] INFO {}
2017-10-26 22:49:47,762 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:49:47,762 log.py[line:109] INFO {}
2017-10-26 22:49:47,765 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:49:47,766 log.py[line:109] INFO {}
2017-10-26 22:49:47,768 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:49:47,768 log.py[line:109] INFO {}
2017-10-26 22:49:47,771 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:49:47,772 log.py[line:109] INFO {}
2017-10-26 22:49:47,774 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:49:47,775 log.py[line:109] INFO {}
2017-10-26 22:49:49,656 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:49:49,658 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s 
 LIMIT %(param_1)s
2017-10-26 22:49:49,658 log.py[line:109] INFO {'stu_id_1': 9, 'param_1': 3}
2017-10-26 22:50:12,129 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:50:12,135 log.py[line:109] INFO {}
2017-10-26 22:50:12,144 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:50:12,145 log.py[line:109] INFO {}
2017-10-26 22:50:12,147 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:50:12,148 log.py[line:109] INFO {}
2017-10-26 22:50:12,152 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:50:12,153 log.py[line:109] INFO {}
2017-10-26 22:50:12,155 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:50:12,156 log.py[line:109] INFO {}
2017-10-26 22:50:12,158 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:50:12,159 log.py[line:109] INFO {}
2017-10-26 22:50:12,162 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:50:12,162 log.py[line:109] INFO {}
2017-10-26 22:50:12,166 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:50:12,167 log.py[line:109] INFO {}
2017-10-26 22:50:12,170 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:50:12,170 log.py[line:109] INFO {}
2017-10-26 22:50:12,173 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:50:12,174 log.py[line:109] INFO {}
2017-10-26 22:50:12,177 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:50:12,177 log.py[line:109] INFO {}
2017-10-26 22:51:18,136 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:51:18,146 log.py[line:109] INFO {}
2017-10-26 22:51:18,154 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:51:18,154 log.py[line:109] INFO {}
2017-10-26 22:51:18,157 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:51:18,157 log.py[line:109] INFO {}
2017-10-26 22:51:18,162 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:51:18,163 log.py[line:109] INFO {}
2017-10-26 22:51:18,165 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:51:18,166 log.py[line:109] INFO {}
2017-10-26 22:51:18,170 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:51:18,170 log.py[line:109] INFO {}
2017-10-26 22:51:18,174 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:51:18,175 log.py[line:109] INFO {}
2017-10-26 22:51:18,178 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:51:18,179 log.py[line:109] INFO {}
2017-10-26 22:51:18,183 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:51:18,183 log.py[line:109] INFO {}
2017-10-26 22:51:18,187 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:51:18,187 log.py[line:109] INFO {}
2017-10-26 22:51:18,192 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:51:18,192 log.py[line:109] INFO {}
2017-10-26 22:51:24,959 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:51:24,960 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
 LIMIT %(param_1)s, %(param_2)s
2017-10-26 22:51:24,961 log.py[line:109] INFO {'param_1': 0, 'param_2': 3}
2017-10-26 22:52:04,579 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:52:04,580 log.py[line:109] INFO {}
2017-10-26 22:52:04,587 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:52:04,588 log.py[line:109] INFO {}
2017-10-26 22:52:04,593 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:52:04,594 log.py[line:109] INFO {}
2017-10-26 22:52:04,598 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:52:04,598 log.py[line:109] INFO {}
2017-10-26 22:52:04,600 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:52:04,600 log.py[line:109] INFO {}
2017-10-26 22:52:04,602 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:52:04,603 log.py[line:109] INFO {}
2017-10-26 22:52:04,606 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:52:04,606 log.py[line:109] INFO {}
2017-10-26 22:52:04,609 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:52:04,610 log.py[line:109] INFO {}
2017-10-26 22:52:04,612 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:52:04,613 log.py[line:109] INFO {}
2017-10-26 22:52:04,616 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:52:04,616 log.py[line:109] INFO {}
2017-10-26 22:52:04,619 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:52:04,619 log.py[line:109] INFO {}
2017-10-26 22:52:06,562 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:52:06,564 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
 LIMIT %(param_1)s, %(param_2)s
2017-10-26 22:52:06,564 log.py[line:109] INFO {'param_1': 0, 'param_2': 3}
2017-10-26 22:53:06,706 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:53:06,707 log.py[line:109] INFO {}
2017-10-26 22:53:06,712 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:53:06,712 log.py[line:109] INFO {}
2017-10-26 22:53:06,715 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:53:06,715 log.py[line:109] INFO {}
2017-10-26 22:53:06,720 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:53:06,720 log.py[line:109] INFO {}
2017-10-26 22:53:06,722 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:53:06,723 log.py[line:109] INFO {}
2017-10-26 22:53:06,725 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:53:06,726 log.py[line:109] INFO {}
2017-10-26 22:53:06,730 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:53:06,730 log.py[line:109] INFO {}
2017-10-26 22:53:06,733 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:53:06,734 log.py[line:109] INFO {}
2017-10-26 22:53:06,737 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:53:06,737 log.py[line:109] INFO {}
2017-10-26 22:53:06,741 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:53:06,741 log.py[line:109] INFO {}
2017-10-26 22:53:06,744 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:53:06,745 log.py[line:109] INFO {}
2017-10-26 22:53:15,607 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:53:15,612 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s 
 LIMIT %(param_1)s, %(param_2)s
2017-10-26 22:53:15,613 log.py[line:109] INFO {'stu_id_1': 9, 'param_1': 0, 'param_2': 3}
2017-10-26 22:53:42,997 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-26 22:53:42,997 log.py[line:109] INFO {}
2017-10-26 22:53:43,003 log.py[line:109] INFO SELECT DATABASE()
2017-10-26 22:53:43,004 log.py[line:109] INFO {}
2017-10-26 22:53:43,007 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-26 22:53:43,007 log.py[line:109] INFO {}
2017-10-26 22:53:43,012 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-26 22:53:43,012 log.py[line:109] INFO {}
2017-10-26 22:53:43,015 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-26 22:53:43,015 log.py[line:109] INFO {}
2017-10-26 22:53:43,018 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-26 22:53:43,019 log.py[line:109] INFO {}
2017-10-26 22:53:43,022 log.py[line:109] INFO DESCRIBE `student`
2017-10-26 22:53:43,023 log.py[line:109] INFO {}
2017-10-26 22:53:43,027 log.py[line:109] INFO DESCRIBE `course`
2017-10-26 22:53:43,028 log.py[line:109] INFO {}
2017-10-26 22:53:43,031 log.py[line:109] INFO DESCRIBE `grade`
2017-10-26 22:53:43,031 log.py[line:109] INFO {}
2017-10-26 22:53:43,035 log.py[line:109] INFO DESCRIBE `cus`
2017-10-26 22:53:43,036 log.py[line:109] INFO {}
2017-10-26 22:53:43,039 log.py[line:109] INFO DESCRIBE `vip`
2017-10-26 22:53:43,040 log.py[line:109] INFO {}
2017-10-26 22:53:44,648 log.py[line:109] INFO BEGIN (implicit)
2017-10-26 22:53:44,650 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id = %(stu_id_1)s 
 LIMIT %(param_1)s, %(param_2)s
2017-10-26 22:53:44,650 log.py[line:109] INFO {'stu_id_1': 9, 'param_1': 0, 'param_2': 3}
2017-10-27 13:04:08,276 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:04:08,277 log.py[line:109] INFO {}
2017-10-27 13:04:08,283 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:04:08,283 log.py[line:109] INFO {}
2017-10-27 13:04:08,286 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:04:08,286 log.py[line:109] INFO {}
2017-10-27 13:04:08,291 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:04:08,291 log.py[line:109] INFO {}
2017-10-27 13:04:08,294 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:04:08,294 log.py[line:109] INFO {}
2017-10-27 13:04:08,297 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:04:08,297 log.py[line:109] INFO {}
2017-10-27 13:04:08,301 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:04:08,302 log.py[line:109] INFO {}
2017-10-27 13:04:08,318 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:04:08,318 log.py[line:109] INFO {}
2017-10-27 13:04:08,322 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:04:08,322 log.py[line:109] INFO {}
2017-10-27 13:04:08,325 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:04:08,326 log.py[line:109] INFO {}
2017-10-27 13:04:08,329 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:04:08,330 log.py[line:109] INFO {}
2017-10-27 13:04:21,928 db_operation.py[line:188] ERROR 'Session' object has no attribute 'insert'
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 184, in insertStu
    session.insert(student)
AttributeError: 'Session' object has no attribute 'insert'
2017-10-27 13:04:29,316 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:04:29,317 log.py[line:109] INFO {}
2017-10-27 13:04:29,323 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:04:29,323 log.py[line:109] INFO {}
2017-10-27 13:04:29,326 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:04:29,327 log.py[line:109] INFO {}
2017-10-27 13:04:29,332 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:04:29,332 log.py[line:109] INFO {}
2017-10-27 13:04:29,335 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:04:29,335 log.py[line:109] INFO {}
2017-10-27 13:04:29,338 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:04:29,338 log.py[line:109] INFO {}
2017-10-27 13:04:29,342 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:04:29,344 log.py[line:109] INFO {}
2017-10-27 13:04:29,349 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:04:29,349 log.py[line:109] INFO {}
2017-10-27 13:04:29,357 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:04:29,357 log.py[line:109] INFO {}
2017-10-27 13:04:29,361 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:04:29,361 log.py[line:109] INFO {}
2017-10-27 13:04:29,364 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:04:29,364 log.py[line:109] INFO {}
2017-10-27 13:04:36,279 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:04:36,282 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:04:36,282 log.py[line:109] INFO {'stu_name': '买买提', 'stu_age': 30, 'stu_id': 8}
2017-10-27 13:04:36,327 log.py[line:109] INFO ROLLBACK
2017-10-27 13:04:43,256 db_operation.py[line:188] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '买买提' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '买买提', 'stu_age': 30, 'stu_id': 8}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '买买提' for key 'stu_name'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 185, in insertStu
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '买买提' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '买买提', 'stu_age': 30, 'stu_id': 8}]
2017-10-27 13:05:55,991 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:05:55,992 log.py[line:109] INFO {}
2017-10-27 13:05:55,997 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:05:55,998 log.py[line:109] INFO {}
2017-10-27 13:05:56,000 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:05:56,001 log.py[line:109] INFO {}
2017-10-27 13:05:56,005 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:05:56,006 log.py[line:109] INFO {}
2017-10-27 13:05:56,008 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:05:56,008 log.py[line:109] INFO {}
2017-10-27 13:05:56,011 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:05:56,011 log.py[line:109] INFO {}
2017-10-27 13:05:56,015 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:05:56,015 log.py[line:109] INFO {}
2017-10-27 13:05:56,019 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:05:56,019 log.py[line:109] INFO {}
2017-10-27 13:05:56,022 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:05:56,023 log.py[line:109] INFO {}
2017-10-27 13:05:56,025 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:05:56,026 log.py[line:109] INFO {}
2017-10-27 13:05:56,029 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:05:56,029 log.py[line:109] INFO {}
2017-10-27 13:06:04,078 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:06:04,081 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:06:04,081 log.py[line:109] INFO {'stu_id': 8, 'stu_age': 30, 'stu_name': '买买提'}
2017-10-27 13:06:04,082 log.py[line:109] INFO ROLLBACK
2017-10-27 13:08:20,409 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:08:20,410 log.py[line:109] INFO {}
2017-10-27 13:08:20,415 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:08:20,415 log.py[line:109] INFO {}
2017-10-27 13:08:20,417 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:08:20,418 log.py[line:109] INFO {}
2017-10-27 13:08:20,422 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:08:20,422 log.py[line:109] INFO {}
2017-10-27 13:08:20,424 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:08:20,424 log.py[line:109] INFO {}
2017-10-27 13:08:20,426 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:08:20,426 log.py[line:109] INFO {}
2017-10-27 13:08:20,430 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:08:20,430 log.py[line:109] INFO {}
2017-10-27 13:08:20,433 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:08:20,433 log.py[line:109] INFO {}
2017-10-27 13:08:20,436 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:08:20,436 log.py[line:109] INFO {}
2017-10-27 13:08:20,439 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:08:20,439 log.py[line:109] INFO {}
2017-10-27 13:08:20,442 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:08:20,443 log.py[line:109] INFO {}
2017-10-27 13:08:23,161 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:08:23,164 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:08:23,164 log.py[line:109] INFO {'stu_name': '买买提', 'stu_age': 30, 'stu_id': 7}
2017-10-27 13:08:23,165 log.py[line:109] INFO ROLLBACK
2017-10-27 13:10:08,102 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:10:08,103 log.py[line:109] INFO {}
2017-10-27 13:10:08,108 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:10:08,108 log.py[line:109] INFO {}
2017-10-27 13:10:08,110 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:10:08,111 log.py[line:109] INFO {}
2017-10-27 13:10:08,116 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:10:08,117 log.py[line:109] INFO {}
2017-10-27 13:10:08,121 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:10:08,121 log.py[line:109] INFO {}
2017-10-27 13:10:08,124 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:10:08,124 log.py[line:109] INFO {}
2017-10-27 13:10:08,128 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:10:08,128 log.py[line:109] INFO {}
2017-10-27 13:10:08,131 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:10:08,132 log.py[line:109] INFO {}
2017-10-27 13:10:08,134 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:10:08,135 log.py[line:109] INFO {}
2017-10-27 13:10:08,137 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:10:08,137 log.py[line:109] INFO {}
2017-10-27 13:10:08,140 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:10:08,140 log.py[line:109] INFO {}
2017-10-27 13:10:30,540 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:10:30,542 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:10:30,543 log.py[line:109] INFO {'stu_id': 8, 'stu_age': 30, 'stu_name': '买买提'}
2017-10-27 13:10:30,544 log.py[line:109] INFO ROLLBACK
2017-10-27 13:13:22,109 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:13:22,110 log.py[line:109] INFO {}
2017-10-27 13:13:22,115 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:13:22,115 log.py[line:109] INFO {}
2017-10-27 13:13:22,117 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:13:22,118 log.py[line:109] INFO {}
2017-10-27 13:13:22,122 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:13:22,122 log.py[line:109] INFO {}
2017-10-27 13:13:22,124 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:13:22,125 log.py[line:109] INFO {}
2017-10-27 13:13:22,126 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:13:22,127 log.py[line:109] INFO {}
2017-10-27 13:13:22,130 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:13:22,130 log.py[line:109] INFO {}
2017-10-27 13:13:22,133 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:13:22,134 log.py[line:109] INFO {}
2017-10-27 13:13:22,137 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:13:22,137 log.py[line:109] INFO {}
2017-10-27 13:13:22,140 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:13:22,140 log.py[line:109] INFO {}
2017-10-27 13:13:22,143 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:13:22,143 log.py[line:109] INFO {}
2017-10-27 13:13:24,818 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:13:24,821 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:13:24,821 log.py[line:109] INFO {'stu_age': 30, 'stu_id': 8, 'stu_name': '买买提'}
2017-10-27 13:13:24,823 log.py[line:109] INFO ROLLBACK
2017-10-27 13:13:29,834 db_operation.py[line:188] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '买买提' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 30, 'stu_id': 8, 'stu_name': '买买提'}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '买买提' for key 'stu_name'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 185, in insertStu
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '买买提' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 30, 'stu_id': 8, 'stu_name': '买买提'}]
2017-10-27 13:14:24,174 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:14:24,175 log.py[line:109] INFO {}
2017-10-27 13:14:24,184 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:14:24,184 log.py[line:109] INFO {}
2017-10-27 13:14:24,187 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:14:24,187 log.py[line:109] INFO {}
2017-10-27 13:14:24,192 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:14:24,193 log.py[line:109] INFO {}
2017-10-27 13:14:24,196 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:14:24,197 log.py[line:109] INFO {}
2017-10-27 13:14:24,200 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:14:24,200 log.py[line:109] INFO {}
2017-10-27 13:14:24,204 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:14:24,204 log.py[line:109] INFO {}
2017-10-27 13:14:24,208 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:14:24,208 log.py[line:109] INFO {}
2017-10-27 13:14:24,211 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:14:24,212 log.py[line:109] INFO {}
2017-10-27 13:14:24,215 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:14:24,215 log.py[line:109] INFO {}
2017-10-27 13:14:24,219 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:14:24,219 log.py[line:109] INFO {}
2017-10-27 13:14:27,133 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:14:27,136 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:14:27,136 log.py[line:109] INFO {'stu_id': 8, 'stu_name': '买买提', 'stu_age': 30}
2017-10-27 13:14:27,137 log.py[line:109] INFO ROLLBACK
2017-10-27 13:14:35,794 db_operation.py[line:217] INFO Duplicate entry '买买提' for key 'stu_name'
2017-10-27 13:14:57,289 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:14:57,290 log.py[line:109] INFO {}
2017-10-27 13:14:57,295 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:14:57,295 log.py[line:109] INFO {}
2017-10-27 13:14:57,298 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:14:57,298 log.py[line:109] INFO {}
2017-10-27 13:14:57,304 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:14:57,304 log.py[line:109] INFO {}
2017-10-27 13:14:57,306 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:14:57,307 log.py[line:109] INFO {}
2017-10-27 13:14:57,309 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:14:57,310 log.py[line:109] INFO {}
2017-10-27 13:14:57,317 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:14:57,318 log.py[line:109] INFO {}
2017-10-27 13:14:57,323 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:14:57,323 log.py[line:109] INFO {}
2017-10-27 13:14:57,327 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:14:57,327 log.py[line:109] INFO {}
2017-10-27 13:14:57,331 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:14:57,332 log.py[line:109] INFO {}
2017-10-27 13:14:57,342 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:14:57,343 log.py[line:109] INFO {}
2017-10-27 13:16:25,365 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:16:25,366 log.py[line:109] INFO {}
2017-10-27 13:16:25,373 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:16:25,374 log.py[line:109] INFO {}
2017-10-27 13:16:25,378 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:16:25,378 log.py[line:109] INFO {}
2017-10-27 13:16:25,384 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:16:25,385 log.py[line:109] INFO {}
2017-10-27 13:16:25,388 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:16:25,388 log.py[line:109] INFO {}
2017-10-27 13:16:25,391 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:16:25,392 log.py[line:109] INFO {}
2017-10-27 13:16:25,398 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:16:25,399 log.py[line:109] INFO {}
2017-10-27 13:16:25,404 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:16:25,404 log.py[line:109] INFO {}
2017-10-27 13:16:25,409 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:16:25,410 log.py[line:109] INFO {}
2017-10-27 13:16:25,414 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:16:25,415 log.py[line:109] INFO {}
2017-10-27 13:16:25,420 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:16:25,420 log.py[line:109] INFO {}
2017-10-27 13:16:28,653 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:16:28,655 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:16:28,656 log.py[line:109] INFO {'stu_id': 8, 'stu_age': 30, 'stu_name': '买买提'}
2017-10-27 13:16:28,657 log.py[line:109] INFO ROLLBACK
2017-10-27 13:17:09,824 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:17:09,825 log.py[line:109] INFO {}
2017-10-27 13:17:09,832 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:17:09,833 log.py[line:109] INFO {}
2017-10-27 13:17:09,837 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:17:09,838 log.py[line:109] INFO {}
2017-10-27 13:17:09,843 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:17:09,843 log.py[line:109] INFO {}
2017-10-27 13:17:09,845 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:17:09,846 log.py[line:109] INFO {}
2017-10-27 13:17:09,851 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:17:09,852 log.py[line:109] INFO {}
2017-10-27 13:17:09,856 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:17:09,856 log.py[line:109] INFO {}
2017-10-27 13:17:09,860 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:17:09,861 log.py[line:109] INFO {}
2017-10-27 13:17:09,864 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:17:09,865 log.py[line:109] INFO {}
2017-10-27 13:17:09,868 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:17:09,869 log.py[line:109] INFO {}
2017-10-27 13:17:09,872 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:17:09,873 log.py[line:109] INFO {}
2017-10-27 13:17:14,821 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 13:17:14,825 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 13:17:14,826 log.py[line:109] INFO {'stu_name': '低调', 'stu_id': 8, 'stu_age': 30}
2017-10-27 13:17:14,828 log.py[line:109] INFO COMMIT
2017-10-27 13:19:27,610 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:19:27,610 log.py[line:109] INFO {}
2017-10-27 13:19:27,615 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:19:27,615 log.py[line:109] INFO {}
2017-10-27 13:19:27,617 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:19:27,618 log.py[line:109] INFO {}
2017-10-27 13:19:27,622 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:19:27,623 log.py[line:109] INFO {}
2017-10-27 13:19:27,624 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:19:27,625 log.py[line:109] INFO {}
2017-10-27 13:19:27,627 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:19:27,627 log.py[line:109] INFO {}
2017-10-27 13:19:27,631 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:19:27,631 log.py[line:109] INFO {}
2017-10-27 13:19:27,634 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:19:27,634 log.py[line:109] INFO {}
2017-10-27 13:19:27,637 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:19:27,637 log.py[line:109] INFO {}
2017-10-27 13:19:27,640 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:19:27,640 log.py[line:109] INFO {}
2017-10-27 13:19:27,644 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:19:27,644 log.py[line:109] INFO {}
2017-10-27 13:19:54,966 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 13:19:54,967 log.py[line:109] INFO {}
2017-10-27 13:19:54,972 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 13:19:54,972 log.py[line:109] INFO {}
2017-10-27 13:19:54,974 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 13:19:54,975 log.py[line:109] INFO {}
2017-10-27 13:19:54,980 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 13:19:54,980 log.py[line:109] INFO {}
2017-10-27 13:19:54,982 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 13:19:54,983 log.py[line:109] INFO {}
2017-10-27 13:19:54,984 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 13:19:54,985 log.py[line:109] INFO {}
2017-10-27 13:19:54,988 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 13:19:54,988 log.py[line:109] INFO {}
2017-10-27 13:19:54,991 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 13:19:54,992 log.py[line:109] INFO {}
2017-10-27 13:19:54,994 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 13:19:54,995 log.py[line:109] INFO {}
2017-10-27 13:19:54,997 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 13:19:54,997 log.py[line:109] INFO {}
2017-10-27 13:19:55,000 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 13:19:55,001 log.py[line:109] INFO {}
2017-10-27 13:19:59,078 db_operation.py[line:218] INFO 一个测试用的异常
2017-10-27 14:31:05,304 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 14:31:05,305 log.py[line:109] INFO {}
2017-10-27 14:31:05,310 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 14:31:05,311 log.py[line:109] INFO {}
2017-10-27 14:31:05,313 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 14:31:05,313 log.py[line:109] INFO {}
2017-10-27 14:31:05,317 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 14:31:05,317 log.py[line:109] INFO {}
2017-10-27 14:31:05,320 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 14:31:05,320 log.py[line:109] INFO {}
2017-10-27 14:31:05,322 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 14:31:05,322 log.py[line:109] INFO {}
2017-10-27 14:31:05,325 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 14:31:05,326 log.py[line:109] INFO {}
2017-10-27 14:31:05,329 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 14:31:05,330 log.py[line:109] INFO {}
2017-10-27 14:31:05,334 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 14:31:05,335 log.py[line:109] INFO {}
2017-10-27 14:31:05,339 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 14:31:05,340 log.py[line:109] INFO {}
2017-10-27 14:31:05,343 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 14:31:05,343 log.py[line:109] INFO {}
2017-10-27 14:31:13,658 db_operation.py[line:220] INFO 一个测试用的异常
2017-10-27 14:31:32,037 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 14:31:32,039 log.py[line:109] INFO {}
2017-10-27 14:31:32,044 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 14:31:32,045 log.py[line:109] INFO {}
2017-10-27 14:31:32,048 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 14:31:32,048 log.py[line:109] INFO {}
2017-10-27 14:31:32,053 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 14:31:32,054 log.py[line:109] INFO {}
2017-10-27 14:31:32,056 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 14:31:32,057 log.py[line:109] INFO {}
2017-10-27 14:31:32,059 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 14:31:32,060 log.py[line:109] INFO {}
2017-10-27 14:31:32,064 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 14:31:32,065 log.py[line:109] INFO {}
2017-10-27 14:31:32,071 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 14:31:32,073 log.py[line:109] INFO {}
2017-10-27 14:31:32,079 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 14:31:32,080 log.py[line:109] INFO {}
2017-10-27 14:31:32,086 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 14:31:32,086 log.py[line:109] INFO {}
2017-10-27 14:31:32,090 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 14:31:32,091 log.py[line:109] INFO {}
2017-10-27 14:37:46,041 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-27 14:37:46,042 log.py[line:109] INFO {}
2017-10-27 14:37:46,048 log.py[line:109] INFO SELECT DATABASE()
2017-10-27 14:37:46,048 log.py[line:109] INFO {}
2017-10-27 14:37:46,051 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-27 14:37:46,052 log.py[line:109] INFO {}
2017-10-27 14:37:46,057 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-27 14:37:46,057 log.py[line:109] INFO {}
2017-10-27 14:37:46,060 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-27 14:37:46,060 log.py[line:109] INFO {}
2017-10-27 14:37:46,063 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-27 14:37:46,063 log.py[line:109] INFO {}
2017-10-27 14:37:46,067 log.py[line:109] INFO DESCRIBE `grade`
2017-10-27 14:37:46,068 log.py[line:109] INFO {}
2017-10-27 14:37:46,072 log.py[line:109] INFO DESCRIBE `student`
2017-10-27 14:37:46,072 log.py[line:109] INFO {}
2017-10-27 14:37:46,076 log.py[line:109] INFO DESCRIBE `vip`
2017-10-27 14:37:46,076 log.py[line:109] INFO {}
2017-10-27 14:37:46,080 log.py[line:109] INFO DESCRIBE `cus`
2017-10-27 14:37:46,081 log.py[line:109] INFO {}
2017-10-27 14:37:46,084 log.py[line:109] INFO DESCRIBE `course`
2017-10-27 14:37:46,085 log.py[line:109] INFO {}
2017-10-27 14:37:52,968 log.py[line:109] INFO BEGIN (implicit)
2017-10-27 14:37:52,970 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-27 14:37:52,971 log.py[line:109] INFO {'stu_name': '低调', 'stu_age': 30, 'stu_id': 9}
2017-10-27 14:37:52,972 log.py[line:109] INFO ROLLBACK
2017-10-27 14:38:06,426 db_operation.py[line:218] INFO (pymysql.err.IntegrityError) (1062, "Duplicate entry '低调' for key 'stu_name'")
2017-10-28 14:44:38,135 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 14:44:38,136 log.py[line:109] INFO {}
2017-10-28 14:44:38,143 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 14:44:38,143 log.py[line:109] INFO {}
2017-10-28 14:44:38,145 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 14:44:38,146 log.py[line:109] INFO {}
2017-10-28 14:44:38,150 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 14:44:38,150 log.py[line:109] INFO {}
2017-10-28 14:44:38,152 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 14:44:38,153 log.py[line:109] INFO {}
2017-10-28 14:44:38,154 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 14:44:38,155 log.py[line:109] INFO {}
2017-10-28 14:44:38,158 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 14:44:38,159 log.py[line:109] INFO {}
2017-10-28 14:44:38,162 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 14:44:38,162 log.py[line:109] INFO {}
2017-10-28 14:44:38,164 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 14:44:38,165 log.py[line:109] INFO {}
2017-10-28 14:44:38,168 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 14:44:38,168 log.py[line:109] INFO {}
2017-10-28 14:44:38,171 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 14:44:38,172 log.py[line:109] INFO {}
2017-10-28 14:44:45,362 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 14:44:45,364 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 14:44:45,365 log.py[line:109] INFO {'stu_id_1': 8}
2017-10-28 14:48:03,177 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 14:48:03,178 log.py[line:109] INFO {}
2017-10-28 14:48:03,185 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 14:48:03,186 log.py[line:109] INFO {}
2017-10-28 14:48:03,191 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 14:48:03,191 log.py[line:109] INFO {}
2017-10-28 14:48:03,197 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 14:48:03,197 log.py[line:109] INFO {}
2017-10-28 14:48:03,201 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 14:48:03,202 log.py[line:109] INFO {}
2017-10-28 14:48:03,207 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 14:48:03,207 log.py[line:109] INFO {}
2017-10-28 14:48:03,212 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 14:48:03,212 log.py[line:109] INFO {}
2017-10-28 14:48:03,216 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 14:48:03,216 log.py[line:109] INFO {}
2017-10-28 14:48:03,220 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 14:48:03,221 log.py[line:109] INFO {}
2017-10-28 14:48:03,224 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 14:48:03,225 log.py[line:109] INFO {}
2017-10-28 14:48:03,229 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 14:48:03,230 log.py[line:109] INFO {}
2017-10-28 14:48:11,088 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 14:48:11,089 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 14:48:11,090 log.py[line:109] INFO {'stu_id_1': 8}
2017-10-28 14:58:52,180 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 14:58:52,181 log.py[line:109] INFO {}
2017-10-28 14:58:52,186 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 14:58:52,186 log.py[line:109] INFO {}
2017-10-28 14:58:52,189 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 14:58:52,189 log.py[line:109] INFO {}
2017-10-28 14:58:52,193 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 14:58:52,193 log.py[line:109] INFO {}
2017-10-28 14:58:52,195 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 14:58:52,195 log.py[line:109] INFO {}
2017-10-28 14:58:52,197 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 14:58:52,197 log.py[line:109] INFO {}
2017-10-28 14:58:52,201 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 14:58:52,201 log.py[line:109] INFO {}
2017-10-28 14:58:52,204 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 14:58:52,205 log.py[line:109] INFO {}
2017-10-28 14:58:52,207 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 14:58:52,208 log.py[line:109] INFO {}
2017-10-28 14:58:52,211 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 14:58:52,211 log.py[line:109] INFO {}
2017-10-28 14:58:52,215 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 14:58:52,216 log.py[line:109] INFO {}
2017-10-28 14:59:01,416 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 14:59:01,419 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 14:59:01,420 log.py[line:109] INFO {'stu_id_1': 8}
2017-10-28 15:42:47,474 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:42:47,474 log.py[line:109] INFO {}
2017-10-28 15:42:47,481 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:42:47,482 log.py[line:109] INFO {}
2017-10-28 15:42:47,486 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:42:47,486 log.py[line:109] INFO {}
2017-10-28 15:42:47,491 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:42:47,492 log.py[line:109] INFO {}
2017-10-28 15:42:47,495 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:42:47,495 log.py[line:109] INFO {}
2017-10-28 15:42:47,498 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:42:47,499 log.py[line:109] INFO {}
2017-10-28 15:42:47,503 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:42:47,503 log.py[line:109] INFO {}
2017-10-28 15:42:47,507 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:42:47,508 log.py[line:109] INFO {}
2017-10-28 15:42:47,511 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:42:47,512 log.py[line:109] INFO {}
2017-10-28 15:42:47,518 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:42:47,519 log.py[line:109] INFO {}
2017-10-28 15:42:47,524 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:42:47,525 log.py[line:109] INFO {}
2017-10-28 15:42:49,654 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 15:42:49,655 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 15:42:49,656 log.py[line:109] INFO {'stu_id_1': 8}
2017-10-28 15:43:30,456 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:43:30,457 log.py[line:109] INFO {}
2017-10-28 15:43:30,462 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:43:30,462 log.py[line:109] INFO {}
2017-10-28 15:43:30,465 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:43:30,465 log.py[line:109] INFO {}
2017-10-28 15:43:30,469 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:43:30,470 log.py[line:109] INFO {}
2017-10-28 15:43:30,471 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:43:30,472 log.py[line:109] INFO {}
2017-10-28 15:43:30,474 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:43:30,474 log.py[line:109] INFO {}
2017-10-28 15:43:30,478 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:43:30,478 log.py[line:109] INFO {}
2017-10-28 15:43:30,481 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:43:30,482 log.py[line:109] INFO {}
2017-10-28 15:43:30,485 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:43:30,485 log.py[line:109] INFO {}
2017-10-28 15:43:30,488 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:43:30,488 log.py[line:109] INFO {}
2017-10-28 15:43:30,492 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:43:30,492 log.py[line:109] INFO {}
2017-10-28 15:44:18,336 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:44:18,337 log.py[line:109] INFO {}
2017-10-28 15:44:18,342 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:44:18,343 log.py[line:109] INFO {}
2017-10-28 15:44:18,345 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:44:18,345 log.py[line:109] INFO {}
2017-10-28 15:44:18,350 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:44:18,351 log.py[line:109] INFO {}
2017-10-28 15:44:18,353 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:44:18,354 log.py[line:109] INFO {}
2017-10-28 15:44:18,356 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:44:18,356 log.py[line:109] INFO {}
2017-10-28 15:44:18,360 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:44:18,361 log.py[line:109] INFO {}
2017-10-28 15:44:18,368 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:44:18,370 log.py[line:109] INFO {}
2017-10-28 15:44:18,375 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:44:18,376 log.py[line:109] INFO {}
2017-10-28 15:44:18,379 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:44:18,379 log.py[line:109] INFO {}
2017-10-28 15:44:18,382 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:44:18,383 log.py[line:109] INFO {}
2017-10-28 15:44:42,317 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:44:42,318 log.py[line:109] INFO {}
2017-10-28 15:44:42,325 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:44:42,326 log.py[line:109] INFO {}
2017-10-28 15:44:42,328 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:44:42,329 log.py[line:109] INFO {}
2017-10-28 15:44:42,333 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:44:42,333 log.py[line:109] INFO {}
2017-10-28 15:44:42,335 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:44:42,336 log.py[line:109] INFO {}
2017-10-28 15:44:42,338 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:44:42,338 log.py[line:109] INFO {}
2017-10-28 15:44:42,342 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:44:42,342 log.py[line:109] INFO {}
2017-10-28 15:44:42,346 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:44:42,346 log.py[line:109] INFO {}
2017-10-28 15:44:42,349 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:44:42,350 log.py[line:109] INFO {}
2017-10-28 15:44:42,353 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:44:42,353 log.py[line:109] INFO {}
2017-10-28 15:44:42,357 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:44:42,357 log.py[line:109] INFO {}
2017-10-28 15:45:06,796 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 15:45:08,668 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 15:45:09,562 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 15:45:29,183 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 15:45:31,054 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 15:45:31,987 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 15:47:21,001 db_operation.py[line:226] ERROR (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 224, in <module>
    testDel()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 191, in testDel
    session.query(Student).filter(Student.stu_id == 7).delete()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/query.py", line 3212, in delete
    delete_op.exec_()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1179, in exec_
    self._do_exec()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1363, in _do_exec
    mapper=self.mapper)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 1139, in execute
    bind, close_with_result=True).execute(clause, params or {})
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
2017-10-28 15:50:40,045 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:50:40,045 log.py[line:109] INFO {}
2017-10-28 15:50:40,047 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:50:40,048 log.py[line:109] INFO {}
2017-10-28 15:50:40,048 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:50:40,049 log.py[line:109] INFO {}
2017-10-28 15:50:40,050 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:50:40,050 log.py[line:109] INFO {}
2017-10-28 15:50:40,051 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:50:40,051 log.py[line:109] INFO {}
2017-10-28 15:50:40,052 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:50:40,052 log.py[line:109] INFO {}
2017-10-28 15:50:40,053 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:50:40,053 log.py[line:109] INFO {}
2017-10-28 15:50:40,054 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:50:40,055 log.py[line:109] INFO {}
2017-10-28 15:50:40,055 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:50:40,056 log.py[line:109] INFO {}
2017-10-28 15:50:40,056 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:50:40,057 log.py[line:109] INFO {}
2017-10-28 15:50:40,057 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:50:40,058 log.py[line:109] INFO {}
2017-10-28 15:50:40,079 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 15:50:40,079 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 15:50:40,079 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 15:51:31,248 db_operation.py[line:225] ERROR (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 223, in <module>
    testDel()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 191, in testDel
    session.query(Student).filter(Student.stu_id == 7).delete()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/query.py", line 3212, in delete
    delete_op.exec_()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1179, in exec_
    self._do_exec()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1363, in _do_exec
    mapper=self.mapper)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 1139, in execute
    bind, close_with_result=True).execute(clause, params or {})
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
2017-10-28 15:54:30,563 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 15:54:30,563 log.py[line:109] INFO {}
2017-10-28 15:54:30,573 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 15:54:30,573 log.py[line:109] INFO {}
2017-10-28 15:54:30,577 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 15:54:30,578 log.py[line:109] INFO {}
2017-10-28 15:54:30,584 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 15:54:30,585 log.py[line:109] INFO {}
2017-10-28 15:54:30,588 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 15:54:30,589 log.py[line:109] INFO {}
2017-10-28 15:54:30,591 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 15:54:30,592 log.py[line:109] INFO {}
2017-10-28 15:54:30,596 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 15:54:30,596 log.py[line:109] INFO {}
2017-10-28 15:54:30,600 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 15:54:30,600 log.py[line:109] INFO {}
2017-10-28 15:54:30,604 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 15:54:30,605 log.py[line:109] INFO {}
2017-10-28 15:54:30,608 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 15:54:30,608 log.py[line:109] INFO {}
2017-10-28 15:54:30,613 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 15:54:30,614 log.py[line:109] INFO {}
2017-10-28 15:54:38,727 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 15:54:38,728 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 15:54:38,729 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 15:57:04,352 db_operation.py[line:225] ERROR (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 223, in <module>
    testDel()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 191, in testDel
    row = session.query(Student).filter(Student.stu_id == 7).delete(synchronize_session=False)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/query.py", line 3212, in delete
    delete_op.exec_()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1179, in exec_
    self._do_exec()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1363, in _do_exec
    mapper=self.mapper)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 1139, in execute
    bind, close_with_result=True).execute(clause, params or {})
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
2017-10-28 16:05:01,716 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:05:01,717 log.py[line:109] INFO {}
2017-10-28 16:05:01,722 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:05:01,722 log.py[line:109] INFO {}
2017-10-28 16:05:01,724 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:05:01,725 log.py[line:109] INFO {}
2017-10-28 16:05:01,729 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:05:01,729 log.py[line:109] INFO {}
2017-10-28 16:05:01,731 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:05:01,731 log.py[line:109] INFO {}
2017-10-28 16:05:01,733 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:05:01,734 log.py[line:109] INFO {}
2017-10-28 16:05:01,737 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:05:01,738 log.py[line:109] INFO {}
2017-10-28 16:05:01,741 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:05:01,742 log.py[line:109] INFO {}
2017-10-28 16:05:01,745 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:05:01,746 log.py[line:109] INFO {}
2017-10-28 16:05:01,749 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:05:01,750 log.py[line:109] INFO {}
2017-10-28 16:05:01,754 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:05:01,754 log.py[line:109] INFO {}
2017-10-28 16:05:44,811 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:05:46,432 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 16:05:47,217 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 16:06:40,011 db_operation.py[line:225] ERROR (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 223, in <module>
    testDel()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 191, in testDel
    row = session.query(Student).filter(Student.stu_id == 7).delete(synchronize_session=False)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/query.py", line 3212, in delete
    delete_op.exec_()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1179, in exec_
    self._do_exec()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 1363, in _do_exec
    mapper=self.mapper)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 1139, in execute
    bind, close_with_result=True).execute(clause, params or {})
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'DELETE FROM student WHERE student.stu_id = %(stu_id_1)s'] [parameters: {'stu_id_1': 7}]
2017-10-28 16:08:45,101 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:08:45,102 log.py[line:109] INFO {}
2017-10-28 16:08:45,109 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:08:45,109 log.py[line:109] INFO {}
2017-10-28 16:08:45,112 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:08:45,112 log.py[line:109] INFO {}
2017-10-28 16:08:45,117 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:08:45,118 log.py[line:109] INFO {}
2017-10-28 16:08:45,120 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:08:45,121 log.py[line:109] INFO {}
2017-10-28 16:08:45,123 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:08:45,124 log.py[line:109] INFO {}
2017-10-28 16:08:45,128 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:08:45,129 log.py[line:109] INFO {}
2017-10-28 16:08:45,132 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:08:45,133 log.py[line:109] INFO {}
2017-10-28 16:08:45,136 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:08:45,137 log.py[line:109] INFO {}
2017-10-28 16:08:45,140 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:08:45,141 log.py[line:109] INFO {}
2017-10-28 16:08:45,144 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:08:45,145 log.py[line:109] INFO {}
2017-10-28 16:08:45,212 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:08:45,216 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)
2017-10-28 16:08:45,216 log.py[line:109] INFO {'stu_id_1': 1, 'stu_id_3': 3, 'stu_id_2': 2}
2017-10-28 16:08:56,193 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:08:56,193 log.py[line:109] INFO {}
2017-10-28 16:08:56,198 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:08:56,198 log.py[line:109] INFO {}
2017-10-28 16:08:56,200 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:08:56,201 log.py[line:109] INFO {}
2017-10-28 16:08:56,205 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:08:56,205 log.py[line:109] INFO {}
2017-10-28 16:08:56,207 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:08:56,207 log.py[line:109] INFO {}
2017-10-28 16:08:56,209 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:08:56,209 log.py[line:109] INFO {}
2017-10-28 16:08:56,213 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:08:56,213 log.py[line:109] INFO {}
2017-10-28 16:08:56,216 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:08:56,216 log.py[line:109] INFO {}
2017-10-28 16:08:56,219 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:08:56,219 log.py[line:109] INFO {}
2017-10-28 16:08:56,222 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:08:56,223 log.py[line:109] INFO {}
2017-10-28 16:08:56,225 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:08:56,226 log.py[line:109] INFO {}
2017-10-28 16:09:02,670 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:09:02,672 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)
2017-10-28 16:09:02,672 log.py[line:109] INFO {'stu_id_2': 2, 'stu_id_3': 3, 'stu_id_1': 1}
2017-10-28 16:22:44,258 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:22:44,258 log.py[line:109] INFO {}
2017-10-28 16:22:44,261 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:22:44,261 log.py[line:109] INFO {}
2017-10-28 16:22:44,263 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:22:44,263 log.py[line:109] INFO {}
2017-10-28 16:22:44,265 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:22:44,265 log.py[line:109] INFO {}
2017-10-28 16:22:44,266 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:22:44,267 log.py[line:109] INFO {}
2017-10-28 16:22:44,268 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:22:44,268 log.py[line:109] INFO {}
2017-10-28 16:22:44,270 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:22:44,270 log.py[line:109] INFO {}
2017-10-28 16:22:44,272 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:22:44,272 log.py[line:109] INFO {}
2017-10-28 16:22:44,274 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:22:44,274 log.py[line:109] INFO {}
2017-10-28 16:22:44,275 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:22:44,276 log.py[line:109] INFO {}
2017-10-28 16:22:44,277 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:22:44,277 log.py[line:109] INFO {}
2017-10-28 16:22:44,293 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:22:44,294 log.py[line:109] INFO delete from student where stu_id =7
2017-10-28 16:22:44,294 log.py[line:109] INFO {}
2017-10-28 16:23:35,444 db_operation.py[line:226] ERROR (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'delete from student where stu_id =7']
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 224, in <module>
    testDel()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 192, in testDel
    session.execute("delete from student where stu_id =7")
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 1139, in execute
    bind, close_with_result=True).execute(clause, params or {})
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1205, 'Lock wait timeout exceeded; try restarting transaction') [SQL: 'delete from student where stu_id =7']
2017-10-28 16:26:06,937 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:26:06,938 log.py[line:109] INFO {}
2017-10-28 16:26:06,940 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:26:06,940 log.py[line:109] INFO {}
2017-10-28 16:26:06,941 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:26:06,941 log.py[line:109] INFO {}
2017-10-28 16:26:06,943 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:26:06,943 log.py[line:109] INFO {}
2017-10-28 16:26:06,943 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:26:06,944 log.py[line:109] INFO {}
2017-10-28 16:26:06,944 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:26:06,945 log.py[line:109] INFO {}
2017-10-28 16:26:06,946 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:26:06,946 log.py[line:109] INFO {}
2017-10-28 16:26:06,947 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:26:06,947 log.py[line:109] INFO {}
2017-10-28 16:26:06,948 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:26:06,948 log.py[line:109] INFO {}
2017-10-28 16:26:06,949 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:26:06,949 log.py[line:109] INFO {}
2017-10-28 16:26:06,950 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:26:06,950 log.py[line:109] INFO {}
2017-10-28 16:26:06,958 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:26:06,958 log.py[line:109] INFO delete from student where stu_id =7
2017-10-28 16:26:06,958 log.py[line:109] INFO {}
2017-10-28 16:26:59,646 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:26:59,647 log.py[line:109] INFO {}
2017-10-28 16:26:59,649 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:26:59,650 log.py[line:109] INFO {}
2017-10-28 16:26:59,650 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:26:59,651 log.py[line:109] INFO {}
2017-10-28 16:26:59,652 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:26:59,652 log.py[line:109] INFO {}
2017-10-28 16:26:59,653 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:26:59,653 log.py[line:109] INFO {}
2017-10-28 16:26:59,654 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:26:59,654 log.py[line:109] INFO {}
2017-10-28 16:26:59,655 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:26:59,655 log.py[line:109] INFO {}
2017-10-28 16:26:59,656 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:26:59,656 log.py[line:109] INFO {}
2017-10-28 16:26:59,658 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:26:59,658 log.py[line:109] INFO {}
2017-10-28 16:26:59,659 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:26:59,659 log.py[line:109] INFO {}
2017-10-28 16:26:59,660 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:26:59,660 log.py[line:109] INFO {}
2017-10-28 16:26:59,672 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:26:59,672 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 16:26:59,673 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 16:27:50,814 log.py[line:109] INFO ROLLBACK
2017-10-28 16:28:02,194 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:28:02,194 log.py[line:109] INFO {}
2017-10-28 16:28:02,196 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:28:02,197 log.py[line:109] INFO {}
2017-10-28 16:28:02,197 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:28:02,198 log.py[line:109] INFO {}
2017-10-28 16:28:02,199 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:28:02,199 log.py[line:109] INFO {}
2017-10-28 16:28:02,200 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:28:02,200 log.py[line:109] INFO {}
2017-10-28 16:28:02,201 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:28:02,201 log.py[line:109] INFO {}
2017-10-28 16:28:02,202 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:28:02,202 log.py[line:109] INFO {}
2017-10-28 16:28:02,203 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:28:02,203 log.py[line:109] INFO {}
2017-10-28 16:28:02,204 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:28:02,204 log.py[line:109] INFO {}
2017-10-28 16:28:02,205 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:28:02,205 log.py[line:109] INFO {}
2017-10-28 16:28:02,206 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:28:02,206 log.py[line:109] INFO {}
2017-10-28 16:28:02,220 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:28:02,221 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 16:28:02,221 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 16:29:16,517 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:29:16,517 log.py[line:109] INFO {}
2017-10-28 16:29:16,520 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:29:16,521 log.py[line:109] INFO {}
2017-10-28 16:29:16,521 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:29:16,522 log.py[line:109] INFO {}
2017-10-28 16:29:16,524 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:29:16,525 log.py[line:109] INFO {}
2017-10-28 16:29:16,526 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:29:16,526 log.py[line:109] INFO {}
2017-10-28 16:29:16,527 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:29:16,527 log.py[line:109] INFO {}
2017-10-28 16:29:16,528 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:29:16,529 log.py[line:109] INFO {}
2017-10-28 16:29:16,530 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:29:16,530 log.py[line:109] INFO {}
2017-10-28 16:29:16,532 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:29:16,532 log.py[line:109] INFO {}
2017-10-28 16:29:16,533 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:29:16,533 log.py[line:109] INFO {}
2017-10-28 16:29:16,534 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:29:16,535 log.py[line:109] INFO {}
2017-10-28 16:29:16,549 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:29:16,550 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 16:29:16,550 log.py[line:109] INFO {'stu_id_1': 7}
2017-10-28 16:29:16,551 db_operation.py[line:193] INFO 1
2017-10-28 16:29:16,551 log.py[line:109] INFO COMMIT
2017-10-28 16:55:42,016 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:55:42,017 log.py[line:109] INFO {}
2017-10-28 16:55:42,019 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:55:42,019 log.py[line:109] INFO {}
2017-10-28 16:55:42,021 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:55:42,021 log.py[line:109] INFO {}
2017-10-28 16:55:42,024 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:55:42,024 log.py[line:109] INFO {}
2017-10-28 16:55:42,026 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:55:42,027 log.py[line:109] INFO {}
2017-10-28 16:55:42,029 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:55:42,029 log.py[line:109] INFO {}
2017-10-28 16:55:42,030 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:55:42,030 log.py[line:109] INFO {}
2017-10-28 16:55:42,032 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:55:42,032 log.py[line:109] INFO {}
2017-10-28 16:55:42,033 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:55:42,033 log.py[line:109] INFO {}
2017-10-28 16:55:42,034 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:55:42,034 log.py[line:109] INFO {}
2017-10-28 16:55:42,036 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:55:42,036 log.py[line:109] INFO {}
2017-10-28 16:55:42,051 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:55:42,052 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 16:55:42,052 log.py[line:109] INFO {'stu_age': 30, 'stu_id': 9, 'stu_name': '低调'}
2017-10-28 16:55:42,053 log.py[line:109] INFO ROLLBACK
2017-10-28 16:55:42,054 db_operation.py[line:226] INFO (pymysql.err.IntegrityError) (1062, "Duplicate entry '低调' for key 'stu_name'")
2017-10-28 16:56:14,572 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:56:14,574 log.py[line:109] INFO {}
2017-10-28 16:56:14,583 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:56:14,584 log.py[line:109] INFO {}
2017-10-28 16:56:14,588 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:56:14,589 log.py[line:109] INFO {}
2017-10-28 16:56:14,595 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:56:14,597 log.py[line:109] INFO {}
2017-10-28 16:56:14,602 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:56:14,602 log.py[line:109] INFO {}
2017-10-28 16:56:14,607 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:56:14,608 log.py[line:109] INFO {}
2017-10-28 16:56:14,618 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:56:14,619 log.py[line:109] INFO {}
2017-10-28 16:56:14,623 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:56:14,623 log.py[line:109] INFO {}
2017-10-28 16:56:14,627 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:56:14,628 log.py[line:109] INFO {}
2017-10-28 16:56:14,631 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:56:14,632 log.py[line:109] INFO {}
2017-10-28 16:56:14,635 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:56:14,635 log.py[line:109] INFO {}
2017-10-28 16:56:16,792 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 16:56:16,795 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 16:56:16,797 log.py[line:109] INFO {'stu_name': '低调', 'stu_id': 9, 'stu_age': 30}
2017-10-28 16:56:16,798 log.py[line:109] INFO ROLLBACK
2017-10-28 16:58:59,200 db_operation.py[line:226] INFO (pymysql.err.IntegrityError) (1062, "Duplicate entry '低调' for key 'stu_name'")
2017-10-28 16:59:09,460 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 16:59:09,461 log.py[line:109] INFO {}
2017-10-28 16:59:09,469 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 16:59:09,470 log.py[line:109] INFO {}
2017-10-28 16:59:09,474 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 16:59:09,475 log.py[line:109] INFO {}
2017-10-28 16:59:09,482 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 16:59:09,483 log.py[line:109] INFO {}
2017-10-28 16:59:09,486 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 16:59:09,488 log.py[line:109] INFO {}
2017-10-28 16:59:09,493 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 16:59:09,495 log.py[line:109] INFO {}
2017-10-28 16:59:09,506 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 16:59:09,506 log.py[line:109] INFO {}
2017-10-28 16:59:09,510 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 16:59:09,510 log.py[line:109] INFO {}
2017-10-28 16:59:09,513 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 16:59:09,513 log.py[line:109] INFO {}
2017-10-28 16:59:09,516 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 16:59:09,516 log.py[line:109] INFO {}
2017-10-28 16:59:09,519 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 16:59:09,519 log.py[line:109] INFO {}
2017-10-28 17:00:23,378 db_operation.py[line:227] INFO division by zero
2017-10-28 17:01:57,092 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:01:57,092 log.py[line:109] INFO {}
2017-10-28 17:01:57,098 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:01:57,099 log.py[line:109] INFO {}
2017-10-28 17:01:57,101 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:01:57,101 log.py[line:109] INFO {}
2017-10-28 17:01:57,105 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:01:57,105 log.py[line:109] INFO {}
2017-10-28 17:01:57,107 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:01:57,107 log.py[line:109] INFO {}
2017-10-28 17:01:57,109 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:01:57,110 log.py[line:109] INFO {}
2017-10-28 17:01:57,113 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:01:57,113 log.py[line:109] INFO {}
2017-10-28 17:01:57,116 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:01:57,116 log.py[line:109] INFO {}
2017-10-28 17:01:57,119 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:01:57,119 log.py[line:109] INFO {}
2017-10-28 17:01:57,122 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:01:57,122 log.py[line:109] INFO {}
2017-10-28 17:01:57,125 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:01:57,125 log.py[line:109] INFO {}
2017-10-28 17:02:22,270 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 17:02:22,272 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 17:02:22,273 log.py[line:109] INFO {'stu_age': 30, 'stu_name': '低调', 'stu_id': 9}
2017-10-28 17:02:22,274 log.py[line:109] INFO ROLLBACK
2017-10-28 17:02:40,083 db_operation.py[line:227] INFO (pymysql.err.IntegrityError) (1062, "Duplicate entry '低调' for key 'stu_name'")
2017-10-28 17:04:35,093 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:04:35,093 log.py[line:109] INFO {}
2017-10-28 17:04:35,108 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:04:35,110 log.py[line:109] INFO {}
2017-10-28 17:04:35,112 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:04:35,112 log.py[line:109] INFO {}
2017-10-28 17:04:35,117 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:04:35,118 log.py[line:109] INFO {}
2017-10-28 17:04:35,123 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:04:35,123 log.py[line:109] INFO {}
2017-10-28 17:04:35,126 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:04:35,126 log.py[line:109] INFO {}
2017-10-28 17:04:35,132 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:04:35,133 log.py[line:109] INFO {}
2017-10-28 17:04:35,136 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:04:35,137 log.py[line:109] INFO {}
2017-10-28 17:04:35,142 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:04:35,143 log.py[line:109] INFO {}
2017-10-28 17:04:35,147 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:04:35,148 log.py[line:109] INFO {}
2017-10-28 17:04:35,152 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:04:35,152 log.py[line:109] INFO {}
2017-10-28 17:04:38,716 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 17:04:38,717 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 17:04:38,717 log.py[line:109] INFO {'stu_id_1': 1}
2017-10-28 17:04:38,719 db_operation.py[line:194] INFO 1
2017-10-28 17:05:27,397 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:05:27,397 log.py[line:109] INFO {}
2017-10-28 17:05:27,404 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:05:27,405 log.py[line:109] INFO {}
2017-10-28 17:05:27,407 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:05:27,408 log.py[line:109] INFO {}
2017-10-28 17:05:27,413 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:05:27,413 log.py[line:109] INFO {}
2017-10-28 17:05:27,416 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:05:27,417 log.py[line:109] INFO {}
2017-10-28 17:05:27,422 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:05:27,423 log.py[line:109] INFO {}
2017-10-28 17:05:27,427 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:05:27,428 log.py[line:109] INFO {}
2017-10-28 17:05:27,431 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:05:27,432 log.py[line:109] INFO {}
2017-10-28 17:05:27,435 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:05:27,436 log.py[line:109] INFO {}
2017-10-28 17:05:27,439 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:05:27,440 log.py[line:109] INFO {}
2017-10-28 17:05:27,444 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:05:27,444 log.py[line:109] INFO {}
2017-10-28 17:05:39,704 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 17:05:39,705 log.py[line:109] INFO DELETE FROM student WHERE student.stu_id = %(stu_id_1)s
2017-10-28 17:05:39,705 log.py[line:109] INFO {'stu_id_1': 1}
2017-10-28 17:05:39,707 log.py[line:109] INFO COMMIT
2017-10-28 17:05:39,708 db_operation.py[line:195] INFO 1
2017-10-28 17:07:24,621 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:07:24,622 log.py[line:109] INFO {}
2017-10-28 17:07:24,627 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:07:24,627 log.py[line:109] INFO {}
2017-10-28 17:07:24,629 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:07:24,630 log.py[line:109] INFO {}
2017-10-28 17:07:24,633 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:07:24,634 log.py[line:109] INFO {}
2017-10-28 17:07:24,636 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:07:24,636 log.py[line:109] INFO {}
2017-10-28 17:07:24,638 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:07:24,639 log.py[line:109] INFO {}
2017-10-28 17:07:24,642 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:07:24,642 log.py[line:109] INFO {}
2017-10-28 17:07:24,645 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:07:24,645 log.py[line:109] INFO {}
2017-10-28 17:07:24,648 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:07:24,648 log.py[line:109] INFO {}
2017-10-28 17:07:24,651 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:07:24,651 log.py[line:109] INFO {}
2017-10-28 17:07:24,654 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:07:24,654 log.py[line:109] INFO {}
2017-10-28 17:08:01,233 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:08:01,234 log.py[line:109] INFO {}
2017-10-28 17:08:01,240 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:08:01,241 log.py[line:109] INFO {}
2017-10-28 17:08:01,244 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:08:01,245 log.py[line:109] INFO {}
2017-10-28 17:08:01,250 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:08:01,251 log.py[line:109] INFO {}
2017-10-28 17:08:01,253 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:08:01,254 log.py[line:109] INFO {}
2017-10-28 17:08:01,256 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:08:01,257 log.py[line:109] INFO {}
2017-10-28 17:08:01,262 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:08:01,262 log.py[line:109] INFO {}
2017-10-28 17:08:01,265 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:08:01,266 log.py[line:109] INFO {}
2017-10-28 17:08:01,270 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:08:01,271 log.py[line:109] INFO {}
2017-10-28 17:08:01,275 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:08:01,275 log.py[line:109] INFO {}
2017-10-28 17:08:01,279 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:08:01,279 log.py[line:109] INFO {}
2017-10-28 17:08:39,296 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:08:39,297 log.py[line:109] INFO {}
2017-10-28 17:08:39,303 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:08:39,303 log.py[line:109] INFO {}
2017-10-28 17:08:39,306 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:08:39,307 log.py[line:109] INFO {}
2017-10-28 17:08:39,312 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:08:39,312 log.py[line:109] INFO {}
2017-10-28 17:08:39,315 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:08:39,315 log.py[line:109] INFO {}
2017-10-28 17:08:39,318 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:08:39,318 log.py[line:109] INFO {}
2017-10-28 17:08:39,323 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:08:39,323 log.py[line:109] INFO {}
2017-10-28 17:08:39,326 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:08:39,327 log.py[line:109] INFO {}
2017-10-28 17:08:39,331 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:08:39,331 log.py[line:109] INFO {}
2017-10-28 17:08:39,335 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:08:39,335 log.py[line:109] INFO {}
2017-10-28 17:08:39,339 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:08:39,340 log.py[line:109] INFO {}
2017-10-28 17:08:42,230 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 17:08:42,232 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 17:08:42,232 log.py[line:109] INFO {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}
2017-10-28 17:08:42,235 log.py[line:109] INFO COMMIT
2017-10-28 17:09:41,191 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:09:41,192 log.py[line:109] INFO {}
2017-10-28 17:09:41,199 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:09:41,199 log.py[line:109] INFO {}
2017-10-28 17:09:41,202 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:09:41,202 log.py[line:109] INFO {}
2017-10-28 17:09:41,206 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:09:41,207 log.py[line:109] INFO {}
2017-10-28 17:09:41,209 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:09:41,210 log.py[line:109] INFO {}
2017-10-28 17:09:41,212 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:09:41,212 log.py[line:109] INFO {}
2017-10-28 17:09:41,216 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:09:41,216 log.py[line:109] INFO {}
2017-10-28 17:09:41,220 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:09:41,220 log.py[line:109] INFO {}
2017-10-28 17:09:41,223 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:09:41,224 log.py[line:109] INFO {}
2017-10-28 17:09:41,227 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:09:41,228 log.py[line:109] INFO {}
2017-10-28 17:09:41,231 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:09:41,231 log.py[line:109] INFO {}
2017-10-28 17:45:28,843 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 17:45:28,844 log.py[line:109] INFO {}
2017-10-28 17:45:28,849 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 17:45:28,849 log.py[line:109] INFO {}
2017-10-28 17:45:28,851 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 17:45:28,852 log.py[line:109] INFO {}
2017-10-28 17:45:28,856 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 17:45:28,857 log.py[line:109] INFO {}
2017-10-28 17:45:28,859 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 17:45:28,860 log.py[line:109] INFO {}
2017-10-28 17:45:28,862 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 17:45:28,863 log.py[line:109] INFO {}
2017-10-28 17:45:28,866 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 17:45:28,867 log.py[line:109] INFO {}
2017-10-28 17:45:28,870 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 17:45:28,871 log.py[line:109] INFO {}
2017-10-28 17:45:28,874 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 17:45:28,874 log.py[line:109] INFO {}
2017-10-28 17:45:28,877 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 17:45:28,878 log.py[line:109] INFO {}
2017-10-28 17:45:28,881 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 17:45:28,881 log.py[line:109] INFO {}
2017-10-28 17:45:37,087 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 17:45:37,089 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 17:45:37,090 log.py[line:109] INFO {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}
2017-10-28 17:45:37,092 log.py[line:109] INFO ROLLBACK
2017-10-28 17:53:46,413 db_operation.py[line:207] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}]
2017-10-28 18:02:10,527 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:02:10,527 log.py[line:109] INFO {}
2017-10-28 18:02:10,533 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:02:10,533 log.py[line:109] INFO {}
2017-10-28 18:02:10,535 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:02:10,536 log.py[line:109] INFO {}
2017-10-28 18:02:10,540 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:02:10,540 log.py[line:109] INFO {}
2017-10-28 18:02:10,543 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:02:10,544 log.py[line:109] INFO {}
2017-10-28 18:02:10,546 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:02:10,547 log.py[line:109] INFO {}
2017-10-28 18:02:10,551 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:02:10,551 log.py[line:109] INFO {}
2017-10-28 18:02:10,555 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:02:10,555 log.py[line:109] INFO {}
2017-10-28 18:02:10,559 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:02:10,559 log.py[line:109] INFO {}
2017-10-28 18:02:10,563 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:02:10,563 log.py[line:109] INFO {}
2017-10-28 18:02:10,567 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:02:10,567 log.py[line:109] INFO {}
2017-10-28 18:02:13,357 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:02:13,359 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:02:13,360 log.py[line:109] INFO {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}
2017-10-28 18:02:13,361 log.py[line:109] INFO ROLLBACK
2017-10-28 18:02:16,233 db_operation.py[line:208] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}]
2017-10-28 18:02:33,509 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:02:33,509 log.py[line:109] INFO {}
2017-10-28 18:02:33,516 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:02:33,517 log.py[line:109] INFO {}
2017-10-28 18:02:33,519 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:02:33,520 log.py[line:109] INFO {}
2017-10-28 18:02:33,525 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:02:33,525 log.py[line:109] INFO {}
2017-10-28 18:02:33,528 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:02:33,529 log.py[line:109] INFO {}
2017-10-28 18:02:33,531 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:02:33,532 log.py[line:109] INFO {}
2017-10-28 18:02:33,536 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:02:33,537 log.py[line:109] INFO {}
2017-10-28 18:02:33,540 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:02:33,540 log.py[line:109] INFO {}
2017-10-28 18:02:33,544 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:02:33,545 log.py[line:109] INFO {}
2017-10-28 18:02:33,548 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:02:33,548 log.py[line:109] INFO {}
2017-10-28 18:02:33,552 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:02:33,552 log.py[line:109] INFO {}
2017-10-28 18:02:36,682 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:02:36,684 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:02:36,685 log.py[line:109] INFO {'stu_name': '你好', 'stu_age': 25, 'stu_id': 1}
2017-10-28 18:02:36,688 log.py[line:109] INFO ROLLBACK
2017-10-28 18:02:41,346 db_operation.py[line:208] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_age': 25, 'stu_id': 1}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_age': 25, 'stu_id': 1}]
2017-10-28 18:03:01,252 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:03:01,252 log.py[line:109] INFO {}
2017-10-28 18:03:01,257 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:03:01,258 log.py[line:109] INFO {}
2017-10-28 18:03:01,260 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:03:01,260 log.py[line:109] INFO {}
2017-10-28 18:03:01,264 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:03:01,264 log.py[line:109] INFO {}
2017-10-28 18:03:01,266 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:03:01,266 log.py[line:109] INFO {}
2017-10-28 18:03:01,268 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:03:01,269 log.py[line:109] INFO {}
2017-10-28 18:03:01,272 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:03:01,272 log.py[line:109] INFO {}
2017-10-28 18:03:01,275 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:03:01,275 log.py[line:109] INFO {}
2017-10-28 18:03:01,278 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:03:01,278 log.py[line:109] INFO {}
2017-10-28 18:03:01,281 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:03:01,281 log.py[line:109] INFO {}
2017-10-28 18:03:01,284 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:03:01,284 log.py[line:109] INFO {}
2017-10-28 18:03:02,006 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:03:02,009 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:03:02,009 log.py[line:109] INFO {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}
2017-10-28 18:03:02,010 log.py[line:109] INFO ROLLBACK
2017-10-28 18:03:02,012 db_operation.py[line:208] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_id': 1, 'stu_name': '你好'}]
2017-10-28 18:03:29,205 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:03:29,205 log.py[line:109] INFO {}
2017-10-28 18:03:29,210 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:03:29,211 log.py[line:109] INFO {}
2017-10-28 18:03:29,213 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:03:29,213 log.py[line:109] INFO {}
2017-10-28 18:03:29,217 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:03:29,217 log.py[line:109] INFO {}
2017-10-28 18:03:29,219 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:03:29,219 log.py[line:109] INFO {}
2017-10-28 18:03:29,221 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:03:29,222 log.py[line:109] INFO {}
2017-10-28 18:03:29,225 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:03:29,225 log.py[line:109] INFO {}
2017-10-28 18:03:29,228 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:03:29,228 log.py[line:109] INFO {}
2017-10-28 18:03:29,231 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:03:29,231 log.py[line:109] INFO {}
2017-10-28 18:03:29,234 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:03:29,235 log.py[line:109] INFO {}
2017-10-28 18:03:29,237 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:03:29,238 log.py[line:109] INFO {}
2017-10-28 18:03:33,857 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:03:33,860 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:03:33,860 log.py[line:109] INFO {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}
2017-10-28 18:03:33,862 log.py[line:109] INFO ROLLBACK
2017-10-28 18:11:30,832 db_operation.py[line:208] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 1}]
2017-10-28 18:11:34,591 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:11:34,592 log.py[line:109] INFO {}
2017-10-28 18:11:34,599 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:11:34,600 log.py[line:109] INFO {}
2017-10-28 18:11:34,602 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:11:34,602 log.py[line:109] INFO {}
2017-10-28 18:11:34,606 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:11:34,607 log.py[line:109] INFO {}
2017-10-28 18:11:34,609 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:11:34,609 log.py[line:109] INFO {}
2017-10-28 18:11:34,611 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:11:34,612 log.py[line:109] INFO {}
2017-10-28 18:11:34,616 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:11:34,616 log.py[line:109] INFO {}
2017-10-28 18:11:34,619 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:11:34,620 log.py[line:109] INFO {}
2017-10-28 18:11:34,622 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:11:34,622 log.py[line:109] INFO {}
2017-10-28 18:11:34,625 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:11:34,626 log.py[line:109] INFO {}
2017-10-28 18:11:34,628 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:11:34,629 log.py[line:109] INFO {}
2017-10-28 18:11:39,126 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:11:39,129 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:11:39,129 log.py[line:109] INFO {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}
2017-10-28 18:11:39,131 log.py[line:109] INFO ROLLBACK
2017-10-28 18:11:49,260 db_operation.py[line:208] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 204, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
2017-10-28 18:12:18,173 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:12:18,175 log.py[line:109] INFO {}
2017-10-28 18:12:18,184 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:12:18,184 log.py[line:109] INFO {}
2017-10-28 18:12:18,190 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:12:18,190 log.py[line:109] INFO {}
2017-10-28 18:12:18,195 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:12:18,196 log.py[line:109] INFO {}
2017-10-28 18:12:18,200 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:12:18,201 log.py[line:109] INFO {}
2017-10-28 18:12:18,205 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:12:18,206 log.py[line:109] INFO {}
2017-10-28 18:12:18,210 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:12:18,210 log.py[line:109] INFO {}
2017-10-28 18:12:18,215 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:12:18,216 log.py[line:109] INFO {}
2017-10-28 18:12:18,221 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:12:18,222 log.py[line:109] INFO {}
2017-10-28 18:12:18,225 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:12:18,226 log.py[line:109] INFO {}
2017-10-28 18:12:18,231 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:12:18,231 log.py[line:109] INFO {}
2017-10-28 18:12:20,358 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:12:20,361 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:12:20,361 log.py[line:109] INFO {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}
2017-10-28 18:12:20,362 log.py[line:109] INFO ROLLBACK
2017-10-28 18:18:34,900 db_operation.py[line:209] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 205, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}]
2017-10-28 18:18:38,734 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:18:38,735 log.py[line:109] INFO {}
2017-10-28 18:18:38,741 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:18:38,741 log.py[line:109] INFO {}
2017-10-28 18:18:38,743 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:18:38,744 log.py[line:109] INFO {}
2017-10-28 18:18:38,749 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:18:38,750 log.py[line:109] INFO {}
2017-10-28 18:18:38,752 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:18:38,753 log.py[line:109] INFO {}
2017-10-28 18:18:38,755 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:18:38,756 log.py[line:109] INFO {}
2017-10-28 18:18:38,760 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:18:38,760 log.py[line:109] INFO {}
2017-10-28 18:18:38,764 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:18:38,764 log.py[line:109] INFO {}
2017-10-28 18:18:38,767 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:18:38,768 log.py[line:109] INFO {}
2017-10-28 18:18:38,772 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:18:38,773 log.py[line:109] INFO {}
2017-10-28 18:18:38,776 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:18:38,777 log.py[line:109] INFO {}
2017-10-28 18:18:40,148 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:18:40,151 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:18:40,151 log.py[line:109] INFO {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}
2017-10-28 18:18:40,153 log.py[line:109] INFO ROLLBACK
2017-10-28 18:18:41,789 db_operation.py[line:209] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 205, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
2017-10-28 18:18:53,773 db_operation.py[line:240] INFO (1062, "Duplicate entry '1' for key 'PRIMARY'")
2017-10-28 18:19:10,628 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:19:10,629 log.py[line:109] INFO {}
2017-10-28 18:19:10,635 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:19:10,636 log.py[line:109] INFO {}
2017-10-28 18:19:10,638 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:19:10,638 log.py[line:109] INFO {}
2017-10-28 18:19:10,642 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:19:10,642 log.py[line:109] INFO {}
2017-10-28 18:19:10,645 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:19:10,645 log.py[line:109] INFO {}
2017-10-28 18:19:10,648 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:19:10,649 log.py[line:109] INFO {}
2017-10-28 18:19:10,652 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:19:10,653 log.py[line:109] INFO {}
2017-10-28 18:19:10,656 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:19:10,657 log.py[line:109] INFO {}
2017-10-28 18:19:10,660 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:19:10,661 log.py[line:109] INFO {}
2017-10-28 18:19:10,664 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:19:10,665 log.py[line:109] INFO {}
2017-10-28 18:19:10,668 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:19:10,669 log.py[line:109] INFO {}
2017-10-28 18:19:13,688 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:19:13,692 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:19:13,692 log.py[line:109] INFO {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}
2017-10-28 18:19:13,694 log.py[line:109] INFO ROLLBACK
2017-10-28 18:19:14,361 db_operation.py[line:209] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 205, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_name': '你好', 'stu_id': 1, 'stu_age': 25}]
2017-10-28 18:19:54,070 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:19:54,071 log.py[line:109] INFO {}
2017-10-28 18:19:54,077 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:19:54,078 log.py[line:109] INFO {}
2017-10-28 18:19:54,080 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:19:54,081 log.py[line:109] INFO {}
2017-10-28 18:19:54,086 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:19:54,086 log.py[line:109] INFO {}
2017-10-28 18:19:54,089 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:19:54,089 log.py[line:109] INFO {}
2017-10-28 18:19:54,092 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:19:54,093 log.py[line:109] INFO {}
2017-10-28 18:19:54,097 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:19:54,097 log.py[line:109] INFO {}
2017-10-28 18:19:54,101 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:19:54,102 log.py[line:109] INFO {}
2017-10-28 18:19:54,105 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:19:54,106 log.py[line:109] INFO {}
2017-10-28 18:19:54,110 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:19:54,111 log.py[line:109] INFO {}
2017-10-28 18:19:54,114 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:19:54,114 log.py[line:109] INFO {}
2017-10-28 18:19:55,892 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:19:55,895 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:19:55,895 log.py[line:109] INFO {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}
2017-10-28 18:19:55,897 log.py[line:109] INFO ROLLBACK
2017-10-28 18:19:56,856 db_operation.py[line:209] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 205, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_name': '你好', 'stu_age': 25}]
2017-10-28 18:19:59,383 db_operation.py[line:240] INFO 1062
2017-10-28 18:27:02,551 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-28 18:27:02,551 log.py[line:109] INFO {}
2017-10-28 18:27:02,556 log.py[line:109] INFO SELECT DATABASE()
2017-10-28 18:27:02,557 log.py[line:109] INFO {}
2017-10-28 18:27:02,559 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-28 18:27:02,559 log.py[line:109] INFO {}
2017-10-28 18:27:02,563 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-28 18:27:02,563 log.py[line:109] INFO {}
2017-10-28 18:27:02,565 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-28 18:27:02,565 log.py[line:109] INFO {}
2017-10-28 18:27:02,567 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-28 18:27:02,568 log.py[line:109] INFO {}
2017-10-28 18:27:02,571 log.py[line:109] INFO DESCRIBE `vip`
2017-10-28 18:27:02,572 log.py[line:109] INFO {}
2017-10-28 18:27:02,575 log.py[line:109] INFO DESCRIBE `cus`
2017-10-28 18:27:02,575 log.py[line:109] INFO {}
2017-10-28 18:27:02,578 log.py[line:109] INFO DESCRIBE `grade`
2017-10-28 18:27:02,578 log.py[line:109] INFO {}
2017-10-28 18:27:02,581 log.py[line:109] INFO DESCRIBE `student`
2017-10-28 18:27:02,581 log.py[line:109] INFO {}
2017-10-28 18:27:02,585 log.py[line:109] INFO DESCRIBE `course`
2017-10-28 18:27:02,585 log.py[line:109] INFO {}
2017-10-28 18:27:05,723 log.py[line:109] INFO BEGIN (implicit)
2017-10-28 18:27:05,726 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-10-28 18:27:05,726 log.py[line:109] INFO {'stu_id': 1, 'stu_age': 25, 'stu_name': '你好'}
2017-10-28 18:27:05,728 log.py[line:109] INFO ROLLBACK
2017-10-28 18:27:08,438 db_operation.py[line:209] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_age': 25, 'stu_name': '你好'}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '1' for key 'PRIMARY'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 205, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '1' for key 'PRIMARY'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_id': 1, 'stu_age': 25, 'stu_name': '你好'}]
2017-10-28 20:00:25,233 db_operation.py[line:226] ERROR [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 224, in <module>
    #testParameter(**setting)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 192, in testDel
    def testDel():
BrokenPipeError: [Errno 32] Broken pipe
2017-10-31 11:40:23,656 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-31 11:40:23,696 log.py[line:109] INFO {}
2017-10-31 11:40:23,699 log.py[line:109] INFO SELECT DATABASE()
2017-10-31 11:40:23,699 log.py[line:109] INFO {}
2017-10-31 11:40:23,700 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-31 11:40:23,700 log.py[line:109] INFO {}
2017-10-31 11:40:23,701 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-31 11:40:23,702 log.py[line:109] INFO {}
2017-10-31 11:40:23,702 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-31 11:40:23,702 log.py[line:109] INFO {}
2017-10-31 11:40:23,703 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-31 11:40:23,703 log.py[line:109] INFO {}
2017-10-31 11:40:23,705 log.py[line:109] INFO DESCRIBE `vip`
2017-10-31 11:40:23,705 log.py[line:109] INFO {}
2017-10-31 11:40:23,722 log.py[line:109] INFO DESCRIBE `cus`
2017-10-31 11:40:23,722 log.py[line:109] INFO {}
2017-10-31 11:40:23,723 log.py[line:109] INFO DESCRIBE `course`
2017-10-31 11:40:23,724 log.py[line:109] INFO {}
2017-10-31 11:40:23,725 log.py[line:109] INFO DESCRIBE `student`
2017-10-31 11:40:23,725 log.py[line:109] INFO {}
2017-10-31 11:40:23,727 log.py[line:109] INFO DESCRIBE `grade`
2017-10-31 11:40:23,727 log.py[line:109] INFO {}
2017-10-31 11:40:23,893 log.py[line:109] INFO BEGIN (implicit)
2017-10-31 11:40:23,894 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s) AS anon_1
2017-10-31 11:40:23,894 log.py[line:109] INFO {'username_1': ''}
2017-10-31 11:40:23,896 log.py[line:109] INFO ROLLBACK
2017-10-31 11:41:29,303 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-10-31 11:41:29,323 log.py[line:109] INFO {}
2017-10-31 11:41:29,328 log.py[line:109] INFO SELECT DATABASE()
2017-10-31 11:41:29,328 log.py[line:109] INFO {}
2017-10-31 11:41:29,331 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-10-31 11:41:29,331 log.py[line:109] INFO {}
2017-10-31 11:41:29,335 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-10-31 11:41:29,335 log.py[line:109] INFO {}
2017-10-31 11:41:29,337 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-10-31 11:41:29,337 log.py[line:109] INFO {}
2017-10-31 11:41:29,339 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-10-31 11:41:29,339 log.py[line:109] INFO {}
2017-10-31 11:41:29,343 log.py[line:109] INFO DESCRIBE `vip`
2017-10-31 11:41:29,343 log.py[line:109] INFO {}
2017-10-31 11:41:29,346 log.py[line:109] INFO DESCRIBE `student`
2017-10-31 11:41:29,346 log.py[line:109] INFO {}
2017-10-31 11:41:29,349 log.py[line:109] INFO DESCRIBE `cus`
2017-10-31 11:41:29,350 log.py[line:109] INFO {}
2017-10-31 11:41:29,352 log.py[line:109] INFO DESCRIBE `course`
2017-10-31 11:41:29,353 log.py[line:109] INFO {}
2017-10-31 11:41:29,355 log.py[line:109] INFO DESCRIBE `grade`
2017-10-31 11:41:29,356 log.py[line:109] INFO {}
2017-10-31 11:41:33,675 log.py[line:109] INFO BEGIN (implicit)
2017-10-31 11:41:33,677 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT vip.id AS vip_id, vip.username AS vip_username, vip.password AS vip_password, vip.hobby AS vip_hobby 
FROM vip 
WHERE vip.username = %(username_1)s) AS anon_1
2017-10-31 11:41:33,677 log.py[line:109] INFO {'username_1': ''}
2017-10-31 11:41:37,318 log.py[line:109] INFO ROLLBACK
2017-11-03 17:16:02,509 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-03 17:16:02,548 log.py[line:109] INFO {}
2017-11-03 17:16:02,553 log.py[line:109] INFO SELECT DATABASE()
2017-11-03 17:16:02,553 log.py[line:109] INFO {}
2017-11-03 17:16:02,554 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-03 17:16:02,554 log.py[line:109] INFO {}
2017-11-03 17:16:02,556 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:02,557 log.py[line:109] INFO {}
2017-11-03 17:16:02,558 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:02,558 log.py[line:109] INFO {}
2017-11-03 17:16:02,559 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-03 17:16:02,559 log.py[line:109] INFO {}
2017-11-03 17:16:02,561 log.py[line:109] INFO DESCRIBE `student`
2017-11-03 17:16:02,561 log.py[line:109] INFO {}
2017-11-03 17:16:02,570 log.py[line:109] INFO DESCRIBE `course`
2017-11-03 17:16:02,570 log.py[line:109] INFO {}
2017-11-03 17:16:02,572 log.py[line:109] INFO DESCRIBE `vip`
2017-11-03 17:16:02,572 log.py[line:109] INFO {}
2017-11-03 17:16:02,574 log.py[line:109] INFO DESCRIBE `cus`
2017-11-03 17:16:02,574 log.py[line:109] INFO {}
2017-11-03 17:16:02,576 log.py[line:109] INFO DESCRIBE `grade`
2017-11-03 17:16:02,576 log.py[line:109] INFO {}
2017-11-03 17:16:14,653 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-03 17:16:14,653 log.py[line:109] INFO {}
2017-11-03 17:16:14,656 log.py[line:109] INFO SELECT DATABASE()
2017-11-03 17:16:14,657 log.py[line:109] INFO {}
2017-11-03 17:16:14,658 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-03 17:16:14,658 log.py[line:109] INFO {}
2017-11-03 17:16:14,660 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:14,660 log.py[line:109] INFO {}
2017-11-03 17:16:14,661 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:14,661 log.py[line:109] INFO {}
2017-11-03 17:16:14,662 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-03 17:16:14,663 log.py[line:109] INFO {}
2017-11-03 17:16:14,664 log.py[line:109] INFO DESCRIBE `student`
2017-11-03 17:16:14,664 log.py[line:109] INFO {}
2017-11-03 17:16:14,665 log.py[line:109] INFO DESCRIBE `cus`
2017-11-03 17:16:14,666 log.py[line:109] INFO {}
2017-11-03 17:16:14,667 log.py[line:109] INFO DESCRIBE `course`
2017-11-03 17:16:14,667 log.py[line:109] INFO {}
2017-11-03 17:16:14,668 log.py[line:109] INFO DESCRIBE `vip`
2017-11-03 17:16:14,668 log.py[line:109] INFO {}
2017-11-03 17:16:14,669 log.py[line:109] INFO DESCRIBE `grade`
2017-11-03 17:16:14,670 log.py[line:109] INFO {}
2017-11-03 17:16:27,234 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-03 17:16:27,234 log.py[line:109] INFO {}
2017-11-03 17:16:27,236 log.py[line:109] INFO SELECT DATABASE()
2017-11-03 17:16:27,236 log.py[line:109] INFO {}
2017-11-03 17:16:27,237 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-03 17:16:27,237 log.py[line:109] INFO {}
2017-11-03 17:16:27,238 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:27,239 log.py[line:109] INFO {}
2017-11-03 17:16:27,239 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:27,239 log.py[line:109] INFO {}
2017-11-03 17:16:27,240 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-03 17:16:27,240 log.py[line:109] INFO {}
2017-11-03 17:16:27,241 log.py[line:109] INFO DESCRIBE `vip`
2017-11-03 17:16:27,242 log.py[line:109] INFO {}
2017-11-03 17:16:27,243 log.py[line:109] INFO DESCRIBE `cus`
2017-11-03 17:16:27,243 log.py[line:109] INFO {}
2017-11-03 17:16:27,244 log.py[line:109] INFO DESCRIBE `student`
2017-11-03 17:16:27,244 log.py[line:109] INFO {}
2017-11-03 17:16:27,245 log.py[line:109] INFO DESCRIBE `course`
2017-11-03 17:16:27,245 log.py[line:109] INFO {}
2017-11-03 17:16:27,246 log.py[line:109] INFO DESCRIBE `grade`
2017-11-03 17:16:27,247 log.py[line:109] INFO {}
2017-11-03 17:16:27,256 log.py[line:109] INFO BEGIN (implicit)
2017-11-03 17:16:27,257 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)) AS anon_1
2017-11-03 17:16:27,257 log.py[line:109] INFO {'stu_id_3': 5, 'stu_id_2': 3, 'stu_id_1': 1}
2017-11-03 17:16:51,400 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-03 17:16:51,400 log.py[line:109] INFO {}
2017-11-03 17:16:51,403 log.py[line:109] INFO SELECT DATABASE()
2017-11-03 17:16:51,404 log.py[line:109] INFO {}
2017-11-03 17:16:51,404 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-03 17:16:51,405 log.py[line:109] INFO {}
2017-11-03 17:16:51,406 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:51,407 log.py[line:109] INFO {}
2017-11-03 17:16:51,407 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-03 17:16:51,407 log.py[line:109] INFO {}
2017-11-03 17:16:51,408 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-03 17:16:51,408 log.py[line:109] INFO {}
2017-11-03 17:16:51,410 log.py[line:109] INFO DESCRIBE `cus`
2017-11-03 17:16:51,410 log.py[line:109] INFO {}
2017-11-03 17:16:51,411 log.py[line:109] INFO DESCRIBE `student`
2017-11-03 17:16:51,411 log.py[line:109] INFO {}
2017-11-03 17:16:51,412 log.py[line:109] INFO DESCRIBE `grade`
2017-11-03 17:16:51,412 log.py[line:109] INFO {}
2017-11-03 17:16:51,414 log.py[line:109] INFO DESCRIBE `course`
2017-11-03 17:16:51,414 log.py[line:109] INFO {}
2017-11-03 17:16:51,415 log.py[line:109] INFO DESCRIBE `vip`
2017-11-03 17:16:51,415 log.py[line:109] INFO {}
2017-11-03 17:16:51,425 log.py[line:109] INFO BEGIN (implicit)
2017-11-03 17:16:51,425 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)) AS anon_1
2017-11-03 17:16:51,425 log.py[line:109] INFO {'stu_id_2': 3, 'stu_id_3': 5, 'stu_id_1': 1}
2017-11-04 18:34:22,941 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:34:22,941 log.py[line:109] INFO {}
2017-11-04 18:34:22,948 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:34:22,948 log.py[line:109] INFO {}
2017-11-04 18:34:22,955 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:34:22,956 log.py[line:109] INFO {}
2017-11-04 18:34:22,960 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:34:22,960 log.py[line:109] INFO {}
2017-11-04 18:34:22,961 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:34:22,962 log.py[line:109] INFO {}
2017-11-04 18:34:22,963 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:34:22,963 log.py[line:109] INFO {}
2017-11-04 18:34:22,965 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:34:22,965 log.py[line:109] INFO {}
2017-11-04 18:34:22,967 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:34:22,967 log.py[line:109] INFO {}
2017-11-04 18:34:22,969 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:34:22,969 log.py[line:109] INFO {}
2017-11-04 18:34:22,971 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:34:22,971 log.py[line:109] INFO {}
2017-11-04 18:34:22,973 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:34:22,973 log.py[line:109] INFO {}
2017-11-04 18:34:23,063 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:34:23,064 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:34:23,064 log.py[line:109] INFO {'stu_id_3': 5, 'stu_id_1': 1, 'stu_id_2': 3}
2017-11-04 18:35:43,639 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:35:43,650 log.py[line:109] INFO {}
2017-11-04 18:35:43,652 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:35:43,653 log.py[line:109] INFO {}
2017-11-04 18:35:43,654 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:35:43,654 log.py[line:109] INFO {}
2017-11-04 18:35:43,656 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:35:43,656 log.py[line:109] INFO {}
2017-11-04 18:35:43,657 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:35:43,657 log.py[line:109] INFO {}
2017-11-04 18:35:43,658 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:35:43,658 log.py[line:109] INFO {}
2017-11-04 18:35:43,659 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:35:43,660 log.py[line:109] INFO {}
2017-11-04 18:35:43,661 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:35:43,662 log.py[line:109] INFO {}
2017-11-04 18:35:43,663 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:35:43,663 log.py[line:109] INFO {}
2017-11-04 18:35:43,664 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:35:43,665 log.py[line:109] INFO {}
2017-11-04 18:35:43,666 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:35:43,666 log.py[line:109] INFO {}
2017-11-04 18:35:43,736 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:35:43,737 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s) GROUP BY student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s)) AS anon_1
2017-11-04 18:35:43,737 log.py[line:109] INFO {'stu_id_3': 5, 'stu_id_1': 1, 'stu_id_2': 3}
2017-11-04 18:37:17,750 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:37:17,751 log.py[line:109] INFO {}
2017-11-04 18:37:17,753 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:37:17,753 log.py[line:109] INFO {}
2017-11-04 18:37:17,754 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:37:17,754 log.py[line:109] INFO {}
2017-11-04 18:37:17,756 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:37:17,756 log.py[line:109] INFO {}
2017-11-04 18:37:17,757 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:37:17,757 log.py[line:109] INFO {}
2017-11-04 18:37:17,758 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:37:17,758 log.py[line:109] INFO {}
2017-11-04 18:37:17,760 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:37:17,760 log.py[line:109] INFO {}
2017-11-04 18:37:17,770 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:37:17,770 log.py[line:109] INFO {}
2017-11-04 18:37:17,771 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:37:17,772 log.py[line:109] INFO {}
2017-11-04 18:37:17,773 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:37:17,773 log.py[line:109] INFO {}
2017-11-04 18:37:17,774 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:37:17,774 log.py[line:109] INFO {}
2017-11-04 18:37:46,499 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:37:46,499 log.py[line:109] INFO {}
2017-11-04 18:37:46,504 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:37:46,505 log.py[line:109] INFO {}
2017-11-04 18:37:46,507 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:37:46,507 log.py[line:109] INFO {}
2017-11-04 18:37:46,510 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:37:46,511 log.py[line:109] INFO {}
2017-11-04 18:37:46,512 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:37:46,515 log.py[line:109] INFO {}
2017-11-04 18:37:46,517 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:37:46,517 log.py[line:109] INFO {}
2017-11-04 18:37:46,519 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:37:46,519 log.py[line:109] INFO {}
2017-11-04 18:37:46,522 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:37:46,522 log.py[line:109] INFO {}
2017-11-04 18:37:46,524 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:37:46,525 log.py[line:109] INFO {}
2017-11-04 18:37:46,526 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:37:46,527 log.py[line:109] INFO {}
2017-11-04 18:37:46,529 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:37:46,529 log.py[line:109] INFO {}
2017-11-04 18:37:46,586 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:37:46,588 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:37:46,588 log.py[line:109] INFO {'stu_id_2': 3, 'stu_id_1': 1, 'stu_id_3': 5}
2017-11-04 18:39:41,511 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:39:41,521 log.py[line:109] INFO {}
2017-11-04 18:39:41,525 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:39:41,525 log.py[line:109] INFO {}
2017-11-04 18:39:41,526 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:39:41,526 log.py[line:109] INFO {}
2017-11-04 18:39:41,528 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:39:41,528 log.py[line:109] INFO {}
2017-11-04 18:39:41,529 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:39:41,529 log.py[line:109] INFO {}
2017-11-04 18:39:41,530 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:39:41,531 log.py[line:109] INFO {}
2017-11-04 18:39:41,532 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:39:41,533 log.py[line:109] INFO {}
2017-11-04 18:39:41,534 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:39:41,534 log.py[line:109] INFO {}
2017-11-04 18:39:41,535 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:39:41,535 log.py[line:109] INFO {}
2017-11-04 18:39:41,537 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:39:41,537 log.py[line:109] INFO {}
2017-11-04 18:39:41,538 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:39:41,539 log.py[line:109] INFO {}
2017-11-04 18:39:41,601 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:39:41,602 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s) GROUP BY student.stu_id
2017-11-04 18:39:41,602 log.py[line:109] INFO {'stu_id_1': 1, 'stu_id_2': 3, 'stu_id_3': 5}
2017-11-04 18:41:53,470 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:41:53,471 log.py[line:109] INFO {}
2017-11-04 18:41:53,473 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:41:53,473 log.py[line:109] INFO {}
2017-11-04 18:41:53,475 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:41:53,475 log.py[line:109] INFO {}
2017-11-04 18:41:53,479 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:41:53,479 log.py[line:109] INFO {}
2017-11-04 18:41:53,480 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:41:53,481 log.py[line:109] INFO {}
2017-11-04 18:41:53,481 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:41:53,482 log.py[line:109] INFO {}
2017-11-04 18:41:53,483 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:41:53,483 log.py[line:109] INFO {}
2017-11-04 18:41:53,485 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:41:53,486 log.py[line:109] INFO {}
2017-11-04 18:41:53,488 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:41:53,488 log.py[line:109] INFO {}
2017-11-04 18:41:53,489 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:41:53,489 log.py[line:109] INFO {}
2017-11-04 18:41:53,490 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:41:53,491 log.py[line:109] INFO {}
2017-11-04 18:41:53,513 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:41:53,514 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id
2017-11-04 18:41:53,514 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 18:42:20,236 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:42:20,237 log.py[line:109] INFO {}
2017-11-04 18:42:20,240 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:42:20,240 log.py[line:109] INFO {}
2017-11-04 18:42:20,241 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:42:20,241 log.py[line:109] INFO {}
2017-11-04 18:42:20,243 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:42:20,243 log.py[line:109] INFO {}
2017-11-04 18:42:20,243 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:42:20,244 log.py[line:109] INFO {}
2017-11-04 18:42:20,244 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:42:20,245 log.py[line:109] INFO {}
2017-11-04 18:42:20,246 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:42:20,246 log.py[line:109] INFO {}
2017-11-04 18:42:20,247 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:42:20,247 log.py[line:109] INFO {}
2017-11-04 18:42:20,248 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:42:20,248 log.py[line:109] INFO {}
2017-11-04 18:42:20,249 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:42:20,249 log.py[line:109] INFO {}
2017-11-04 18:42:20,250 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:42:20,250 log.py[line:109] INFO {}
2017-11-04 18:42:20,265 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:42:20,266 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:42:20,266 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19}
2017-11-04 18:43:06,784 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:43:06,785 log.py[line:109] INFO {}
2017-11-04 18:43:06,787 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:43:06,788 log.py[line:109] INFO {}
2017-11-04 18:43:06,790 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:43:06,791 log.py[line:109] INFO {}
2017-11-04 18:43:06,793 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:43:06,793 log.py[line:109] INFO {}
2017-11-04 18:43:06,794 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:43:06,794 log.py[line:109] INFO {}
2017-11-04 18:43:06,795 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:43:06,795 log.py[line:109] INFO {}
2017-11-04 18:43:06,797 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:43:06,797 log.py[line:109] INFO {}
2017-11-04 18:43:06,799 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:43:06,800 log.py[line:109] INFO {}
2017-11-04 18:43:06,800 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:43:06,801 log.py[line:109] INFO {}
2017-11-04 18:43:06,801 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:43:06,802 log.py[line:109] INFO {}
2017-11-04 18:43:06,802 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:43:06,803 log.py[line:109] INFO {}
2017-11-04 18:43:06,817 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:43:06,817 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:43:06,818 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 18:44:59,572 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:44:59,572 log.py[line:109] INFO {}
2017-11-04 18:44:59,574 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:44:59,574 log.py[line:109] INFO {}
2017-11-04 18:44:59,575 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:44:59,575 log.py[line:109] INFO {}
2017-11-04 18:44:59,578 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:44:59,578 log.py[line:109] INFO {}
2017-11-04 18:44:59,579 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:44:59,579 log.py[line:109] INFO {}
2017-11-04 18:44:59,580 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:44:59,580 log.py[line:109] INFO {}
2017-11-04 18:44:59,581 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:44:59,581 log.py[line:109] INFO {}
2017-11-04 18:44:59,582 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:44:59,582 log.py[line:109] INFO {}
2017-11-04 18:44:59,584 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:44:59,584 log.py[line:109] INFO {}
2017-11-04 18:44:59,585 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:44:59,585 log.py[line:109] INFO {}
2017-11-04 18:44:59,586 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:44:59,587 log.py[line:109] INFO {}
2017-11-04 18:44:59,596 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:44:59,597 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id
2017-11-04 18:44:59,597 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 18:45:46,230 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:45:46,231 log.py[line:109] INFO {}
2017-11-04 18:45:46,236 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:45:46,237 log.py[line:109] INFO {}
2017-11-04 18:45:46,240 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:45:46,241 log.py[line:109] INFO {}
2017-11-04 18:45:46,245 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:45:46,246 log.py[line:109] INFO {}
2017-11-04 18:45:46,248 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:45:46,248 log.py[line:109] INFO {}
2017-11-04 18:45:46,250 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:45:46,250 log.py[line:109] INFO {}
2017-11-04 18:45:46,254 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:45:46,254 log.py[line:109] INFO {}
2017-11-04 18:45:46,258 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:45:46,258 log.py[line:109] INFO {}
2017-11-04 18:45:46,261 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:45:46,261 log.py[line:109] INFO {}
2017-11-04 18:45:46,264 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:45:46,264 log.py[line:109] INFO {}
2017-11-04 18:45:46,267 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:45:46,268 log.py[line:109] INFO {}
2017-11-04 18:45:52,271 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:45:52,275 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id
2017-11-04 18:45:52,276 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19}
2017-11-04 18:45:55,102 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-04 18:45:55,102 log.py[line:109] INFO {'param_1': 3}
2017-11-04 18:46:05,926 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-04 18:46:05,926 log.py[line:109] INFO {'param_1': 4}
2017-11-04 18:46:08,480 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-04 18:46:08,480 log.py[line:109] INFO {'param_1': 5}
2017-11-04 18:46:10,413 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-04 18:46:10,413 log.py[line:109] INFO {'param_1': 8}
2017-11-04 18:46:12,572 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-04 18:46:12,572 log.py[line:109] INFO {'param_1': 9}
2017-11-04 18:46:44,788 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:46:44,788 log.py[line:109] INFO {}
2017-11-04 18:46:44,798 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:46:44,800 log.py[line:109] INFO {}
2017-11-04 18:46:44,802 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:46:44,802 log.py[line:109] INFO {}
2017-11-04 18:46:44,809 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:46:44,810 log.py[line:109] INFO {}
2017-11-04 18:46:44,814 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:46:44,815 log.py[line:109] INFO {}
2017-11-04 18:46:44,818 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:46:44,819 log.py[line:109] INFO {}
2017-11-04 18:46:44,822 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:46:44,822 log.py[line:109] INFO {}
2017-11-04 18:46:44,826 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:46:44,827 log.py[line:109] INFO {}
2017-11-04 18:46:44,831 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:46:44,831 log.py[line:109] INFO {}
2017-11-04 18:46:44,834 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:46:44,835 log.py[line:109] INFO {}
2017-11-04 18:46:44,837 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:46:44,838 log.py[line:109] INFO {}
2017-11-04 18:46:47,102 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:46:47,104 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:46:47,105 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 18:47:03,187 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:47:03,188 log.py[line:109] INFO {}
2017-11-04 18:47:03,194 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:47:03,194 log.py[line:109] INFO {}
2017-11-04 18:47:03,197 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:47:03,197 log.py[line:109] INFO {}
2017-11-04 18:47:03,201 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:47:03,202 log.py[line:109] INFO {}
2017-11-04 18:47:03,204 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:47:03,204 log.py[line:109] INFO {}
2017-11-04 18:47:03,206 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:47:03,207 log.py[line:109] INFO {}
2017-11-04 18:47:03,211 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:47:03,211 log.py[line:109] INFO {}
2017-11-04 18:47:03,214 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:47:03,215 log.py[line:109] INFO {}
2017-11-04 18:47:03,218 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:47:03,219 log.py[line:109] INFO {}
2017-11-04 18:47:03,221 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:47:03,222 log.py[line:109] INFO {}
2017-11-04 18:47:03,225 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:47:03,226 log.py[line:109] INFO {}
2017-11-04 18:47:05,608 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:47:05,610 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_id) AS anon_1
2017-11-04 18:47:05,610 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_1': 19, 'stu_age_3': 21}
2017-11-04 18:49:20,396 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:49:20,397 log.py[line:109] INFO {}
2017-11-04 18:49:20,403 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:49:20,403 log.py[line:109] INFO {}
2017-11-04 18:49:20,406 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:49:20,406 log.py[line:109] INFO {}
2017-11-04 18:49:20,410 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:49:20,411 log.py[line:109] INFO {}
2017-11-04 18:49:20,413 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:49:20,413 log.py[line:109] INFO {}
2017-11-04 18:49:20,415 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:49:20,416 log.py[line:109] INFO {}
2017-11-04 18:49:20,419 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:49:20,419 log.py[line:109] INFO {}
2017-11-04 18:49:20,422 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:49:20,423 log.py[line:109] INFO {}
2017-11-04 18:49:20,425 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:49:20,426 log.py[line:109] INFO {}
2017-11-04 18:49:20,429 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:49:20,429 log.py[line:109] INFO {}
2017-11-04 18:49:20,432 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:49:20,433 log.py[line:109] INFO {}
2017-11-04 18:49:26,545 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:49:26,547 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT count(student.stu_id) AS count_2 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)) AS anon_1
2017-11-04 18:49:26,547 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_2': 30}
2017-11-04 18:49:41,599 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:49:41,599 log.py[line:109] INFO {}
2017-11-04 18:49:41,604 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:49:41,605 log.py[line:109] INFO {}
2017-11-04 18:49:41,607 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:49:41,607 log.py[line:109] INFO {}
2017-11-04 18:49:41,611 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:49:41,612 log.py[line:109] INFO {}
2017-11-04 18:49:41,614 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:49:41,614 log.py[line:109] INFO {}
2017-11-04 18:49:41,618 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:49:41,618 log.py[line:109] INFO {}
2017-11-04 18:49:41,622 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:49:41,622 log.py[line:109] INFO {}
2017-11-04 18:49:41,625 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:49:41,625 log.py[line:109] INFO {}
2017-11-04 18:49:41,628 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:49:41,629 log.py[line:109] INFO {}
2017-11-04 18:49:41,631 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:49:41,632 log.py[line:109] INFO {}
2017-11-04 18:49:41,634 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:49:41,635 log.py[line:109] INFO {}
2017-11-04 18:49:45,299 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:49:45,301 log.py[line:109] INFO SELECT count(*) AS count_1 
FROM (SELECT count(student.stu_id) AS count_2 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)) AS anon_1
2017-11-04 18:49:45,302 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19}
2017-11-04 18:50:42,093 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:50:42,094 log.py[line:109] INFO {}
2017-11-04 18:50:42,104 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:50:42,105 log.py[line:109] INFO {}
2017-11-04 18:50:42,111 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:50:42,112 log.py[line:109] INFO {}
2017-11-04 18:50:42,116 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:50:42,117 log.py[line:109] INFO {}
2017-11-04 18:50:42,120 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:50:42,121 log.py[line:109] INFO {}
2017-11-04 18:50:42,125 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:50:42,127 log.py[line:109] INFO {}
2017-11-04 18:50:42,132 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:50:42,133 log.py[line:109] INFO {}
2017-11-04 18:50:42,137 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:50:42,138 log.py[line:109] INFO {}
2017-11-04 18:50:42,144 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:50:42,145 log.py[line:109] INFO {}
2017-11-04 18:50:42,148 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:50:42,148 log.py[line:109] INFO {}
2017-11-04 18:50:42,152 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:50:42,152 log.py[line:109] INFO {}
2017-11-04 18:51:11,560 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:51:11,560 log.py[line:109] INFO {}
2017-11-04 18:51:11,562 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:51:11,563 log.py[line:109] INFO {}
2017-11-04 18:51:11,564 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:51:11,564 log.py[line:109] INFO {}
2017-11-04 18:51:11,566 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:11,567 log.py[line:109] INFO {}
2017-11-04 18:51:11,567 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:11,568 log.py[line:109] INFO {}
2017-11-04 18:51:11,569 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:51:11,569 log.py[line:109] INFO {}
2017-11-04 18:51:11,570 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:51:11,571 log.py[line:109] INFO {}
2017-11-04 18:51:11,572 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:51:11,573 log.py[line:109] INFO {}
2017-11-04 18:51:11,574 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:51:11,574 log.py[line:109] INFO {}
2017-11-04 18:51:11,575 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:51:11,575 log.py[line:109] INFO {}
2017-11-04 18:51:11,576 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:51:11,576 log.py[line:109] INFO {}
2017-11-04 18:51:30,871 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:51:30,871 log.py[line:109] INFO {}
2017-11-04 18:51:30,873 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:51:30,874 log.py[line:109] INFO {}
2017-11-04 18:51:30,874 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:51:30,874 log.py[line:109] INFO {}
2017-11-04 18:51:30,876 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:30,876 log.py[line:109] INFO {}
2017-11-04 18:51:30,877 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:30,877 log.py[line:109] INFO {}
2017-11-04 18:51:30,878 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:51:30,878 log.py[line:109] INFO {}
2017-11-04 18:51:30,879 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:51:30,879 log.py[line:109] INFO {}
2017-11-04 18:51:30,880 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:51:30,880 log.py[line:109] INFO {}
2017-11-04 18:51:30,881 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:51:30,881 log.py[line:109] INFO {}
2017-11-04 18:51:30,882 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:51:30,882 log.py[line:109] INFO {}
2017-11-04 18:51:30,883 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:51:30,883 log.py[line:109] INFO {}
2017-11-04 18:51:30,891 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:51:30,892 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:51:30,892 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 18:51:47,023 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:51:47,023 log.py[line:109] INFO {}
2017-11-04 18:51:47,025 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:51:47,025 log.py[line:109] INFO {}
2017-11-04 18:51:47,026 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:51:47,026 log.py[line:109] INFO {}
2017-11-04 18:51:47,027 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:47,028 log.py[line:109] INFO {}
2017-11-04 18:51:47,028 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:51:47,028 log.py[line:109] INFO {}
2017-11-04 18:51:47,029 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:51:47,029 log.py[line:109] INFO {}
2017-11-04 18:51:47,030 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:51:47,030 log.py[line:109] INFO {}
2017-11-04 18:51:47,031 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:51:47,031 log.py[line:109] INFO {}
2017-11-04 18:51:47,032 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:51:47,033 log.py[line:109] INFO {}
2017-11-04 18:51:47,034 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:51:47,034 log.py[line:109] INFO {}
2017-11-04 18:51:47,035 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:51:47,035 log.py[line:109] INFO {}
2017-11-04 18:51:47,047 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:51:47,047 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:51:47,047 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_2': 30}
2017-11-04 18:52:10,373 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:52:10,373 log.py[line:109] INFO {}
2017-11-04 18:52:10,376 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:52:10,376 log.py[line:109] INFO {}
2017-11-04 18:52:10,377 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:52:10,377 log.py[line:109] INFO {}
2017-11-04 18:52:10,379 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:52:10,379 log.py[line:109] INFO {}
2017-11-04 18:52:10,380 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:52:10,380 log.py[line:109] INFO {}
2017-11-04 18:52:10,380 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:52:10,381 log.py[line:109] INFO {}
2017-11-04 18:52:10,382 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:52:10,382 log.py[line:109] INFO {}
2017-11-04 18:52:10,383 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:52:10,383 log.py[line:109] INFO {}
2017-11-04 18:52:10,384 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:52:10,384 log.py[line:109] INFO {}
2017-11-04 18:52:10,385 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:52:10,385 log.py[line:109] INFO {}
2017-11-04 18:52:10,386 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:52:10,386 log.py[line:109] INFO {}
2017-11-04 18:52:10,395 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:52:10,396 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) 
 LIMIT %(param_1)s
2017-11-04 18:52:10,396 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_2': 30, 'param_1': 1}
2017-11-04 18:53:08,156 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:53:08,156 log.py[line:109] INFO {}
2017-11-04 18:53:08,158 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:53:08,158 log.py[line:109] INFO {}
2017-11-04 18:53:08,159 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:53:08,159 log.py[line:109] INFO {}
2017-11-04 18:53:08,161 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:53:08,161 log.py[line:109] INFO {}
2017-11-04 18:53:08,161 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:53:08,162 log.py[line:109] INFO {}
2017-11-04 18:53:08,162 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:53:08,162 log.py[line:109] INFO {}
2017-11-04 18:53:08,163 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:53:08,164 log.py[line:109] INFO {}
2017-11-04 18:53:08,165 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:53:08,165 log.py[line:109] INFO {}
2017-11-04 18:53:08,166 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:53:08,166 log.py[line:109] INFO {}
2017-11-04 18:53:08,167 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:53:08,168 log.py[line:109] INFO {}
2017-11-04 18:53:08,169 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:53:08,170 log.py[line:109] INFO {}
2017-11-04 18:53:08,184 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:53:08,185 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) 
 LIMIT %(param_1)s
2017-11-04 18:53:08,185 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19, 'param_1': 1}
2017-11-04 18:53:47,578 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:53:47,578 log.py[line:109] INFO {}
2017-11-04 18:53:47,580 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:53:47,580 log.py[line:109] INFO {}
2017-11-04 18:53:47,581 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:53:47,581 log.py[line:109] INFO {}
2017-11-04 18:53:47,586 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:53:47,586 log.py[line:109] INFO {}
2017-11-04 18:53:47,588 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:53:47,588 log.py[line:109] INFO {}
2017-11-04 18:53:47,589 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:53:47,590 log.py[line:109] INFO {}
2017-11-04 18:53:47,591 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:53:47,591 log.py[line:109] INFO {}
2017-11-04 18:53:47,593 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:53:47,593 log.py[line:109] INFO {}
2017-11-04 18:53:47,594 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:53:47,595 log.py[line:109] INFO {}
2017-11-04 18:53:47,596 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:53:47,597 log.py[line:109] INFO {}
2017-11-04 18:53:47,598 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:53:47,598 log.py[line:109] INFO {}
2017-11-04 18:53:47,610 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:53:47,612 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:53:47,612 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_1': 19, 'stu_age_3': 21}
2017-11-04 18:54:42,465 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:54:42,466 log.py[line:109] INFO {}
2017-11-04 18:54:42,469 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:54:42,469 log.py[line:109] INFO {}
2017-11-04 18:54:42,470 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:54:42,470 log.py[line:109] INFO {}
2017-11-04 18:54:42,473 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:54:42,473 log.py[line:109] INFO {}
2017-11-04 18:54:42,475 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:54:42,475 log.py[line:109] INFO {}
2017-11-04 18:54:42,477 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:54:42,477 log.py[line:109] INFO {}
2017-11-04 18:54:42,479 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:54:42,480 log.py[line:109] INFO {}
2017-11-04 18:54:42,482 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:54:42,482 log.py[line:109] INFO {}
2017-11-04 18:54:42,483 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:54:42,484 log.py[line:109] INFO {}
2017-11-04 18:54:42,487 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:54:42,487 log.py[line:109] INFO {}
2017-11-04 18:54:42,489 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:54:42,489 log.py[line:109] INFO {}
2017-11-04 18:54:42,499 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:54:42,500 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:54:42,500 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 18:56:57,203 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:56:57,225 log.py[line:109] INFO {}
2017-11-04 18:56:57,227 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:56:57,227 log.py[line:109] INFO {}
2017-11-04 18:56:57,228 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:56:57,229 log.py[line:109] INFO {}
2017-11-04 18:56:57,231 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:56:57,231 log.py[line:109] INFO {}
2017-11-04 18:56:57,232 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:56:57,232 log.py[line:109] INFO {}
2017-11-04 18:56:57,233 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:56:57,233 log.py[line:109] INFO {}
2017-11-04 18:56:57,235 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:56:57,235 log.py[line:109] INFO {}
2017-11-04 18:56:57,236 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:56:57,236 log.py[line:109] INFO {}
2017-11-04 18:56:57,237 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:56:57,237 log.py[line:109] INFO {}
2017-11-04 18:56:57,239 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:56:57,239 log.py[line:109] INFO {}
2017-11-04 18:56:57,240 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:56:57,241 log.py[line:109] INFO {}
2017-11-04 18:56:57,339 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:56:57,340 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:56:57,341 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 18:58:42,363 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:58:42,363 log.py[line:109] INFO {}
2017-11-04 18:58:42,365 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:58:42,365 log.py[line:109] INFO {}
2017-11-04 18:58:42,366 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:58:42,366 log.py[line:109] INFO {}
2017-11-04 18:58:42,368 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:58:42,368 log.py[line:109] INFO {}
2017-11-04 18:58:42,368 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:58:42,368 log.py[line:109] INFO {}
2017-11-04 18:58:42,369 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:58:42,369 log.py[line:109] INFO {}
2017-11-04 18:58:42,370 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:58:42,370 log.py[line:109] INFO {}
2017-11-04 18:58:42,371 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:58:42,371 log.py[line:109] INFO {}
2017-11-04 18:58:42,372 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:58:42,373 log.py[line:109] INFO {}
2017-11-04 18:58:42,374 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:58:42,374 log.py[line:109] INFO {}
2017-11-04 18:58:42,375 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:58:42,375 log.py[line:109] INFO {}
2017-11-04 18:58:49,364 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:58:49,365 log.py[line:109] INFO {}
2017-11-04 18:58:49,367 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:58:49,367 log.py[line:109] INFO {}
2017-11-04 18:58:49,368 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:58:49,368 log.py[line:109] INFO {}
2017-11-04 18:58:49,369 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:58:49,369 log.py[line:109] INFO {}
2017-11-04 18:58:49,370 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:58:49,370 log.py[line:109] INFO {}
2017-11-04 18:58:49,371 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:58:49,371 log.py[line:109] INFO {}
2017-11-04 18:58:49,372 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:58:49,372 log.py[line:109] INFO {}
2017-11-04 18:58:49,373 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:58:49,373 log.py[line:109] INFO {}
2017-11-04 18:58:49,374 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:58:49,374 log.py[line:109] INFO {}
2017-11-04 18:58:49,375 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:58:49,375 log.py[line:109] INFO {}
2017-11-04 18:58:49,376 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:58:49,376 log.py[line:109] INFO {}
2017-11-04 18:58:49,386 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:58:49,386 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age
2017-11-04 18:58:49,387 log.py[line:109] INFO {}
2017-11-04 18:59:10,303 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:59:10,303 log.py[line:109] INFO {}
2017-11-04 18:59:10,307 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:59:10,308 log.py[line:109] INFO {}
2017-11-04 18:59:10,309 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:59:10,309 log.py[line:109] INFO {}
2017-11-04 18:59:10,312 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:10,312 log.py[line:109] INFO {}
2017-11-04 18:59:10,313 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:10,313 log.py[line:109] INFO {}
2017-11-04 18:59:10,314 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:59:10,314 log.py[line:109] INFO {}
2017-11-04 18:59:10,315 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:59:10,315 log.py[line:109] INFO {}
2017-11-04 18:59:10,316 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:59:10,317 log.py[line:109] INFO {}
2017-11-04 18:59:10,317 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:59:10,318 log.py[line:109] INFO {}
2017-11-04 18:59:10,319 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:59:10,319 log.py[line:109] INFO {}
2017-11-04 18:59:10,320 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:59:10,320 log.py[line:109] INFO {}
2017-11-04 18:59:10,330 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:59:10,331 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age
2017-11-04 18:59:10,331 log.py[line:109] INFO {}
2017-11-04 18:59:22,299 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:59:22,299 log.py[line:109] INFO {}
2017-11-04 18:59:22,301 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:59:22,301 log.py[line:109] INFO {}
2017-11-04 18:59:22,302 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:59:22,302 log.py[line:109] INFO {}
2017-11-04 18:59:22,304 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:22,305 log.py[line:109] INFO {}
2017-11-04 18:59:22,306 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:22,306 log.py[line:109] INFO {}
2017-11-04 18:59:22,307 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:59:22,308 log.py[line:109] INFO {}
2017-11-04 18:59:22,310 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:59:22,310 log.py[line:109] INFO {}
2017-11-04 18:59:22,311 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:59:22,311 log.py[line:109] INFO {}
2017-11-04 18:59:22,312 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:59:22,313 log.py[line:109] INFO {}
2017-11-04 18:59:22,315 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:59:22,315 log.py[line:109] INFO {}
2017-11-04 18:59:22,317 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:59:22,318 log.py[line:109] INFO {}
2017-11-04 18:59:22,328 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:59:22,329 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age
2017-11-04 18:59:22,329 log.py[line:109] INFO {}
2017-11-04 18:59:52,475 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 18:59:52,475 log.py[line:109] INFO {}
2017-11-04 18:59:52,481 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 18:59:52,481 log.py[line:109] INFO {}
2017-11-04 18:59:52,482 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 18:59:52,482 log.py[line:109] INFO {}
2017-11-04 18:59:52,484 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:52,485 log.py[line:109] INFO {}
2017-11-04 18:59:52,487 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 18:59:52,487 log.py[line:109] INFO {}
2017-11-04 18:59:52,488 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 18:59:52,488 log.py[line:109] INFO {}
2017-11-04 18:59:52,490 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 18:59:52,490 log.py[line:109] INFO {}
2017-11-04 18:59:52,491 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 18:59:52,491 log.py[line:109] INFO {}
2017-11-04 18:59:52,493 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 18:59:52,494 log.py[line:109] INFO {}
2017-11-04 18:59:52,497 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 18:59:52,497 log.py[line:109] INFO {}
2017-11-04 18:59:52,498 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 18:59:52,498 log.py[line:109] INFO {}
2017-11-04 18:59:52,513 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 18:59:52,515 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 18:59:52,515 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 19:01:47,466 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:01:47,466 log.py[line:109] INFO {}
2017-11-04 19:01:47,469 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:01:47,469 log.py[line:109] INFO {}
2017-11-04 19:01:47,470 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:01:47,470 log.py[line:109] INFO {}
2017-11-04 19:01:47,472 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:01:47,472 log.py[line:109] INFO {}
2017-11-04 19:01:47,474 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:01:47,474 log.py[line:109] INFO {}
2017-11-04 19:01:47,475 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:01:47,475 log.py[line:109] INFO {}
2017-11-04 19:01:47,477 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:01:47,477 log.py[line:109] INFO {}
2017-11-04 19:01:47,478 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:01:47,478 log.py[line:109] INFO {}
2017-11-04 19:01:47,479 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:01:47,479 log.py[line:109] INFO {}
2017-11-04 19:01:47,481 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:01:47,481 log.py[line:109] INFO {}
2017-11-04 19:01:47,482 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:01:47,483 log.py[line:109] INFO {}
2017-11-04 19:01:47,491 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:01:47,492 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age = %(stu_age_1)s AND student.stu_age = %(stu_age_2)s AND student.stu_age = %(stu_age_3)s
2017-11-04 19:01:47,492 log.py[line:109] INFO {'stu_age_2': 21, 'stu_age_3': 30, 'stu_age_1': 19}
2017-11-04 19:02:25,559 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:02:25,560 log.py[line:109] INFO {}
2017-11-04 19:02:25,562 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:02:25,562 log.py[line:109] INFO {}
2017-11-04 19:02:25,563 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:02:25,563 log.py[line:109] INFO {}
2017-11-04 19:02:25,565 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:02:25,565 log.py[line:109] INFO {}
2017-11-04 19:02:25,566 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:02:25,567 log.py[line:109] INFO {}
2017-11-04 19:02:25,567 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:02:25,567 log.py[line:109] INFO {}
2017-11-04 19:02:25,569 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:02:25,569 log.py[line:109] INFO {}
2017-11-04 19:02:25,570 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:02:25,570 log.py[line:109] INFO {}
2017-11-04 19:02:25,571 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:02:25,571 log.py[line:109] INFO {}
2017-11-04 19:02:25,572 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:02:25,572 log.py[line:109] INFO {}
2017-11-04 19:02:25,573 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:02:25,573 log.py[line:109] INFO {}
2017-11-04 19:02:25,582 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:02:25,582 log.py[line:109] INFO SELECT count(student.stu_id) AS count_1 
FROM student GROUP BY student.stu_age = %(stu_age_1)s OR student.stu_age = %(stu_age_2)s OR student.stu_age = %(stu_age_3)s
2017-11-04 19:02:25,583 log.py[line:109] INFO {'stu_age_2': 21, 'stu_age_3': 30, 'stu_age_1': 19}
2017-11-04 19:05:35,812 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:05:35,812 log.py[line:109] INFO {}
2017-11-04 19:05:35,816 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:05:35,816 log.py[line:109] INFO {}
2017-11-04 19:05:35,817 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:05:35,817 log.py[line:109] INFO {}
2017-11-04 19:05:35,819 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:05:35,819 log.py[line:109] INFO {}
2017-11-04 19:05:35,820 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:05:35,820 log.py[line:109] INFO {}
2017-11-04 19:05:35,820 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:05:35,821 log.py[line:109] INFO {}
2017-11-04 19:05:35,822 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:05:35,822 log.py[line:109] INFO {}
2017-11-04 19:05:35,823 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:05:35,823 log.py[line:109] INFO {}
2017-11-04 19:05:35,824 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:05:35,824 log.py[line:109] INFO {}
2017-11-04 19:05:35,825 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:05:35,825 log.py[line:109] INFO {}
2017-11-04 19:05:35,826 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:05:35,826 log.py[line:109] INFO {}
2017-11-04 19:05:35,834 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:05:35,835 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student GROUP BY student.stu_age
2017-11-04 19:05:35,835 log.py[line:109] INFO {}
2017-11-04 19:07:36,615 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:07:36,615 log.py[line:109] INFO {}
2017-11-04 19:07:36,617 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:07:36,618 log.py[line:109] INFO {}
2017-11-04 19:07:36,619 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:07:36,619 log.py[line:109] INFO {}
2017-11-04 19:07:36,620 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:07:36,621 log.py[line:109] INFO {}
2017-11-04 19:07:36,621 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:07:36,622 log.py[line:109] INFO {}
2017-11-04 19:07:36,624 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:07:36,624 log.py[line:109] INFO {}
2017-11-04 19:07:36,626 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:07:36,626 log.py[line:109] INFO {}
2017-11-04 19:07:36,628 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:07:36,628 log.py[line:109] INFO {}
2017-11-04 19:07:36,629 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:07:36,629 log.py[line:109] INFO {}
2017-11-04 19:07:36,630 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:07:36,630 log.py[line:109] INFO {}
2017-11-04 19:07:36,631 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:07:36,631 log.py[line:109] INFO {}
2017-11-04 19:07:36,641 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:07:36,642 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student GROUP BY student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s)
2017-11-04 19:07:36,642 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 19:08:17,023 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:08:17,024 log.py[line:109] INFO {}
2017-11-04 19:08:17,025 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:08:17,026 log.py[line:109] INFO {}
2017-11-04 19:08:17,026 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:08:17,027 log.py[line:109] INFO {}
2017-11-04 19:08:17,028 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:08:17,028 log.py[line:109] INFO {}
2017-11-04 19:08:17,029 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:08:17,029 log.py[line:109] INFO {}
2017-11-04 19:08:17,031 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:08:17,031 log.py[line:109] INFO {}
2017-11-04 19:08:17,033 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:08:17,033 log.py[line:109] INFO {}
2017-11-04 19:08:17,035 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:08:17,035 log.py[line:109] INFO {}
2017-11-04 19:08:17,037 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:08:17,037 log.py[line:109] INFO {}
2017-11-04 19:08:17,039 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:08:17,039 log.py[line:109] INFO {}
2017-11-04 19:08:17,042 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:08:17,042 log.py[line:109] INFO {}
2017-11-04 19:08:17,051 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:08:17,052 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student GROUP BY student.stu_age
2017-11-04 19:08:17,052 log.py[line:109] INFO {}
2017-11-04 19:09:38,466 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:09:38,467 log.py[line:109] INFO {}
2017-11-04 19:09:38,469 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:09:38,469 log.py[line:109] INFO {}
2017-11-04 19:09:38,470 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:09:38,470 log.py[line:109] INFO {}
2017-11-04 19:09:38,474 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:09:38,474 log.py[line:109] INFO {}
2017-11-04 19:09:38,476 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:09:38,476 log.py[line:109] INFO {}
2017-11-04 19:09:38,478 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:09:38,478 log.py[line:109] INFO {}
2017-11-04 19:09:38,480 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:09:38,481 log.py[line:109] INFO {}
2017-11-04 19:09:38,482 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:09:38,482 log.py[line:109] INFO {}
2017-11-04 19:09:38,482 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:09:38,483 log.py[line:109] INFO {}
2017-11-04 19:09:38,483 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:09:38,484 log.py[line:109] INFO {}
2017-11-04 19:09:38,484 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:09:38,484 log.py[line:109] INFO {}
2017-11-04 19:09:38,493 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:09:38,494 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:09:38,494 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_2': 30}
2017-11-04 19:11:26,182 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:11:26,182 log.py[line:109] INFO {}
2017-11-04 19:11:26,185 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:11:26,185 log.py[line:109] INFO {}
2017-11-04 19:11:26,186 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:11:26,187 log.py[line:109] INFO {}
2017-11-04 19:11:26,188 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:11:26,188 log.py[line:109] INFO {}
2017-11-04 19:11:26,189 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:11:26,189 log.py[line:109] INFO {}
2017-11-04 19:11:26,190 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:11:26,190 log.py[line:109] INFO {}
2017-11-04 19:11:26,193 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:11:26,193 log.py[line:109] INFO {}
2017-11-04 19:11:26,195 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:11:26,196 log.py[line:109] INFO {}
2017-11-04 19:11:26,197 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:11:26,197 log.py[line:109] INFO {}
2017-11-04 19:11:26,198 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:11:26,199 log.py[line:109] INFO {}
2017-11-04 19:11:26,201 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:11:26,201 log.py[line:109] INFO {}
2017-11-04 19:11:26,210 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:11:26,211 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:11:26,211 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_2': 30}
2017-11-04 19:11:32,123 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:11:32,124 log.py[line:109] INFO {}
2017-11-04 19:11:32,127 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:11:32,127 log.py[line:109] INFO {}
2017-11-04 19:11:32,128 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:11:32,128 log.py[line:109] INFO {}
2017-11-04 19:11:32,131 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:11:32,132 log.py[line:109] INFO {}
2017-11-04 19:11:32,133 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:11:32,133 log.py[line:109] INFO {}
2017-11-04 19:11:32,135 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:11:32,135 log.py[line:109] INFO {}
2017-11-04 19:11:32,136 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:11:32,137 log.py[line:109] INFO {}
2017-11-04 19:11:32,139 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:11:32,140 log.py[line:109] INFO {}
2017-11-04 19:11:32,142 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:11:32,142 log.py[line:109] INFO {}
2017-11-04 19:11:32,143 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:11:32,143 log.py[line:109] INFO {}
2017-11-04 19:11:32,144 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:11:32,144 log.py[line:109] INFO {}
2017-11-04 19:11:32,155 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:11:32,156 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:11:32,156 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_1': 19, 'stu_age_3': 21}
2017-11-04 19:12:36,346 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:12:36,347 log.py[line:109] INFO {}
2017-11-04 19:12:36,353 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:12:36,354 log.py[line:109] INFO {}
2017-11-04 19:12:36,357 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:12:36,357 log.py[line:109] INFO {}
2017-11-04 19:12:36,361 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:12:36,361 log.py[line:109] INFO {}
2017-11-04 19:12:36,363 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:12:36,363 log.py[line:109] INFO {}
2017-11-04 19:12:36,365 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:12:36,365 log.py[line:109] INFO {}
2017-11-04 19:12:36,368 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:12:36,369 log.py[line:109] INFO {}
2017-11-04 19:12:36,372 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:12:36,372 log.py[line:109] INFO {}
2017-11-04 19:12:36,375 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:12:36,375 log.py[line:109] INFO {}
2017-11-04 19:12:36,378 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:12:36,378 log.py[line:109] INFO {}
2017-11-04 19:12:36,381 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:12:36,381 log.py[line:109] INFO {}
2017-11-04 19:12:43,621 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:12:43,623 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:12:43,623 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 19:16:33,928 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:16:33,928 log.py[line:109] INFO {}
2017-11-04 19:16:33,930 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:16:33,931 log.py[line:109] INFO {}
2017-11-04 19:16:33,933 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:16:33,934 log.py[line:109] INFO {}
2017-11-04 19:16:33,936 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:16:33,936 log.py[line:109] INFO {}
2017-11-04 19:16:33,937 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:16:33,937 log.py[line:109] INFO {}
2017-11-04 19:16:33,938 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:16:33,939 log.py[line:109] INFO {}
2017-11-04 19:16:33,941 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:16:33,942 log.py[line:109] INFO {}
2017-11-04 19:16:33,945 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:16:33,945 log.py[line:109] INFO {}
2017-11-04 19:16:33,947 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:16:33,947 log.py[line:109] INFO {}
2017-11-04 19:16:33,948 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:16:33,949 log.py[line:109] INFO {}
2017-11-04 19:16:33,952 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:16:33,952 log.py[line:109] INFO {}
2017-11-04 19:16:34,022 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:16:34,024 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:16:34,024 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_1': 19, 'stu_age_3': 21}
2017-11-04 19:16:44,463 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:16:44,463 log.py[line:109] INFO {}
2017-11-04 19:16:44,465 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:16:44,465 log.py[line:109] INFO {}
2017-11-04 19:16:44,466 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:16:44,466 log.py[line:109] INFO {}
2017-11-04 19:16:44,467 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:16:44,467 log.py[line:109] INFO {}
2017-11-04 19:16:44,468 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:16:44,469 log.py[line:109] INFO {}
2017-11-04 19:16:44,469 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:16:44,469 log.py[line:109] INFO {}
2017-11-04 19:16:44,471 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:16:44,471 log.py[line:109] INFO {}
2017-11-04 19:16:44,472 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:16:44,472 log.py[line:109] INFO {}
2017-11-04 19:16:44,473 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:16:44,473 log.py[line:109] INFO {}
2017-11-04 19:16:44,474 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:16:44,475 log.py[line:109] INFO {}
2017-11-04 19:16:44,480 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:16:44,480 log.py[line:109] INFO {}
2017-11-04 19:16:44,491 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:16:44,491 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:16:44,491 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 19:17:00,663 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:17:00,664 log.py[line:109] INFO {}
2017-11-04 19:17:00,666 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:17:00,666 log.py[line:109] INFO {}
2017-11-04 19:17:00,667 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:17:00,667 log.py[line:109] INFO {}
2017-11-04 19:17:00,669 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:17:00,669 log.py[line:109] INFO {}
2017-11-04 19:17:00,670 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:17:00,670 log.py[line:109] INFO {}
2017-11-04 19:17:00,671 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:17:00,671 log.py[line:109] INFO {}
2017-11-04 19:17:00,673 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:17:00,673 log.py[line:109] INFO {}
2017-11-04 19:17:00,674 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:17:00,674 log.py[line:109] INFO {}
2017-11-04 19:17:00,675 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:17:00,675 log.py[line:109] INFO {}
2017-11-04 19:17:00,676 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:17:00,676 log.py[line:109] INFO {}
2017-11-04 19:17:00,677 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:17:00,677 log.py[line:109] INFO {}
2017-11-04 19:17:00,687 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:17:00,688 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:17:00,689 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 19:17:17,084 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:17:17,084 log.py[line:109] INFO {}
2017-11-04 19:17:17,087 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:17:17,087 log.py[line:109] INFO {}
2017-11-04 19:17:17,088 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:17:17,088 log.py[line:109] INFO {}
2017-11-04 19:17:17,090 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:17:17,091 log.py[line:109] INFO {}
2017-11-04 19:17:17,092 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:17:17,092 log.py[line:109] INFO {}
2017-11-04 19:17:17,093 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:17:17,093 log.py[line:109] INFO {}
2017-11-04 19:17:17,094 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:17:17,094 log.py[line:109] INFO {}
2017-11-04 19:17:17,095 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:17:17,095 log.py[line:109] INFO {}
2017-11-04 19:17:17,096 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:17:17,096 log.py[line:109] INFO {}
2017-11-04 19:17:17,097 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:17:17,097 log.py[line:109] INFO {}
2017-11-04 19:17:17,098 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:17:17,098 log.py[line:109] INFO {}
2017-11-04 19:17:17,107 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:17:17,107 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:17:17,108 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19}
2017-11-04 19:31:26,322 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:31:26,323 log.py[line:109] INFO {}
2017-11-04 19:31:26,329 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:31:26,329 log.py[line:109] INFO {}
2017-11-04 19:31:26,333 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:31:26,333 log.py[line:109] INFO {}
2017-11-04 19:31:26,337 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:31:26,337 log.py[line:109] INFO {}
2017-11-04 19:31:26,338 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:31:26,338 log.py[line:109] INFO {}
2017-11-04 19:31:26,339 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:31:26,340 log.py[line:109] INFO {}
2017-11-04 19:31:26,343 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:31:26,343 log.py[line:109] INFO {}
2017-11-04 19:31:26,345 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:31:26,345 log.py[line:109] INFO {}
2017-11-04 19:31:26,346 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:31:26,347 log.py[line:109] INFO {}
2017-11-04 19:31:26,348 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:31:26,348 log.py[line:109] INFO {}
2017-11-04 19:31:26,349 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:31:26,349 log.py[line:109] INFO {}
2017-11-04 19:31:26,357 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:31:26,358 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s) GROUP BY student.stu_age
2017-11-04 19:31:26,359 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_2': 30, 'stu_age_1': 19}
2017-11-04 19:40:51,085 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 19:40:51,085 log.py[line:109] INFO {}
2017-11-04 19:40:51,087 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 19:40:51,087 log.py[line:109] INFO {}
2017-11-04 19:40:51,088 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 19:40:51,089 log.py[line:109] INFO {}
2017-11-04 19:40:51,090 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 19:40:51,090 log.py[line:109] INFO {}
2017-11-04 19:40:51,091 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 19:40:51,091 log.py[line:109] INFO {}
2017-11-04 19:40:51,092 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 19:40:51,092 log.py[line:109] INFO {}
2017-11-04 19:40:51,093 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 19:40:51,093 log.py[line:109] INFO {}
2017-11-04 19:40:51,094 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 19:40:51,095 log.py[line:109] INFO {}
2017-11-04 19:40:51,095 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 19:40:51,096 log.py[line:109] INFO {}
2017-11-04 19:40:51,096 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 19:40:51,097 log.py[line:109] INFO {}
2017-11-04 19:40:51,098 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 19:40:51,098 log.py[line:109] INFO {}
2017-11-04 19:40:51,106 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 19:40:51,107 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age, count(student.stu_age) AS count_1 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 19:40:51,107 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_4': 31}
2017-11-04 20:53:22,889 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 20:53:22,889 log.py[line:109] INFO {}
2017-11-04 20:53:22,892 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 20:53:22,892 log.py[line:109] INFO {}
2017-11-04 20:53:22,893 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 20:53:22,893 log.py[line:109] INFO {}
2017-11-04 20:53:22,896 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 20:53:22,896 log.py[line:109] INFO {}
2017-11-04 20:53:22,897 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 20:53:22,897 log.py[line:109] INFO {}
2017-11-04 20:53:22,898 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 20:53:22,898 log.py[line:109] INFO {}
2017-11-04 20:53:22,899 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 20:53:22,900 log.py[line:109] INFO {}
2017-11-04 20:53:22,901 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 20:53:22,901 log.py[line:109] INFO {}
2017-11-04 20:53:22,903 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 20:53:22,903 log.py[line:109] INFO {}
2017-11-04 20:53:22,904 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 20:53:22,904 log.py[line:109] INFO {}
2017-11-04 20:53:22,905 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 20:53:22,905 log.py[line:109] INFO {}
2017-11-04 20:53:22,951 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 20:53:22,952 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s)
2017-11-04 20:53:22,952 log.py[line:109] INFO {'stu_id_4': 2, 'stu_id_3': 2, 'stu_id_2': 1, 'stu_id_1': 1}
2017-11-04 21:10:38,320 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:10:38,320 log.py[line:109] INFO {}
2017-11-04 21:10:38,323 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:10:38,324 log.py[line:109] INFO {}
2017-11-04 21:10:38,325 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:10:38,325 log.py[line:109] INFO {}
2017-11-04 21:10:38,326 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:10:38,327 log.py[line:109] INFO {}
2017-11-04 21:10:38,328 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:10:38,328 log.py[line:109] INFO {}
2017-11-04 21:10:38,329 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:10:38,329 log.py[line:109] INFO {}
2017-11-04 21:10:38,331 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:10:38,331 log.py[line:109] INFO {}
2017-11-04 21:10:38,332 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:10:38,333 log.py[line:109] INFO {}
2017-11-04 21:10:38,334 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:10:38,334 log.py[line:109] INFO {}
2017-11-04 21:10:38,336 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:10:38,336 log.py[line:109] INFO {}
2017-11-04 21:10:38,337 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:10:38,338 log.py[line:109] INFO {}
2017-11-04 21:10:38,348 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:10:38,349 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:10:38,349 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_4': 31, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 21:10:59,481 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:10:59,481 log.py[line:109] INFO {}
2017-11-04 21:10:59,483 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:10:59,483 log.py[line:109] INFO {}
2017-11-04 21:10:59,484 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:10:59,485 log.py[line:109] INFO {}
2017-11-04 21:10:59,486 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:10:59,487 log.py[line:109] INFO {}
2017-11-04 21:10:59,488 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:10:59,488 log.py[line:109] INFO {}
2017-11-04 21:10:59,489 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:10:59,489 log.py[line:109] INFO {}
2017-11-04 21:10:59,493 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:10:59,493 log.py[line:109] INFO {}
2017-11-04 21:10:59,496 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:10:59,496 log.py[line:109] INFO {}
2017-11-04 21:10:59,498 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:10:59,499 log.py[line:109] INFO {}
2017-11-04 21:10:59,503 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:10:59,503 log.py[line:109] INFO {}
2017-11-04 21:10:59,504 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:10:59,504 log.py[line:109] INFO {}
2017-11-04 21:10:59,519 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:10:59,520 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:10:59,520 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_4': 31, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 21:10:59,522 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s)
2017-11-04 21:10:59,523 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_4': 31, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 21:13:22,209 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:13:22,209 log.py[line:109] INFO {}
2017-11-04 21:13:22,211 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:13:22,211 log.py[line:109] INFO {}
2017-11-04 21:13:22,212 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:13:22,212 log.py[line:109] INFO {}
2017-11-04 21:13:22,213 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:22,214 log.py[line:109] INFO {}
2017-11-04 21:13:22,214 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:22,215 log.py[line:109] INFO {}
2017-11-04 21:13:22,215 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:13:22,215 log.py[line:109] INFO {}
2017-11-04 21:13:22,216 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:13:22,217 log.py[line:109] INFO {}
2017-11-04 21:13:22,218 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:13:22,218 log.py[line:109] INFO {}
2017-11-04 21:13:22,219 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:13:22,219 log.py[line:109] INFO {}
2017-11-04 21:13:22,220 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:13:22,220 log.py[line:109] INFO {}
2017-11-04 21:13:22,221 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:13:22,221 log.py[line:109] INFO {}
2017-11-04 21:13:22,229 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:13:22,230 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:13:22,230 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_4': 31}
2017-11-04 21:13:22,232 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s)
2017-11-04 21:13:22,232 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_3': 21, 'stu_age_1': 19, 'stu_age_4': 31}
2017-11-04 21:13:44,421 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:13:44,421 log.py[line:109] INFO {}
2017-11-04 21:13:44,423 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:13:44,424 log.py[line:109] INFO {}
2017-11-04 21:13:44,424 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:13:44,424 log.py[line:109] INFO {}
2017-11-04 21:13:44,426 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:44,426 log.py[line:109] INFO {}
2017-11-04 21:13:44,427 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:44,427 log.py[line:109] INFO {}
2017-11-04 21:13:44,428 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:13:44,428 log.py[line:109] INFO {}
2017-11-04 21:13:44,429 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:13:44,429 log.py[line:109] INFO {}
2017-11-04 21:13:44,430 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:13:44,430 log.py[line:109] INFO {}
2017-11-04 21:13:44,431 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:13:44,431 log.py[line:109] INFO {}
2017-11-04 21:13:44,432 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:13:44,433 log.py[line:109] INFO {}
2017-11-04 21:13:44,434 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:13:44,434 log.py[line:109] INFO {}
2017-11-04 21:13:44,442 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:13:44,443 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:13:44,443 log.py[line:109] INFO {'stu_age_3': 21, 'stu_age_4': 31, 'stu_age_1': 19, 'stu_age_2': 30}
2017-11-04 21:13:58,915 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:13:58,915 log.py[line:109] INFO {}
2017-11-04 21:13:58,917 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:13:58,917 log.py[line:109] INFO {}
2017-11-04 21:13:58,918 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:13:58,918 log.py[line:109] INFO {}
2017-11-04 21:13:58,920 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:58,920 log.py[line:109] INFO {}
2017-11-04 21:13:58,921 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:13:58,921 log.py[line:109] INFO {}
2017-11-04 21:13:58,922 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:13:58,922 log.py[line:109] INFO {}
2017-11-04 21:13:58,925 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:13:58,925 log.py[line:109] INFO {}
2017-11-04 21:13:58,927 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:13:58,927 log.py[line:109] INFO {}
2017-11-04 21:13:58,928 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:13:58,928 log.py[line:109] INFO {}
2017-11-04 21:13:58,929 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:13:58,929 log.py[line:109] INFO {}
2017-11-04 21:13:58,930 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:13:58,930 log.py[line:109] INFO {}
2017-11-04 21:13:58,938 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:13:58,939 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:13:58,939 log.py[line:109] INFO {'stu_age_1': 19, 'stu_age_4': 31, 'stu_age_3': 21, 'stu_age_2': 30}
2017-11-04 21:14:15,166 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:14:15,167 log.py[line:109] INFO {}
2017-11-04 21:14:15,169 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:14:15,170 log.py[line:109] INFO {}
2017-11-04 21:14:15,172 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:14:15,172 log.py[line:109] INFO {}
2017-11-04 21:14:15,174 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:14:15,174 log.py[line:109] INFO {}
2017-11-04 21:14:15,175 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:14:15,176 log.py[line:109] INFO {}
2017-11-04 21:14:15,178 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:14:15,179 log.py[line:109] INFO {}
2017-11-04 21:14:15,180 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:14:15,180 log.py[line:109] INFO {}
2017-11-04 21:14:15,182 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:14:15,182 log.py[line:109] INFO {}
2017-11-04 21:14:15,183 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:14:15,183 log.py[line:109] INFO {}
2017-11-04 21:14:15,185 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:14:15,185 log.py[line:109] INFO {}
2017-11-04 21:14:15,186 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:14:15,186 log.py[line:109] INFO {}
2017-11-04 21:14:15,202 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:14:15,204 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_age
2017-11-04 21:14:15,204 log.py[line:109] INFO {'stu_age_4': 31, 'stu_age_1': 19, 'stu_age_2': 30, 'stu_age_3': 21}
2017-11-04 21:15:09,017 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:15:09,017 log.py[line:109] INFO {}
2017-11-04 21:15:09,019 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:15:09,019 log.py[line:109] INFO {}
2017-11-04 21:15:09,020 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:15:09,021 log.py[line:109] INFO {}
2017-11-04 21:15:09,024 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:15:09,024 log.py[line:109] INFO {}
2017-11-04 21:15:09,025 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:15:09,026 log.py[line:109] INFO {}
2017-11-04 21:15:09,027 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:15:09,027 log.py[line:109] INFO {}
2017-11-04 21:15:09,029 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:15:09,029 log.py[line:109] INFO {}
2017-11-04 21:15:09,032 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:15:09,032 log.py[line:109] INFO {}
2017-11-04 21:15:09,033 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:15:09,033 log.py[line:109] INFO {}
2017-11-04 21:15:09,034 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:15:09,034 log.py[line:109] INFO {}
2017-11-04 21:15:09,035 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:15:09,035 log.py[line:109] INFO {}
2017-11-04 21:15:09,047 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:15:09,049 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_age = %(stu_age_1)s GROUP BY student.stu_age
2017-11-04 21:15:09,049 log.py[line:109] INFO {'stu_age_1': 21}
2017-11-04 21:16:15,879 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:16:15,879 log.py[line:109] INFO {}
2017-11-04 21:16:15,882 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:16:15,883 log.py[line:109] INFO {}
2017-11-04 21:16:15,884 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:16:15,884 log.py[line:109] INFO {}
2017-11-04 21:16:15,886 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:16:15,886 log.py[line:109] INFO {}
2017-11-04 21:16:15,887 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:16:15,887 log.py[line:109] INFO {}
2017-11-04 21:16:15,888 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:16:15,888 log.py[line:109] INFO {}
2017-11-04 21:16:15,889 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:16:15,890 log.py[line:109] INFO {}
2017-11-04 21:16:15,891 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:16:15,891 log.py[line:109] INFO {}
2017-11-04 21:16:15,892 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:16:15,892 log.py[line:109] INFO {}
2017-11-04 21:16:15,893 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:16:15,893 log.py[line:109] INFO {}
2017-11-04 21:16:15,894 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:16:15,894 log.py[line:109] INFO {}
2017-11-04 21:16:15,902 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:16:15,903 log.py[line:109] INFO SELECT student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age = %(stu_age_1)s GROUP BY student.stu_age
2017-11-04 21:16:15,903 log.py[line:109] INFO {'stu_age_1': 21}
2017-11-04 21:17:46,294 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:17:46,304 log.py[line:109] INFO {}
2017-11-04 21:17:46,309 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:17:46,309 log.py[line:109] INFO {}
2017-11-04 21:17:46,310 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:17:46,310 log.py[line:109] INFO {}
2017-11-04 21:17:46,312 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:17:46,312 log.py[line:109] INFO {}
2017-11-04 21:17:46,313 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:17:46,313 log.py[line:109] INFO {}
2017-11-04 21:17:46,314 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:17:46,314 log.py[line:109] INFO {}
2017-11-04 21:17:46,315 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:17:46,315 log.py[line:109] INFO {}
2017-11-04 21:17:46,316 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:17:46,316 log.py[line:109] INFO {}
2017-11-04 21:17:46,318 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:17:46,318 log.py[line:109] INFO {}
2017-11-04 21:17:46,320 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:17:46,320 log.py[line:109] INFO {}
2017-11-04 21:17:46,322 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:17:46,323 log.py[line:109] INFO {}
2017-11-04 21:17:46,388 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:17:46,390 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age = %(stu_age_1)s GROUP BY student.stu_name, student.stu_age
2017-11-04 21:17:46,390 log.py[line:109] INFO {'stu_age_1': 21}
2017-11-04 21:18:00,620 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:18:00,621 log.py[line:109] INFO {}
2017-11-04 21:18:00,623 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:18:00,623 log.py[line:109] INFO {}
2017-11-04 21:18:00,625 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:18:00,625 log.py[line:109] INFO {}
2017-11-04 21:18:00,628 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:18:00,628 log.py[line:109] INFO {}
2017-11-04 21:18:00,629 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:18:00,630 log.py[line:109] INFO {}
2017-11-04 21:18:00,630 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:18:00,630 log.py[line:109] INFO {}
2017-11-04 21:18:00,631 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:18:00,631 log.py[line:109] INFO {}
2017-11-04 21:18:00,632 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:18:00,633 log.py[line:109] INFO {}
2017-11-04 21:18:00,633 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:18:00,634 log.py[line:109] INFO {}
2017-11-04 21:18:00,634 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:18:00,634 log.py[line:109] INFO {}
2017-11-04 21:18:00,635 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:18:00,635 log.py[line:109] INFO {}
2017-11-04 21:18:00,646 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:18:00,647 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_age IN (%(stu_age_1)s, %(stu_age_2)s, %(stu_age_3)s, %(stu_age_4)s) GROUP BY student.stu_name, student.stu_age
2017-11-04 21:18:00,647 log.py[line:109] INFO {'stu_age_2': 30, 'stu_age_1': 19, 'stu_age_3': 21, 'stu_age_4': 31}
2017-11-04 21:23:31,370 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-04 21:23:31,393 log.py[line:109] INFO {}
2017-11-04 21:23:31,395 log.py[line:109] INFO SELECT DATABASE()
2017-11-04 21:23:31,395 log.py[line:109] INFO {}
2017-11-04 21:23:31,396 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-04 21:23:31,396 log.py[line:109] INFO {}
2017-11-04 21:23:31,397 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-04 21:23:31,398 log.py[line:109] INFO {}
2017-11-04 21:23:31,398 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-04 21:23:31,399 log.py[line:109] INFO {}
2017-11-04 21:23:31,399 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-04 21:23:31,399 log.py[line:109] INFO {}
2017-11-04 21:23:31,400 log.py[line:109] INFO DESCRIBE `vip`
2017-11-04 21:23:31,401 log.py[line:109] INFO {}
2017-11-04 21:23:31,402 log.py[line:109] INFO DESCRIBE `student`
2017-11-04 21:23:31,402 log.py[line:109] INFO {}
2017-11-04 21:23:31,403 log.py[line:109] INFO DESCRIBE `grade`
2017-11-04 21:23:31,403 log.py[line:109] INFO {}
2017-11-04 21:23:31,404 log.py[line:109] INFO DESCRIBE `course`
2017-11-04 21:23:31,404 log.py[line:109] INFO {}
2017-11-04 21:23:31,405 log.py[line:109] INFO DESCRIBE `cus`
2017-11-04 21:23:31,405 log.py[line:109] INFO {}
2017-11-04 21:23:31,500 log.py[line:109] INFO BEGIN (implicit)
2017-11-04 21:23:31,501 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s) GROUP BY student.stu_name, student.stu_id
2017-11-04 21:23:31,502 log.py[line:109] INFO {'stu_id_2': 1, 'stu_id_1': 1, 'stu_id_3': 2, 'stu_id_4': 2}
2017-11-05 10:31:39,835 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-05 10:31:39,852 log.py[line:109] INFO {}
2017-11-05 10:31:39,857 log.py[line:109] INFO SELECT DATABASE()
2017-11-05 10:31:39,857 log.py[line:109] INFO {}
2017-11-05 10:31:39,858 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-05 10:31:39,858 log.py[line:109] INFO {}
2017-11-05 10:31:39,860 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-05 10:31:39,860 log.py[line:109] INFO {}
2017-11-05 10:31:39,861 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-05 10:31:39,861 log.py[line:109] INFO {}
2017-11-05 10:31:39,862 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-05 10:31:39,862 log.py[line:109] INFO {}
2017-11-05 10:31:39,864 log.py[line:109] INFO DESCRIBE `vip`
2017-11-05 10:31:39,864 log.py[line:109] INFO {}
2017-11-05 10:31:39,866 log.py[line:109] INFO DESCRIBE `student`
2017-11-05 10:31:39,866 log.py[line:109] INFO {}
2017-11-05 10:31:39,867 log.py[line:109] INFO DESCRIBE `course`
2017-11-05 10:31:39,867 log.py[line:109] INFO {}
2017-11-05 10:31:39,868 log.py[line:109] INFO DESCRIBE `cus`
2017-11-05 10:31:39,869 log.py[line:109] INFO {}
2017-11-05 10:31:39,870 log.py[line:109] INFO DESCRIBE `grade`
2017-11-05 10:31:39,870 log.py[line:109] INFO {}
2017-11-05 10:31:39,935 log.py[line:109] INFO BEGIN (implicit)
2017-11-05 10:31:39,936 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s) GROUP BY student.stu_name, student.stu_id
2017-11-05 10:31:39,936 log.py[line:109] INFO {'stu_id_4': 2, 'stu_id_3': 2, 'stu_id_2': 1, 'stu_id_1': 1}
2017-11-05 10:34:54,120 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-05 10:34:54,120 log.py[line:109] INFO {}
2017-11-05 10:34:54,123 log.py[line:109] INFO SELECT DATABASE()
2017-11-05 10:34:54,124 log.py[line:109] INFO {}
2017-11-05 10:34:54,125 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-05 10:34:54,125 log.py[line:109] INFO {}
2017-11-05 10:34:54,126 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-05 10:34:54,127 log.py[line:109] INFO {}
2017-11-05 10:34:54,127 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-05 10:34:54,127 log.py[line:109] INFO {}
2017-11-05 10:34:54,128 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-05 10:34:54,128 log.py[line:109] INFO {}
2017-11-05 10:34:54,129 log.py[line:109] INFO DESCRIBE `student`
2017-11-05 10:34:54,129 log.py[line:109] INFO {}
2017-11-05 10:34:54,130 log.py[line:109] INFO DESCRIBE `cus`
2017-11-05 10:34:54,130 log.py[line:109] INFO {}
2017-11-05 10:34:54,131 log.py[line:109] INFO DESCRIBE `vip`
2017-11-05 10:34:54,131 log.py[line:109] INFO {}
2017-11-05 10:34:54,133 log.py[line:109] INFO DESCRIBE `grade`
2017-11-05 10:34:54,133 log.py[line:109] INFO {}
2017-11-05 10:34:54,134 log.py[line:109] INFO DESCRIBE `course`
2017-11-05 10:34:54,134 log.py[line:109] INFO {}
2017-11-05 10:34:54,143 log.py[line:109] INFO BEGIN (implicit)
2017-11-05 10:34:54,143 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s) GROUP BY student.stu_name, student.stu_id
2017-11-05 10:34:54,144 log.py[line:109] INFO {'stu_id_2': 1, 'stu_id_3': 1, 'stu_id_1': 2, 'stu_id_4': 2}
2017-11-05 10:36:54,527 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-05 10:36:54,527 log.py[line:109] INFO {}
2017-11-05 10:36:54,529 log.py[line:109] INFO SELECT DATABASE()
2017-11-05 10:36:54,529 log.py[line:109] INFO {}
2017-11-05 10:36:54,530 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-05 10:36:54,530 log.py[line:109] INFO {}
2017-11-05 10:36:54,532 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-05 10:36:54,532 log.py[line:109] INFO {}
2017-11-05 10:36:54,533 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-05 10:36:54,534 log.py[line:109] INFO {}
2017-11-05 10:36:54,535 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-05 10:36:54,535 log.py[line:109] INFO {}
2017-11-05 10:36:54,537 log.py[line:109] INFO DESCRIBE `student`
2017-11-05 10:36:54,537 log.py[line:109] INFO {}
2017-11-05 10:36:54,538 log.py[line:109] INFO DESCRIBE `course`
2017-11-05 10:36:54,538 log.py[line:109] INFO {}
2017-11-05 10:36:54,539 log.py[line:109] INFO DESCRIBE `vip`
2017-11-05 10:36:54,539 log.py[line:109] INFO {}
2017-11-05 10:36:54,540 log.py[line:109] INFO DESCRIBE `grade`
2017-11-05 10:36:54,541 log.py[line:109] INFO {}
2017-11-05 10:36:54,541 log.py[line:109] INFO DESCRIBE `cus`
2017-11-05 10:36:54,542 log.py[line:109] INFO {}
2017-11-05 10:36:54,550 log.py[line:109] INFO BEGIN (implicit)
2017-11-05 10:36:54,551 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s) GROUP BY student.stu_name, student.stu_id
2017-11-05 10:36:54,551 log.py[line:109] INFO {'stu_id_2': 2, 'stu_id_1': 2, 'stu_id_3': 1}
2017-11-05 10:47:00,568 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-05 10:47:00,568 log.py[line:109] INFO {}
2017-11-05 10:47:00,571 log.py[line:109] INFO SELECT DATABASE()
2017-11-05 10:47:00,572 log.py[line:109] INFO {}
2017-11-05 10:47:00,572 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-05 10:47:00,572 log.py[line:109] INFO {}
2017-11-05 10:47:00,574 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-05 10:47:00,574 log.py[line:109] INFO {}
2017-11-05 10:47:00,575 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-05 10:47:00,575 log.py[line:109] INFO {}
2017-11-05 10:47:00,576 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-05 10:47:00,576 log.py[line:109] INFO {}
2017-11-05 10:47:00,577 log.py[line:109] INFO DESCRIBE `vip`
2017-11-05 10:47:00,577 log.py[line:109] INFO {}
2017-11-05 10:47:00,578 log.py[line:109] INFO DESCRIBE `cus`
2017-11-05 10:47:00,578 log.py[line:109] INFO {}
2017-11-05 10:47:00,579 log.py[line:109] INFO DESCRIBE `student`
2017-11-05 10:47:00,580 log.py[line:109] INFO {}
2017-11-05 10:47:00,581 log.py[line:109] INFO DESCRIBE `grade`
2017-11-05 10:47:00,581 log.py[line:109] INFO {}
2017-11-05 10:47:00,582 log.py[line:109] INFO DESCRIBE `course`
2017-11-05 10:47:00,582 log.py[line:109] INFO {}
2017-11-05 10:47:00,590 log.py[line:109] INFO BEGIN (implicit)
2017-11-05 10:47:00,591 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s) GROUP BY student.stu_name, student.stu_id
2017-11-05 10:47:00,591 log.py[line:109] INFO {'stu_id_3': 1, 'stu_id_4': 3, 'stu_id_1': 2, 'stu_id_2': 2}
2017-11-05 10:47:10,369 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-05 10:47:10,370 log.py[line:109] INFO {}
2017-11-05 10:47:10,372 log.py[line:109] INFO SELECT DATABASE()
2017-11-05 10:47:10,372 log.py[line:109] INFO {}
2017-11-05 10:47:10,373 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-05 10:47:10,373 log.py[line:109] INFO {}
2017-11-05 10:47:10,374 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-05 10:47:10,374 log.py[line:109] INFO {}
2017-11-05 10:47:10,375 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-05 10:47:10,375 log.py[line:109] INFO {}
2017-11-05 10:47:10,376 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-05 10:47:10,376 log.py[line:109] INFO {}
2017-11-05 10:47:10,377 log.py[line:109] INFO DESCRIBE `student`
2017-11-05 10:47:10,377 log.py[line:109] INFO {}
2017-11-05 10:47:10,379 log.py[line:109] INFO DESCRIBE `vip`
2017-11-05 10:47:10,379 log.py[line:109] INFO {}
2017-11-05 10:47:10,380 log.py[line:109] INFO DESCRIBE `cus`
2017-11-05 10:47:10,380 log.py[line:109] INFO {}
2017-11-05 10:47:10,381 log.py[line:109] INFO DESCRIBE `grade`
2017-11-05 10:47:10,381 log.py[line:109] INFO {}
2017-11-05 10:47:10,383 log.py[line:109] INFO DESCRIBE `course`
2017-11-05 10:47:10,383 log.py[line:109] INFO {}
2017-11-05 10:47:10,392 log.py[line:109] INFO BEGIN (implicit)
2017-11-05 10:47:10,392 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name, student.stu_id AS student_stu_id 
FROM student 
WHERE student.stu_id IN (%(stu_id_1)s, %(stu_id_2)s, %(stu_id_3)s, %(stu_id_4)s) GROUP BY student.stu_name, student.stu_id
2017-11-05 10:47:10,393 log.py[line:109] INFO {'stu_id_4': 3, 'stu_id_3': 1, 'stu_id_2': 2, 'stu_id_1': 2}
2017-11-06 17:02:16,210 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:02:16,210 log.py[line:109] INFO {}
2017-11-06 17:02:16,215 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:02:16,215 log.py[line:109] INFO {}
2017-11-06 17:02:16,216 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:02:16,216 log.py[line:109] INFO {}
2017-11-06 17:02:16,218 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:16,218 log.py[line:109] INFO {}
2017-11-06 17:02:16,219 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:16,219 log.py[line:109] INFO {}
2017-11-06 17:02:16,220 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:02:16,220 log.py[line:109] INFO {}
2017-11-06 17:02:16,221 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:02:16,221 log.py[line:109] INFO {}
2017-11-06 17:02:16,258 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:02:16,258 log.py[line:109] INFO {}
2017-11-06 17:02:16,260 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:02:16,261 log.py[line:109] INFO {}
2017-11-06 17:02:16,263 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:02:16,264 log.py[line:109] INFO {}
2017-11-06 17:02:16,265 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:02:16,265 log.py[line:109] INFO {}
2017-11-06 17:02:16,336 db_operation.py[line:262] ERROR No active exception to reraise
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise
RuntimeError: No active exception to reraise
2017-11-06 17:02:30,352 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:02:30,352 log.py[line:109] INFO {}
2017-11-06 17:02:30,356 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:02:30,356 log.py[line:109] INFO {}
2017-11-06 17:02:30,358 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:02:30,358 log.py[line:109] INFO {}
2017-11-06 17:02:30,360 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:30,360 log.py[line:109] INFO {}
2017-11-06 17:02:30,361 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:30,361 log.py[line:109] INFO {}
2017-11-06 17:02:30,362 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:02:30,362 log.py[line:109] INFO {}
2017-11-06 17:02:30,364 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:02:30,364 log.py[line:109] INFO {}
2017-11-06 17:02:30,366 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:02:30,366 log.py[line:109] INFO {}
2017-11-06 17:02:30,367 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:02:30,367 log.py[line:109] INFO {}
2017-11-06 17:02:30,368 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:02:30,369 log.py[line:109] INFO {}
2017-11-06 17:02:30,370 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:02:30,370 log.py[line:109] INFO {}
2017-11-06 17:02:30,384 db_operation.py[line:262] ERROR 
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise Exception()
Exception
2017-11-06 17:02:46,805 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:02:46,805 log.py[line:109] INFO {}
2017-11-06 17:02:46,807 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:02:46,808 log.py[line:109] INFO {}
2017-11-06 17:02:46,808 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:02:46,809 log.py[line:109] INFO {}
2017-11-06 17:02:46,810 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:46,811 log.py[line:109] INFO {}
2017-11-06 17:02:46,811 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:46,811 log.py[line:109] INFO {}
2017-11-06 17:02:46,812 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:02:46,812 log.py[line:109] INFO {}
2017-11-06 17:02:46,814 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:02:46,814 log.py[line:109] INFO {}
2017-11-06 17:02:46,815 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:02:46,815 log.py[line:109] INFO {}
2017-11-06 17:02:46,816 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:02:46,816 log.py[line:109] INFO {}
2017-11-06 17:02:46,817 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:02:46,818 log.py[line:109] INFO {}
2017-11-06 17:02:46,819 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:02:46,819 log.py[line:109] INFO {}
2017-11-06 17:02:46,827 db_operation.py[line:262] ERROR No active exception to reraise
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise
RuntimeError: No active exception to reraise
2017-11-06 17:02:59,467 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:02:59,467 log.py[line:109] INFO {}
2017-11-06 17:02:59,469 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:02:59,469 log.py[line:109] INFO {}
2017-11-06 17:02:59,470 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:02:59,471 log.py[line:109] INFO {}
2017-11-06 17:02:59,472 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:59,472 log.py[line:109] INFO {}
2017-11-06 17:02:59,473 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:02:59,473 log.py[line:109] INFO {}
2017-11-06 17:02:59,474 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:02:59,474 log.py[line:109] INFO {}
2017-11-06 17:02:59,475 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:02:59,475 log.py[line:109] INFO {}
2017-11-06 17:02:59,477 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:02:59,477 log.py[line:109] INFO {}
2017-11-06 17:02:59,478 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:02:59,478 log.py[line:109] INFO {}
2017-11-06 17:02:59,479 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:02:59,479 log.py[line:109] INFO {}
2017-11-06 17:02:59,480 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:02:59,480 log.py[line:109] INFO {}
2017-11-06 17:02:59,488 db_operation.py[line:262] ERROR cou
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise Exception('cou')
Exception: cou
2017-11-06 17:03:30,983 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:03:30,983 log.py[line:109] INFO {}
2017-11-06 17:03:30,985 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:03:30,986 log.py[line:109] INFO {}
2017-11-06 17:03:30,986 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:03:30,986 log.py[line:109] INFO {}
2017-11-06 17:03:30,988 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:03:30,989 log.py[line:109] INFO {}
2017-11-06 17:03:30,989 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:03:30,989 log.py[line:109] INFO {}
2017-11-06 17:03:30,990 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:03:30,990 log.py[line:109] INFO {}
2017-11-06 17:03:30,991 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:03:30,991 log.py[line:109] INFO {}
2017-11-06 17:03:30,993 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:03:30,993 log.py[line:109] INFO {}
2017-11-06 17:03:30,994 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:03:30,994 log.py[line:109] INFO {}
2017-11-06 17:03:30,995 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:03:30,995 log.py[line:109] INFO {}
2017-11-06 17:03:30,996 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:03:30,996 log.py[line:109] INFO {}
2017-11-06 17:03:31,004 db_operation.py[line:262] ERROR No active exception to reraise
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise
RuntimeError: No active exception to reraise
2017-11-06 17:03:52,473 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 17:03:52,473 log.py[line:109] INFO {}
2017-11-06 17:03:52,477 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 17:03:52,478 log.py[line:109] INFO {}
2017-11-06 17:03:52,479 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 17:03:52,479 log.py[line:109] INFO {}
2017-11-06 17:03:52,482 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 17:03:52,482 log.py[line:109] INFO {}
2017-11-06 17:03:52,483 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 17:03:52,484 log.py[line:109] INFO {}
2017-11-06 17:03:52,485 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 17:03:52,485 log.py[line:109] INFO {}
2017-11-06 17:03:52,490 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 17:03:52,490 log.py[line:109] INFO {}
2017-11-06 17:03:52,491 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 17:03:52,492 log.py[line:109] INFO {}
2017-11-06 17:03:52,493 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 17:03:52,493 log.py[line:109] INFO {}
2017-11-06 17:03:52,495 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 17:03:52,495 log.py[line:109] INFO {}
2017-11-06 17:03:52,497 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 17:03:52,497 log.py[line:109] INFO {}
2017-11-06 17:03:52,514 db_operation.py[line:262] ERROR 
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 260, in <module>
    raise_demo()
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 225, in raise_demo
    raise Exception()
Exception
2017-11-06 21:49:38,206 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:49:38,207 log.py[line:109] INFO {}
2017-11-06 21:49:38,211 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:49:38,211 log.py[line:109] INFO {}
2017-11-06 21:49:38,212 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:49:38,212 log.py[line:109] INFO {}
2017-11-06 21:49:38,217 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:49:38,217 log.py[line:109] INFO {}
2017-11-06 21:49:38,221 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:49:38,221 log.py[line:109] INFO {}
2017-11-06 21:49:38,222 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:49:38,222 log.py[line:109] INFO {}
2017-11-06 21:49:38,224 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:49:38,224 log.py[line:109] INFO {}
2017-11-06 21:49:38,225 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:49:38,225 log.py[line:109] INFO {}
2017-11-06 21:49:38,227 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:49:38,227 log.py[line:109] INFO {}
2017-11-06 21:49:38,228 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:49:38,228 log.py[line:109] INFO {}
2017-11-06 21:49:38,230 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:49:38,231 log.py[line:109] INFO {}
2017-11-06 21:49:38,317 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:49:38,318 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id IS NULL
2017-11-06 21:49:38,318 log.py[line:109] INFO {'stu_age': 100}
2017-11-06 21:49:38,318 log.py[line:109] INFO COMMIT
2017-11-06 21:50:03,744 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:50:03,745 log.py[line:109] INFO {}
2017-11-06 21:50:03,747 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:50:03,747 log.py[line:109] INFO {}
2017-11-06 21:50:03,748 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:50:03,748 log.py[line:109] INFO {}
2017-11-06 21:50:03,751 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:50:03,751 log.py[line:109] INFO {}
2017-11-06 21:50:03,753 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:50:03,753 log.py[line:109] INFO {}
2017-11-06 21:50:03,754 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:50:03,754 log.py[line:109] INFO {}
2017-11-06 21:50:03,755 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:50:03,756 log.py[line:109] INFO {}
2017-11-06 21:50:03,757 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:50:03,757 log.py[line:109] INFO {}
2017-11-06 21:50:03,759 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:50:03,759 log.py[line:109] INFO {}
2017-11-06 21:50:03,760 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:50:03,760 log.py[line:109] INFO {}
2017-11-06 21:50:03,762 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:50:03,762 log.py[line:109] INFO {}
2017-11-06 21:50:03,781 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:50:03,783 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id IS NULL
2017-11-06 21:50:03,783 log.py[line:109] INFO {'stu_age': 100}
2017-11-06 21:50:03,784 log.py[line:109] INFO COMMIT
2017-11-06 21:50:03,785 db_operation.py[line:231] INFO update success
2017-11-06 21:50:19,560 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:50:19,560 log.py[line:109] INFO {}
2017-11-06 21:50:19,563 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:50:19,563 log.py[line:109] INFO {}
2017-11-06 21:50:19,564 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:50:19,564 log.py[line:109] INFO {}
2017-11-06 21:50:19,566 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:50:19,566 log.py[line:109] INFO {}
2017-11-06 21:50:19,568 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:50:19,568 log.py[line:109] INFO {}
2017-11-06 21:50:19,569 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:50:19,570 log.py[line:109] INFO {}
2017-11-06 21:50:19,572 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:50:19,572 log.py[line:109] INFO {}
2017-11-06 21:50:19,574 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:50:19,574 log.py[line:109] INFO {}
2017-11-06 21:50:19,576 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:50:19,577 log.py[line:109] INFO {}
2017-11-06 21:50:19,578 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:50:19,579 log.py[line:109] INFO {}
2017-11-06 21:50:19,580 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:50:19,580 log.py[line:109] INFO {}
2017-11-06 21:50:19,601 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:50:19,602 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id IS NULL
2017-11-06 21:50:19,602 log.py[line:109] INFO {'stu_age': 100}
2017-11-06 21:50:19,603 log.py[line:109] INFO COMMIT
2017-11-06 21:51:09,126 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:51:09,126 log.py[line:109] INFO {}
2017-11-06 21:51:09,129 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:51:09,129 log.py[line:109] INFO {}
2017-11-06 21:51:09,131 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:51:09,131 log.py[line:109] INFO {}
2017-11-06 21:51:09,134 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:51:09,134 log.py[line:109] INFO {}
2017-11-06 21:51:09,135 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:51:09,135 log.py[line:109] INFO {}
2017-11-06 21:51:09,137 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:51:09,137 log.py[line:109] INFO {}
2017-11-06 21:51:09,139 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:51:09,139 log.py[line:109] INFO {}
2017-11-06 21:51:09,141 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:51:09,141 log.py[line:109] INFO {}
2017-11-06 21:51:09,143 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:51:09,143 log.py[line:109] INFO {}
2017-11-06 21:51:09,144 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:51:09,144 log.py[line:109] INFO {}
2017-11-06 21:51:09,146 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:51:09,146 log.py[line:109] INFO {}
2017-11-06 21:51:09,162 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:51:09,163 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id IS NULL
2017-11-06 21:51:09,163 log.py[line:109] INFO {'stu_age': 100}
2017-11-06 21:51:09,164 log.py[line:109] INFO COMMIT
2017-11-06 21:51:53,146 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:51:53,146 log.py[line:109] INFO {}
2017-11-06 21:51:53,148 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:51:53,148 log.py[line:109] INFO {}
2017-11-06 21:51:53,149 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:51:53,149 log.py[line:109] INFO {}
2017-11-06 21:51:53,151 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:51:53,151 log.py[line:109] INFO {}
2017-11-06 21:51:53,152 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:51:53,152 log.py[line:109] INFO {}
2017-11-06 21:51:53,153 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:51:53,153 log.py[line:109] INFO {}
2017-11-06 21:51:53,155 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:51:53,155 log.py[line:109] INFO {}
2017-11-06 21:51:53,156 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:51:53,156 log.py[line:109] INFO {}
2017-11-06 21:51:53,157 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:51:53,157 log.py[line:109] INFO {}
2017-11-06 21:51:53,158 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:51:53,158 log.py[line:109] INFO {}
2017-11-06 21:51:53,159 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:51:53,159 log.py[line:109] INFO {}
2017-11-06 21:51:53,172 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:51:53,173 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:51:53,173 log.py[line:109] INFO {'stu_id_1': 1, 'stu_age': 25}
2017-11-06 21:51:53,174 log.py[line:109] INFO COMMIT
2017-11-06 21:52:02,833 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:52:02,834 log.py[line:109] INFO {}
2017-11-06 21:52:02,836 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:52:02,837 log.py[line:109] INFO {}
2017-11-06 21:52:02,838 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:52:02,838 log.py[line:109] INFO {}
2017-11-06 21:52:02,841 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:02,841 log.py[line:109] INFO {}
2017-11-06 21:52:02,843 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:02,843 log.py[line:109] INFO {}
2017-11-06 21:52:02,844 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:52:02,844 log.py[line:109] INFO {}
2017-11-06 21:52:02,846 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:52:02,846 log.py[line:109] INFO {}
2017-11-06 21:52:02,850 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:52:02,851 log.py[line:109] INFO {}
2017-11-06 21:52:02,854 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:52:02,854 log.py[line:109] INFO {}
2017-11-06 21:52:02,860 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:52:02,862 log.py[line:109] INFO {}
2017-11-06 21:52:02,864 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:52:02,864 log.py[line:109] INFO {}
2017-11-06 21:52:02,887 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:52:02,889 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:52:02,890 log.py[line:109] INFO {'stu_id_1': 1, 'stu_age': 25}
2017-11-06 21:52:02,892 log.py[line:109] INFO COMMIT
2017-11-06 21:52:14,449 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:52:14,450 log.py[line:109] INFO {}
2017-11-06 21:52:14,452 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:52:14,453 log.py[line:109] INFO {}
2017-11-06 21:52:14,454 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:52:14,454 log.py[line:109] INFO {}
2017-11-06 21:52:14,455 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:14,456 log.py[line:109] INFO {}
2017-11-06 21:52:14,456 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:14,456 log.py[line:109] INFO {}
2017-11-06 21:52:14,457 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:52:14,457 log.py[line:109] INFO {}
2017-11-06 21:52:14,459 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:52:14,459 log.py[line:109] INFO {}
2017-11-06 21:52:14,460 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:52:14,461 log.py[line:109] INFO {}
2017-11-06 21:52:14,462 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:52:14,462 log.py[line:109] INFO {}
2017-11-06 21:52:14,463 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:52:14,463 log.py[line:109] INFO {}
2017-11-06 21:52:14,464 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:52:14,464 log.py[line:109] INFO {}
2017-11-06 21:52:14,481 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:52:14,482 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:52:14,482 log.py[line:109] INFO {'stu_age': 26, 'stu_id_1': 1}
2017-11-06 21:52:14,483 log.py[line:109] INFO COMMIT
2017-11-06 21:52:37,815 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:52:37,815 log.py[line:109] INFO {}
2017-11-06 21:52:37,819 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:52:37,820 log.py[line:109] INFO {}
2017-11-06 21:52:37,820 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:52:37,821 log.py[line:109] INFO {}
2017-11-06 21:52:37,823 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:37,823 log.py[line:109] INFO {}
2017-11-06 21:52:37,824 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:37,824 log.py[line:109] INFO {}
2017-11-06 21:52:37,825 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:52:37,825 log.py[line:109] INFO {}
2017-11-06 21:52:37,828 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:52:37,829 log.py[line:109] INFO {}
2017-11-06 21:52:37,833 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:52:37,833 log.py[line:109] INFO {}
2017-11-06 21:52:37,834 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:52:37,834 log.py[line:109] INFO {}
2017-11-06 21:52:37,836 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:52:37,837 log.py[line:109] INFO {}
2017-11-06 21:52:37,838 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:52:37,838 log.py[line:109] INFO {}
2017-11-06 21:52:37,864 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:52:37,865 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:52:37,865 log.py[line:109] INFO {'stu_id_1': 1, 'stu_age': 26}
2017-11-06 21:52:37,866 log.py[line:109] INFO COMMIT
2017-11-06 21:52:43,589 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:52:43,590 log.py[line:109] INFO {}
2017-11-06 21:52:43,592 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:52:43,592 log.py[line:109] INFO {}
2017-11-06 21:52:43,593 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:52:43,593 log.py[line:109] INFO {}
2017-11-06 21:52:43,595 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:43,595 log.py[line:109] INFO {}
2017-11-06 21:52:43,596 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:43,596 log.py[line:109] INFO {}
2017-11-06 21:52:43,597 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:52:43,597 log.py[line:109] INFO {}
2017-11-06 21:52:43,599 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:52:43,599 log.py[line:109] INFO {}
2017-11-06 21:52:43,600 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:52:43,600 log.py[line:109] INFO {}
2017-11-06 21:52:43,601 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:52:43,601 log.py[line:109] INFO {}
2017-11-06 21:52:43,602 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:52:43,603 log.py[line:109] INFO {}
2017-11-06 21:52:43,604 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:52:43,604 log.py[line:109] INFO {}
2017-11-06 21:52:43,619 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:52:43,620 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:52:43,620 log.py[line:109] INFO {'stu_id_1': 1, 'stu_age': 26}
2017-11-06 21:52:43,621 log.py[line:109] INFO COMMIT
2017-11-06 21:52:46,084 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-06 21:52:46,084 log.py[line:109] INFO {}
2017-11-06 21:52:46,087 log.py[line:109] INFO SELECT DATABASE()
2017-11-06 21:52:46,087 log.py[line:109] INFO {}
2017-11-06 21:52:46,088 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-06 21:52:46,088 log.py[line:109] INFO {}
2017-11-06 21:52:46,090 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:46,090 log.py[line:109] INFO {}
2017-11-06 21:52:46,091 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-06 21:52:46,091 log.py[line:109] INFO {}
2017-11-06 21:52:46,092 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-06 21:52:46,092 log.py[line:109] INFO {}
2017-11-06 21:52:46,094 log.py[line:109] INFO DESCRIBE `vip`
2017-11-06 21:52:46,094 log.py[line:109] INFO {}
2017-11-06 21:52:46,095 log.py[line:109] INFO DESCRIBE `cus`
2017-11-06 21:52:46,095 log.py[line:109] INFO {}
2017-11-06 21:52:46,096 log.py[line:109] INFO DESCRIBE `course`
2017-11-06 21:52:46,096 log.py[line:109] INFO {}
2017-11-06 21:52:46,098 log.py[line:109] INFO DESCRIBE `student`
2017-11-06 21:52:46,098 log.py[line:109] INFO {}
2017-11-06 21:52:46,099 log.py[line:109] INFO DESCRIBE `grade`
2017-11-06 21:52:46,099 log.py[line:109] INFO {}
2017-11-06 21:52:46,115 log.py[line:109] INFO BEGIN (implicit)
2017-11-06 21:52:46,116 log.py[line:109] INFO UPDATE student SET stu_age=%(stu_age)s WHERE student.stu_id = %(stu_id_1)s
2017-11-06 21:52:46,116 log.py[line:109] INFO {'stu_id_1': 1, 'stu_age': 26}
2017-11-06 21:52:46,118 log.py[line:109] INFO COMMIT
2017-11-07 10:30:02,048 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:30:02,077 log.py[line:109] INFO {}
2017-11-07 10:30:02,079 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:30:02,079 log.py[line:109] INFO {}
2017-11-07 10:30:02,080 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:30:02,081 log.py[line:109] INFO {}
2017-11-07 10:30:02,083 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:02,084 log.py[line:109] INFO {}
2017-11-07 10:30:02,085 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:02,085 log.py[line:109] INFO {}
2017-11-07 10:30:02,086 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:30:02,086 log.py[line:109] INFO {}
2017-11-07 10:30:02,088 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:30:02,088 log.py[line:109] INFO {}
2017-11-07 10:30:02,089 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:30:02,090 log.py[line:109] INFO {}
2017-11-07 10:30:02,091 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:30:02,091 log.py[line:109] INFO {}
2017-11-07 10:30:02,093 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:30:02,093 log.py[line:109] INFO {}
2017-11-07 10:30:02,094 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:30:02,094 log.py[line:109] INFO {}
2017-11-07 10:30:02,166 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:30:02,167 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:30:02,167 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 10:30:16,821 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:30:16,822 log.py[line:109] INFO {}
2017-11-07 10:30:16,824 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:30:16,824 log.py[line:109] INFO {}
2017-11-07 10:30:16,825 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:30:16,825 log.py[line:109] INFO {}
2017-11-07 10:30:16,827 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:16,828 log.py[line:109] INFO {}
2017-11-07 10:30:16,829 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:16,829 log.py[line:109] INFO {}
2017-11-07 10:30:16,829 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:30:16,830 log.py[line:109] INFO {}
2017-11-07 10:30:16,831 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:30:16,831 log.py[line:109] INFO {}
2017-11-07 10:30:16,832 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:30:16,832 log.py[line:109] INFO {}
2017-11-07 10:30:16,833 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:30:16,833 log.py[line:109] INFO {}
2017-11-07 10:30:16,834 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:30:16,834 log.py[line:109] INFO {}
2017-11-07 10:30:16,835 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:30:16,835 log.py[line:109] INFO {}
2017-11-07 10:30:16,849 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:30:16,850 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:30:16,850 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 10:30:48,261 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:30:48,262 log.py[line:109] INFO {}
2017-11-07 10:30:48,263 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:30:48,264 log.py[line:109] INFO {}
2017-11-07 10:30:48,264 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:30:48,265 log.py[line:109] INFO {}
2017-11-07 10:30:48,266 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:48,266 log.py[line:109] INFO {}
2017-11-07 10:30:48,267 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:30:48,267 log.py[line:109] INFO {}
2017-11-07 10:30:48,268 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:30:48,268 log.py[line:109] INFO {}
2017-11-07 10:30:48,269 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:30:48,270 log.py[line:109] INFO {}
2017-11-07 10:30:48,271 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:30:48,271 log.py[line:109] INFO {}
2017-11-07 10:30:48,272 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:30:48,272 log.py[line:109] INFO {}
2017-11-07 10:30:48,273 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:30:48,273 log.py[line:109] INFO {}
2017-11-07 10:30:48,274 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:30:48,274 log.py[line:109] INFO {}
2017-11-07 10:30:48,282 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:30:48,283 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:30:48,283 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 10:31:04,240 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:31:04,241 log.py[line:109] INFO {}
2017-11-07 10:31:04,243 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:31:04,243 log.py[line:109] INFO {}
2017-11-07 10:31:04,244 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:31:04,244 log.py[line:109] INFO {}
2017-11-07 10:31:04,246 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:31:04,246 log.py[line:109] INFO {}
2017-11-07 10:31:04,246 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:31:04,247 log.py[line:109] INFO {}
2017-11-07 10:31:04,247 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:31:04,248 log.py[line:109] INFO {}
2017-11-07 10:31:04,250 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:31:04,250 log.py[line:109] INFO {}
2017-11-07 10:31:04,254 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:31:04,254 log.py[line:109] INFO {}
2017-11-07 10:31:04,255 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:31:04,255 log.py[line:109] INFO {}
2017-11-07 10:31:04,256 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:31:04,256 log.py[line:109] INFO {}
2017-11-07 10:31:04,257 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:31:04,257 log.py[line:109] INFO {}
2017-11-07 10:31:04,267 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:31:04,267 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:31:04,268 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 10:31:19,165 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:31:19,165 log.py[line:109] INFO {}
2017-11-07 10:31:19,168 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:31:19,168 log.py[line:109] INFO {}
2017-11-07 10:31:19,169 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:31:19,170 log.py[line:109] INFO {}
2017-11-07 10:31:19,172 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:31:19,172 log.py[line:109] INFO {}
2017-11-07 10:31:19,173 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:31:19,173 log.py[line:109] INFO {}
2017-11-07 10:31:19,174 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:31:19,174 log.py[line:109] INFO {}
2017-11-07 10:31:19,175 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:31:19,175 log.py[line:109] INFO {}
2017-11-07 10:31:19,177 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:31:19,177 log.py[line:109] INFO {}
2017-11-07 10:31:19,178 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:31:19,178 log.py[line:109] INFO {}
2017-11-07 10:31:19,179 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:31:19,180 log.py[line:109] INFO {}
2017-11-07 10:31:19,181 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:31:19,181 log.py[line:109] INFO {}
2017-11-07 10:31:19,191 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:31:19,192 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:31:19,192 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 10:45:41,776 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 10:45:41,776 log.py[line:109] INFO {}
2017-11-07 10:45:41,779 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 10:45:41,779 log.py[line:109] INFO {}
2017-11-07 10:45:41,780 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 10:45:41,780 log.py[line:109] INFO {}
2017-11-07 10:45:41,781 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 10:45:41,781 log.py[line:109] INFO {}
2017-11-07 10:45:41,782 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 10:45:41,782 log.py[line:109] INFO {}
2017-11-07 10:45:41,783 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 10:45:41,783 log.py[line:109] INFO {}
2017-11-07 10:45:41,784 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 10:45:41,784 log.py[line:109] INFO {}
2017-11-07 10:45:41,785 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 10:45:41,785 log.py[line:109] INFO {}
2017-11-07 10:45:41,787 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 10:45:41,787 log.py[line:109] INFO {}
2017-11-07 10:45:41,788 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 10:45:41,788 log.py[line:109] INFO {}
2017-11-07 10:45:41,789 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 10:45:41,789 log.py[line:109] INFO {}
2017-11-07 10:45:41,797 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 10:45:41,798 log.py[line:109] INFO SELECT student.stu_name AS student_stu_name 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 10:45:41,798 log.py[line:109] INFO {'stu_name_1': '洛杉矶湖人'}
2017-11-07 15:05:46,366 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 15:05:46,394 log.py[line:109] INFO {}
2017-11-07 15:05:46,398 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 15:05:46,398 log.py[line:109] INFO {}
2017-11-07 15:05:46,399 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 15:05:46,399 log.py[line:109] INFO {}
2017-11-07 15:05:46,400 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 15:05:46,401 log.py[line:109] INFO {}
2017-11-07 15:05:46,401 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 15:05:46,401 log.py[line:109] INFO {}
2017-11-07 15:05:46,402 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 15:05:46,402 log.py[line:109] INFO {}
2017-11-07 15:05:46,404 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 15:05:46,404 log.py[line:109] INFO {}
2017-11-07 15:05:46,405 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 15:05:46,405 log.py[line:109] INFO {}
2017-11-07 15:05:46,406 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 15:05:46,406 log.py[line:109] INFO {}
2017-11-07 15:05:46,407 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 15:05:46,408 log.py[line:109] INFO {}
2017-11-07 15:05:46,409 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 15:05:46,409 log.py[line:109] INFO {}
2017-11-07 15:05:46,470 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 15:05:46,471 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 15:05:46,471 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 16:14:20,371 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 16:14:20,371 log.py[line:109] INFO {}
2017-11-07 16:14:20,377 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 16:14:20,377 log.py[line:109] INFO {}
2017-11-07 16:14:20,379 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 16:14:20,380 log.py[line:109] INFO {}
2017-11-07 16:14:20,383 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 16:14:20,384 log.py[line:109] INFO {}
2017-11-07 16:14:20,386 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 16:14:20,387 log.py[line:109] INFO {}
2017-11-07 16:14:20,389 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 16:14:20,390 log.py[line:109] INFO {}
2017-11-07 16:14:20,393 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 16:14:20,393 log.py[line:109] INFO {}
2017-11-07 16:14:20,397 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 16:14:20,398 log.py[line:109] INFO {}
2017-11-07 16:14:20,401 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 16:14:20,401 log.py[line:109] INFO {}
2017-11-07 16:14:20,404 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 16:14:20,404 log.py[line:109] INFO {}
2017-11-07 16:14:20,407 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 16:14:20,408 log.py[line:109] INFO {}
2017-11-07 16:14:23,207 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 16:14:23,226 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 16:14:23,227 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 16:14:27,015 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-07 16:14:27,016 log.py[line:109] INFO {'param_1': 2}
2017-11-07 16:15:15,407 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 16:15:15,408 log.py[line:109] INFO {}
2017-11-07 16:15:15,415 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 16:15:15,416 log.py[line:109] INFO {}
2017-11-07 16:15:15,419 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 16:15:15,420 log.py[line:109] INFO {}
2017-11-07 16:15:15,425 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 16:15:15,426 log.py[line:109] INFO {}
2017-11-07 16:15:15,428 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 16:15:15,429 log.py[line:109] INFO {}
2017-11-07 16:15:15,431 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 16:15:15,432 log.py[line:109] INFO {}
2017-11-07 16:15:15,436 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 16:15:15,437 log.py[line:109] INFO {}
2017-11-07 16:15:15,440 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 16:15:15,441 log.py[line:109] INFO {}
2017-11-07 16:15:15,445 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 16:15:15,445 log.py[line:109] INFO {}
2017-11-07 16:15:15,449 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 16:15:15,450 log.py[line:109] INFO {}
2017-11-07 16:15:15,453 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 16:15:15,453 log.py[line:109] INFO {}
2017-11-07 16:15:17,193 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 16:15:17,230 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 16:15:17,230 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 16:15:19,866 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-07 16:15:19,867 log.py[line:109] INFO {'param_1': 2}
2017-11-07 16:15:40,045 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 16:15:40,046 log.py[line:109] INFO {}
2017-11-07 16:15:40,051 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 16:15:40,052 log.py[line:109] INFO {}
2017-11-07 16:15:40,054 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 16:15:40,055 log.py[line:109] INFO {}
2017-11-07 16:15:40,059 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 16:15:40,060 log.py[line:109] INFO {}
2017-11-07 16:15:40,062 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 16:15:40,063 log.py[line:109] INFO {}
2017-11-07 16:15:40,065 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 16:15:40,065 log.py[line:109] INFO {}
2017-11-07 16:15:40,069 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 16:15:40,070 log.py[line:109] INFO {}
2017-11-07 16:15:40,073 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 16:15:40,074 log.py[line:109] INFO {}
2017-11-07 16:15:40,077 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 16:15:40,077 log.py[line:109] INFO {}
2017-11-07 16:15:40,080 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 16:15:40,080 log.py[line:109] INFO {}
2017-11-07 16:15:40,084 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 16:15:40,084 log.py[line:109] INFO {}
2017-11-07 16:15:47,503 log.py[line:109] INFO BEGIN (implicit)
2017-11-07 16:15:47,505 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_name regexp %(stu_name_1)s
2017-11-07 16:15:47,505 log.py[line:109] INFO {'stu_name_1': '步'}
2017-11-07 16:15:53,181 log.py[line:109] INFO SELECT course.cou_id AS course_cou_id, course.cou_name AS course_cou_name 
FROM course, grade 
WHERE %(param_1)s = grade.grade_stu_id AND course.cou_id = grade.grade_cou_id
2017-11-07 16:15:53,181 log.py[line:109] INFO {'param_1': 2}
2017-11-07 16:18:34,397 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-07 16:18:34,397 log.py[line:109] INFO {}
2017-11-07 16:18:34,400 log.py[line:109] INFO SELECT DATABASE()
2017-11-07 16:18:34,400 log.py[line:109] INFO {}
2017-11-07 16:18:34,401 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-07 16:18:34,401 log.py[line:109] INFO {}
2017-11-07 16:18:34,403 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-07 16:18:34,404 log.py[line:109] INFO {}
2017-11-07 16:18:34,405 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-07 16:18:34,405 log.py[line:109] INFO {}
2017-11-07 16:18:34,407 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-07 16:18:34,407 log.py[line:109] INFO {}
2017-11-07 16:18:34,408 log.py[line:109] INFO DESCRIBE `student`
2017-11-07 16:18:34,409 log.py[line:109] INFO {}
2017-11-07 16:18:34,412 log.py[line:109] INFO DESCRIBE `cus`
2017-11-07 16:18:34,412 log.py[line:109] INFO {}
2017-11-07 16:18:34,413 log.py[line:109] INFO DESCRIBE `vip`
2017-11-07 16:18:34,413 log.py[line:109] INFO {}
2017-11-07 16:18:34,414 log.py[line:109] INFO DESCRIBE `course`
2017-11-07 16:18:34,415 log.py[line:109] INFO {}
2017-11-07 16:18:34,416 log.py[line:109] INFO DESCRIBE `grade`
2017-11-07 16:18:34,416 log.py[line:109] INFO {}
2017-11-10 21:01:25,101 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-10 21:01:25,127 log.py[line:109] INFO {}
2017-11-10 21:01:25,219 log.py[line:109] INFO SELECT DATABASE()
2017-11-10 21:01:25,219 log.py[line:109] INFO {}
2017-11-10 21:01:25,254 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-10 21:01:25,255 log.py[line:109] INFO {}
2017-11-10 21:01:25,291 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-10 21:01:25,291 log.py[line:109] INFO {}
2017-11-10 21:01:25,295 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-10 21:01:25,295 log.py[line:109] INFO {}
2017-11-10 21:01:25,297 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-10 21:01:25,298 log.py[line:109] INFO {}
2017-11-10 21:01:25,314 log.py[line:109] INFO DESCRIBE `vip`
2017-11-10 21:01:25,315 log.py[line:109] INFO {}
2017-11-10 21:01:25,433 log.py[line:109] INFO DESCRIBE `student`
2017-11-10 21:01:25,434 log.py[line:109] INFO {}
2017-11-10 21:01:25,437 log.py[line:109] INFO DESCRIBE `cus`
2017-11-10 21:01:25,437 log.py[line:109] INFO {}
2017-11-10 21:01:25,441 log.py[line:109] INFO DESCRIBE `course`
2017-11-10 21:01:25,442 log.py[line:109] INFO {}
2017-11-10 21:01:25,479 log.py[line:109] INFO DESCRIBE `grade`
2017-11-10 21:01:25,480 log.py[line:109] INFO {}
2017-11-10 21:01:31,644 log.py[line:109] INFO BEGIN (implicit)
2017-11-10 21:01:31,646 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-11-10 21:01:31,647 log.py[line:109] INFO {'stu_age': 25, 'stu_name': '你好', 'stu_id': 11}
2017-11-10 21:01:31,760 log.py[line:109] INFO ROLLBACK
2017-11-10 21:01:33,088 db_operation.py[line:211] ERROR (pymysql.err.IntegrityError) (1062, "Duplicate entry '你好' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 11}]
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '你好' for key 'stu_name'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 207, in testAdd
    session.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 906, in commit
    self.transaction.commit()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 461, in commit
    self._prepare_impl()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 441, in _prepare_impl
    self.session.flush()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2171, in flush
    self._flush(objects)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2291, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/langhelpers.py", line 66, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 187, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/session.py", line 2255, in _flush
    flush_context.execute()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 389, in execute
    rec.execute(self)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py", line 548, in execute
    uow
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 181, in save_obj
    mapper, table, insert)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py", line 799, in _emit_insert_statements
    execute(statement, multiparams)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 945, in execute
    return meth(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception
    exc_info
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/util/compat.py", line 186, in reraise
    raise value.with_traceback(tb)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context
    context)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute
    cursor.execute(statement, parameters)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 166, in execute
    result = self._query(query)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 856, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1057, in _read_query_result
    result.read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1340, in read
    first_packet = self.connection._read_packet()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 1014, in _read_packet
    packet.check_error()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/connections.py", line 393, in check_error
    err.raise_mysql_exception(self._data)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pymysql/err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '你好' for key 'stu_name'") [SQL: 'INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)'] [parameters: {'stu_age': 25, 'stu_name': '你好', 'stu_id': 11}]
2017-11-10 21:01:55,894 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-10 21:01:55,895 log.py[line:109] INFO {}
2017-11-10 21:01:55,905 log.py[line:109] INFO SELECT DATABASE()
2017-11-10 21:01:55,906 log.py[line:109] INFO {}
2017-11-10 21:01:55,910 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-10 21:01:55,911 log.py[line:109] INFO {}
2017-11-10 21:01:55,916 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-10 21:01:55,916 log.py[line:109] INFO {}
2017-11-10 21:01:55,920 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-10 21:01:55,921 log.py[line:109] INFO {}
2017-11-10 21:01:55,923 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-10 21:01:55,924 log.py[line:109] INFO {}
2017-11-10 21:01:55,929 log.py[line:109] INFO DESCRIBE `course`
2017-11-10 21:01:55,929 log.py[line:109] INFO {}
2017-11-10 21:01:55,935 log.py[line:109] INFO DESCRIBE `cus`
2017-11-10 21:01:55,936 log.py[line:109] INFO {}
2017-11-10 21:01:55,939 log.py[line:109] INFO DESCRIBE `student`
2017-11-10 21:01:55,940 log.py[line:109] INFO {}
2017-11-10 21:01:55,944 log.py[line:109] INFO DESCRIBE `grade`
2017-11-10 21:01:55,945 log.py[line:109] INFO {}
2017-11-10 21:01:55,950 log.py[line:109] INFO DESCRIBE `vip`
2017-11-10 21:01:55,951 log.py[line:109] INFO {}
2017-11-10 21:01:59,503 log.py[line:109] INFO BEGIN (implicit)
2017-11-10 21:01:59,506 log.py[line:109] INFO INSERT INTO student (stu_id, stu_name, stu_age) VALUES (%(stu_id)s, %(stu_name)s, %(stu_age)s)
2017-11-10 21:01:59,507 log.py[line:109] INFO {'stu_age': 25, 'stu_name': 'Ingram', 'stu_id': 11}
2017-11-10 21:01:59,550 log.py[line:109] INFO COMMIT
2017-11-13 16:52:47,932 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-13 16:52:47,966 log.py[line:109] INFO {}
2017-11-13 16:52:48,082 log.py[line:109] INFO SELECT DATABASE()
2017-11-13 16:52:48,083 log.py[line:109] INFO {}
2017-11-13 16:52:48,129 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-13 16:52:48,129 log.py[line:109] INFO {}
2017-11-13 16:52:48,132 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-13 16:52:48,132 log.py[line:109] INFO {}
2017-11-13 16:52:48,133 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-13 16:52:48,133 log.py[line:109] INFO {}
2017-11-13 16:52:48,134 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-13 16:52:48,134 log.py[line:109] INFO {}
2017-11-13 16:52:48,142 log.py[line:109] INFO DESCRIBE `vip`
2017-11-13 16:52:48,142 log.py[line:109] INFO {}
2017-11-13 16:52:48,252 log.py[line:109] INFO DESCRIBE `grade`
2017-11-13 16:52:48,252 log.py[line:109] INFO {}
2017-11-13 16:52:48,265 log.py[line:109] INFO DESCRIBE `cus`
2017-11-13 16:52:48,266 log.py[line:109] INFO {}
2017-11-13 16:52:48,269 log.py[line:109] INFO DESCRIBE `course`
2017-11-13 16:52:48,269 log.py[line:109] INFO {}
2017-11-13 16:52:48,273 log.py[line:109] INFO DESCRIBE `student`
2017-11-13 16:52:48,273 log.py[line:109] INFO {}
2017-11-13 16:52:48,344 log.py[line:109] INFO BEGIN (implicit)
2017-11-13 16:52:48,345 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_id = %(stu_id_1)s
2017-11-13 16:52:48,345 log.py[line:109] INFO {'stu_id_1': 113}
2017-11-13 16:52:48,357 db_operation.py[line:314] ERROR (100, 'stu_id is not exists')
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 312, in <module>
    test_exce(113)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 249, in test_exce
    raise Parameter_Exception(100, 'stu_id is not exists')
Parameter_Exception: (100, 'stu_id is not exists')
2017-11-13 16:53:11,532 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-13 16:53:11,532 log.py[line:109] INFO {}
2017-11-13 16:53:11,534 log.py[line:109] INFO SELECT DATABASE()
2017-11-13 16:53:11,534 log.py[line:109] INFO {}
2017-11-13 16:53:11,535 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-13 16:53:11,535 log.py[line:109] INFO {}
2017-11-13 16:53:11,537 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-13 16:53:11,538 log.py[line:109] INFO {}
2017-11-13 16:53:11,539 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-13 16:53:11,539 log.py[line:109] INFO {}
2017-11-13 16:53:11,539 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-13 16:53:11,540 log.py[line:109] INFO {}
2017-11-13 16:53:11,541 log.py[line:109] INFO DESCRIBE `cus`
2017-11-13 16:53:11,541 log.py[line:109] INFO {}
2017-11-13 16:53:11,543 log.py[line:109] INFO DESCRIBE `student`
2017-11-13 16:53:11,543 log.py[line:109] INFO {}
2017-11-13 16:53:11,545 log.py[line:109] INFO DESCRIBE `vip`
2017-11-13 16:53:11,545 log.py[line:109] INFO {}
2017-11-13 16:53:11,546 log.py[line:109] INFO DESCRIBE `grade`
2017-11-13 16:53:11,546 log.py[line:109] INFO {}
2017-11-13 16:53:11,547 log.py[line:109] INFO DESCRIBE `course`
2017-11-13 16:53:11,548 log.py[line:109] INFO {}
2017-11-13 16:53:11,558 db_operation.py[line:319] ERROR division by zero
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 313, in <module>
    test_exce(113)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 247, in test_exce
    1/0
ZeroDivisionError: division by zero
2017-11-13 16:54:07,342 log.py[line:109] INFO SHOW VARIABLES LIKE 'sql_mode'
2017-11-13 16:54:07,343 log.py[line:109] INFO {}
2017-11-13 16:54:07,346 log.py[line:109] INFO SELECT DATABASE()
2017-11-13 16:54:07,346 log.py[line:109] INFO {}
2017-11-13 16:54:07,347 log.py[line:109] INFO show collation where `Charset` = 'utf8' and `Collation` = 'utf8_bin'
2017-11-13 16:54:07,347 log.py[line:109] INFO {}
2017-11-13 16:54:07,349 log.py[line:109] INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2017-11-13 16:54:07,349 log.py[line:109] INFO {}
2017-11-13 16:54:07,351 log.py[line:109] INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2017-11-13 16:54:07,351 log.py[line:109] INFO {}
2017-11-13 16:54:07,352 log.py[line:109] INFO SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8) COLLATE utf8_bin AS anon_1
2017-11-13 16:54:07,353 log.py[line:109] INFO {}
2017-11-13 16:54:07,355 log.py[line:109] INFO DESCRIBE `cus`
2017-11-13 16:54:07,355 log.py[line:109] INFO {}
2017-11-13 16:54:07,356 log.py[line:109] INFO DESCRIBE `course`
2017-11-13 16:54:07,356 log.py[line:109] INFO {}
2017-11-13 16:54:07,358 log.py[line:109] INFO DESCRIBE `student`
2017-11-13 16:54:07,358 log.py[line:109] INFO {}
2017-11-13 16:54:07,359 log.py[line:109] INFO DESCRIBE `grade`
2017-11-13 16:54:07,359 log.py[line:109] INFO {}
2017-11-13 16:54:07,361 log.py[line:109] INFO DESCRIBE `vip`
2017-11-13 16:54:07,361 log.py[line:109] INFO {}
2017-11-13 16:54:07,378 log.py[line:109] INFO BEGIN (implicit)
2017-11-13 16:54:07,379 log.py[line:109] INFO SELECT student.stu_id AS student_stu_id, student.stu_name AS student_stu_name, student.stu_age AS student_stu_age 
FROM student 
WHERE student.stu_id = %(stu_id_1)s
2017-11-13 16:54:07,379 log.py[line:109] INFO {'stu_id_1': 113}
2017-11-13 16:54:07,380 db_operation.py[line:314] ERROR (100, 'stu_id is not exists')
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 312, in <module>
    test_exce(113)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 249, in test_exce
    raise Parameter_Exception(100, 'stu_id is not exists')
Parameter_Exception: (100, 'stu_id is not exists')
2017-11-13 16:54:46,322 db_operation.py[line:314] ERROR (100, 'stu_id is not exists')
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 312, in <module>
    test_exce(113)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 249, in test_exce
    raise Parameter_Exception(100, 'stu_id is not exists')
Parameter_Exception: (100, 'stu_id is not exists')
2017-11-13 16:55:24,503 db_operation.py[line:319] ERROR invalid literal for int() with base 10: 'nihc'
Traceback (most recent call last):
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 313, in <module>
    test_exce(113)
  File "/Users/admin/Documents/PythonProject/Login/Database/db_operation.py", line 247, in test_exce
    int('nihc')
ValueError: invalid literal for int() with base 10: 'nihc'
